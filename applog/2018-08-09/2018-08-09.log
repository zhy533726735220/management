2018-08-09 10:40:42 -Starting App on zhy with PID 9008 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 10:40:42 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 10:40:42 -The following profiles are active: dev
2018-08-09 10:40:42 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66f57048: startup date [Thu Aug 09 10:40:42 CST 2018]; root of context hierarchy
2018-08-09 10:40:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 10:40:43 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2fe0e2f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:40:43 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$1134e782] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:40:43 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:40:43 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:40:43 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 10:40:43 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:40:43 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:40:43 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:40:43 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:40:43 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:40:43 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 10:40:43 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 10:40:43 -Starting service [Tomcat]
2018-08-09 10:40:43 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 10:40:43 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 10:40:43 -Initializing Spring embedded WebApplicationContext
2018-08-09 10:40:43 -Root WebApplicationContext: initialization completed in 1297 ms
2018-08-09 10:40:44 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 10:40:44 -Servlet dispatcherServlet mapped to [/]
2018-08-09 10:40:44 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 10:40:44 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 10:40:44 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 10:40:44 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 10:40:44 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 10:40:44 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 10:40:44 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66f57048: startup date [Thu Aug 09 10:40:42 CST 2018]; root of context hierarchy
2018-08-09 10:40:44 -{dataSource-1} inited
2018-08-09 10:40:44 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 10:40:44 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:40:44 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66f57048: startup date [Thu Aug 09 10:40:42 CST 2018]; root of context hierarchy
2018-08-09 10:40:44 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 10:40:44 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 10:40:44 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 10:40:44 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 10:40:44 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 10:40:44 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 10:40:44 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 10:40:44 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 10:40:44 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 10:40:44 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 10:40:44 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 10:40:44 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 10:40:44 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 10:40:44 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 10:40:44 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 10:40:44 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 10:40:44 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 10:40:44 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 10:40:44 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 10:40:44 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 10:40:44 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 10:40:44 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 10:40:44 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 10:40:44 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 10:40:44 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 10:40:44 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 10:40:44 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 10:40:44 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 10:40:44 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 10:40:44 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 10:40:44 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 10:40:44 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 10:40:44 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 10:40:44 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 10:40:44 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 10:40:44 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 10:40:44 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 10:40:44 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 10:40:44 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 10:40:44 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 10:40:44 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 10:40:44 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 10:40:44 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 10:40:44 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 10:40:44 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 10:40:44 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 10:40:45 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:40:45 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:40:45 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:40:45 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 10:40:45 -Using default implementation for ThreadExecutor
2018-08-09 10:40:45 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 10:40:45 -Quartz Scheduler v.2.2.1 created.
2018-08-09 10:40:45 -RAMJobStore initialized.
2018-08-09 10:40:45 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 10:40:45 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 10:40:45 -Quartz scheduler version: 2.2.1
2018-08-09 10:40:45 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@621f23ac
2018-08-09 10:40:45 -Registering beans for JMX exposure on startup
2018-08-09 10:40:45 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 10:40:45 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 10:40:45 -Starting beans in phase 2147483647
2018-08-09 10:40:45 -Starting Quartz Scheduler now
2018-08-09 10:40:45 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 10:40:45 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 10:40:45 -Using a shared selector for servlet write/read
2018-08-09 10:40:45 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 10:40:45 -Started App in 3.392 seconds (JVM running for 3.932)
2018-08-09 10:41:06 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 10:41:06 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 10:41:06 -FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2018-08-09 10:41:06 -Enabling session validation scheduler...
2018-08-09 10:41:06 -请求地址 : http://localhost:8000/
2018-08-09 10:41:06 -HTTP METHOD : GET
2018-08-09 10:41:06 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.welcome
2018-08-09 10:41:06 -参数 : [{}]
2018-08-09 10:41:06 -耗时 : 1
2018-08-09 10:41:06 -返回值 : redirect:/login
2018-08-09 10:41:06 -请求地址 : http://localhost:8000/login
2018-08-09 10:41:06 -HTTP METHOD : GET
2018-08-09 10:41:06 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 10:41:06 -参数 : []
2018-08-09 10:41:06 -耗时 : 0
2018-08-09 10:41:06 -返回值 : login
2018-08-09 10:41:10 -请求地址 : http://localhost:8000/login
2018-08-09 10:41:10 -HTTP METHOD : POST
2018-08-09 10:41:10 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 10:41:10 -参数 : [admin, 111111]
2018-08-09 10:41:10 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 10:41:10 -==> Parameters: admin(String)
2018-08-09 10:41:10 -<==      Total: 1
2018-08-09 10:41:11 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:184)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:93)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1767)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:106)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:889)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:433)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:362)
	at redis.clients.util.Pool.getResource(Pool.java:49)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:226)
	at com.zhy.management.common.redis.shiro.RedisManager.set(RedisManager.java:108)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.saveSession(RedisSessionDAO.java:51)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.doCreate(RedisSessionDAO.java:83)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.create(AbstractSessionDAO.java:116)
	at org.apache.shiro.session.mgt.DefaultSessionManager.create(DefaultSessionManager.java:177)
	at org.apache.shiro.session.mgt.DefaultSessionManager.doCreateSession(DefaultSessionManager.java:158)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.createSession(AbstractValidatingSessionManager.java:136)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.start(AbstractNativeSessionManager.java:99)
	at org.apache.shiro.mgt.SessionsSecurityManager.start(SessionsSecurityManager.java:152)
	at org.apache.shiro.subject.support.DelegatingSubject.getSession(DelegatingSubject.java:336)
	at org.apache.shiro.subject.support.DelegatingSubject.getSession(DelegatingSubject.java:312)
	at org.apache.shiro.mgt.DefaultSubjectDAO.mergePrincipals(DefaultSubjectDAO.java:204)
	at org.apache.shiro.mgt.DefaultSubjectDAO.saveToSession(DefaultSubjectDAO.java:166)
	at org.apache.shiro.mgt.DefaultSubjectDAO.save(DefaultSubjectDAO.java:147)
	at org.apache.shiro.mgt.DefaultSecurityManager.save(DefaultSecurityManager.java:383)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:350)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:183)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:283)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.zhy.management.system.controller.LoginController.ajaxLogin(LoginController.java:80)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.zhy.management.common.aspect.WebLogAspect.doAround(WebLogAspect.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.zhy.management.system.controller.LoginController$$EnhancerBySpringCGLIB$$96fc9f8f.ajaxLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 10:41:16 -请求地址 : http://localhost:8000/login
2018-08-09 10:41:16 -HTTP METHOD : POST
2018-08-09 10:41:16 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 10:41:16 -参数 : [admin, 111111]
2018-08-09 10:41:16 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 10:41:16 -==> Parameters: admin(String)
2018-08-09 10:41:16 -<==      Total: 1
2018-08-09 10:41:17 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:184)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:93)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1767)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:106)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:889)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:433)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:362)
	at redis.clients.util.Pool.getResource(Pool.java:49)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:226)
	at com.zhy.management.common.redis.shiro.RedisManager.set(RedisManager.java:108)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.saveSession(RedisSessionDAO.java:51)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.doCreate(RedisSessionDAO.java:83)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.create(AbstractSessionDAO.java:116)
	at org.apache.shiro.session.mgt.DefaultSessionManager.create(DefaultSessionManager.java:177)
	at org.apache.shiro.session.mgt.DefaultSessionManager.doCreateSession(DefaultSessionManager.java:158)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.createSession(AbstractValidatingSessionManager.java:136)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.start(AbstractNativeSessionManager.java:99)
	at org.apache.shiro.mgt.SessionsSecurityManager.start(SessionsSecurityManager.java:152)
	at org.apache.shiro.subject.support.DelegatingSubject.getSession(DelegatingSubject.java:336)
	at org.apache.shiro.subject.support.DelegatingSubject.getSession(DelegatingSubject.java:312)
	at org.apache.shiro.mgt.DefaultSubjectDAO.mergePrincipals(DefaultSubjectDAO.java:204)
	at org.apache.shiro.mgt.DefaultSubjectDAO.saveToSession(DefaultSubjectDAO.java:166)
	at org.apache.shiro.mgt.DefaultSubjectDAO.save(DefaultSubjectDAO.java:147)
	at org.apache.shiro.mgt.DefaultSecurityManager.save(DefaultSecurityManager.java:383)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:350)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:183)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:283)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.zhy.management.system.controller.LoginController.ajaxLogin(LoginController.java:80)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.zhy.management.common.aspect.WebLogAspect.doAround(WebLogAspect.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.zhy.management.system.controller.LoginController$$EnhancerBySpringCGLIB$$96fc9f8f.ajaxLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 10:41:18 -请求地址 : http://localhost:8000/login
2018-08-09 10:41:18 -HTTP METHOD : POST
2018-08-09 10:41:18 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 10:41:18 -参数 : [admin, 111111]
2018-08-09 10:41:18 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 10:41:18 -==> Parameters: admin(String)
2018-08-09 10:41:18 -<==      Total: 1
2018-08-09 10:41:19 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:184)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:93)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1767)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:106)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:889)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:433)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:362)
	at redis.clients.util.Pool.getResource(Pool.java:49)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:226)
	at com.zhy.management.common.redis.shiro.RedisManager.set(RedisManager.java:108)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.saveSession(RedisSessionDAO.java:51)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.doCreate(RedisSessionDAO.java:83)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.create(AbstractSessionDAO.java:116)
	at org.apache.shiro.session.mgt.DefaultSessionManager.create(DefaultSessionManager.java:177)
	at org.apache.shiro.session.mgt.DefaultSessionManager.doCreateSession(DefaultSessionManager.java:158)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.createSession(AbstractValidatingSessionManager.java:136)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.start(AbstractNativeSessionManager.java:99)
	at org.apache.shiro.mgt.SessionsSecurityManager.start(SessionsSecurityManager.java:152)
	at org.apache.shiro.subject.support.DelegatingSubject.getSession(DelegatingSubject.java:336)
	at org.apache.shiro.subject.support.DelegatingSubject.getSession(DelegatingSubject.java:312)
	at org.apache.shiro.mgt.DefaultSubjectDAO.mergePrincipals(DefaultSubjectDAO.java:204)
	at org.apache.shiro.mgt.DefaultSubjectDAO.saveToSession(DefaultSubjectDAO.java:166)
	at org.apache.shiro.mgt.DefaultSubjectDAO.save(DefaultSubjectDAO.java:147)
	at org.apache.shiro.mgt.DefaultSecurityManager.save(DefaultSecurityManager.java:383)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:350)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:183)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:283)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.zhy.management.system.controller.LoginController.ajaxLogin(LoginController.java:80)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.zhy.management.common.aspect.WebLogAspect.doAround(WebLogAspect.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.zhy.management.system.controller.LoginController$$EnhancerBySpringCGLIB$$96fc9f8f.ajaxLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 10:41:36 -请求地址 : http://localhost:8000/login
2018-08-09 10:41:36 -HTTP METHOD : POST
2018-08-09 10:41:36 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 10:41:36 -参数 : [admin, 111111]
2018-08-09 10:41:36 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 10:41:36 -==> Parameters: admin(String)
2018-08-09 10:41:36 -<==      Total: 1
2018-08-09 10:41:36 -耗时 : 15
2018-08-09 10:41:36 -返回值 : {msg=操作成功, code=0}
2018-08-09 10:41:36 -请求地址 : http://localhost:8000/index
2018-08-09 10:41:36 -HTTP METHOD : GET
2018-08-09 10:41:36 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 10:41:36 -参数 : [{}]
2018-08-09 10:41:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 10:41:36 -==> Parameters: 1(Long)
2018-08-09 10:41:36 -<==      Total: 28
2018-08-09 10:41:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 10:41:36 -==> Parameters: 142(Long)
2018-08-09 10:41:36 -<==      Total: 1
2018-08-09 10:41:36 -耗时 : 24
2018-08-09 10:41:36 -返回值 : index_v1
2018-08-09 10:41:36 -请求地址 : http://localhost:8000/main
2018-08-09 10:41:36 -HTTP METHOD : GET
2018-08-09 10:41:36 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 10:41:36 -参数 : []
2018-08-09 10:41:36 -耗时 : 0
2018-08-09 10:41:36 -返回值 : main
2018-08-09 10:41:37 -请求地址 : http://localhost:8000/main
2018-08-09 10:41:37 -HTTP METHOD : GET
2018-08-09 10:41:37 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 10:41:37 -参数 : []
2018-08-09 10:41:37 -耗时 : 0
2018-08-09 10:41:37 -返回值 : main
2018-08-09 10:41:54 -请求地址 : http://localhost:8000/login
2018-08-09 10:41:54 -HTTP METHOD : GET
2018-08-09 10:41:54 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 10:41:54 -参数 : []
2018-08-09 10:41:54 -耗时 : 0
2018-08-09 10:41:54 -返回值 : login
2018-08-09 10:41:58 -请求地址 : http://localhost:8000/login
2018-08-09 10:41:58 -HTTP METHOD : POST
2018-08-09 10:41:58 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 10:41:58 -参数 : [admin, 111111]
2018-08-09 10:41:58 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 10:41:58 -==> Parameters: admin(String)
2018-08-09 10:41:58 -<==      Total: 1
2018-08-09 10:41:58 -耗时 : 4
2018-08-09 10:41:58 -返回值 : {msg=操作成功, code=0}
2018-08-09 10:41:58 -请求地址 : http://localhost:8000/index
2018-08-09 10:41:58 -HTTP METHOD : GET
2018-08-09 10:41:58 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 10:41:58 -参数 : [{}]
2018-08-09 10:41:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 10:41:58 -==> Parameters: 1(Long)
2018-08-09 10:41:58 -<==      Total: 28
2018-08-09 10:41:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 10:41:58 -==> Parameters: 142(Long)
2018-08-09 10:41:58 -<==      Total: 1
2018-08-09 10:41:58 -耗时 : 8
2018-08-09 10:41:58 -返回值 : index_v1
2018-08-09 10:41:58 -请求地址 : http://localhost:8000/main
2018-08-09 10:41:58 -HTTP METHOD : GET
2018-08-09 10:41:58 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 10:41:58 -参数 : []
2018-08-09 10:41:58 -耗时 : 0
2018-08-09 10:41:58 -返回值 : main
2018-08-09 10:41:58 -请求地址 : http://localhost:8000/main
2018-08-09 10:41:58 -HTTP METHOD : GET
2018-08-09 10:41:58 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 10:41:58 -参数 : []
2018-08-09 10:41:58 -耗时 : 0
2018-08-09 10:41:58 -返回值 : main
2018-08-09 10:42:44 -Starting App on zhy with PID 15300 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 10:42:44 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 10:42:44 -The following profiles are active: dev
2018-08-09 10:42:44 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 10:42:44 CST 2018]; root of context hierarchy
2018-08-09 10:42:44 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 10:42:45 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b428f899] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:42:45 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$957cfd29] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:42:45 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:42:45 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:42:45 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 10:42:45 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:42:45 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:42:45 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:42:45 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:42:45 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:42:45 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 10:42:45 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 10:42:45 -Starting service [Tomcat]
2018-08-09 10:42:45 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 10:42:45 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 10:42:45 -Initializing Spring embedded WebApplicationContext
2018-08-09 10:42:45 -Root WebApplicationContext: initialization completed in 1319 ms
2018-08-09 10:42:45 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 10:42:45 -Servlet dispatcherServlet mapped to [/]
2018-08-09 10:42:45 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 10:42:45 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 10:42:45 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 10:42:45 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 10:42:45 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 10:42:45 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 10:42:45 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 10:42:44 CST 2018]; root of context hierarchy
2018-08-09 10:42:46 -{dataSource-1} inited
2018-08-09 10:42:46 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 10:42:46 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:42:46 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 10:42:44 CST 2018]; root of context hierarchy
2018-08-09 10:42:46 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 10:42:46 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 10:42:46 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 10:42:46 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 10:42:46 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 10:42:46 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 10:42:46 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 10:42:46 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 10:42:46 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 10:42:46 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 10:42:46 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 10:42:46 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 10:42:46 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 10:42:46 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 10:42:46 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 10:42:46 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 10:42:46 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 10:42:46 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 10:42:46 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 10:42:46 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 10:42:46 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 10:42:46 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 10:42:46 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 10:42:46 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 10:42:46 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 10:42:46 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 10:42:46 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 10:42:46 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 10:42:46 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 10:42:46 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 10:42:46 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 10:42:46 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 10:42:46 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 10:42:46 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 10:42:46 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 10:42:46 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 10:42:46 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 10:42:46 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 10:42:46 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 10:42:46 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 10:42:46 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 10:42:46 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 10:42:46 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 10:42:46 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 10:42:46 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 10:42:46 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 10:42:46 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:42:46 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:42:46 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:42:46 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 10:42:47 -Using default implementation for ThreadExecutor
2018-08-09 10:42:47 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 10:42:47 -Quartz Scheduler v.2.2.1 created.
2018-08-09 10:42:47 -RAMJobStore initialized.
2018-08-09 10:42:47 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 10:42:47 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 10:42:47 -Quartz scheduler version: 2.2.1
2018-08-09 10:42:47 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@47058864
2018-08-09 10:42:47 -Registering beans for JMX exposure on startup
2018-08-09 10:42:47 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 10:42:47 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 10:42:47 -Starting beans in phase 2147483647
2018-08-09 10:42:47 -Starting Quartz Scheduler now
2018-08-09 10:42:47 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 10:42:47 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 10:42:47 -Using a shared selector for servlet write/read
2018-08-09 10:42:47 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 10:42:47 -Started App in 3.402 seconds (JVM running for 3.949)
2018-08-09 10:42:50 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 10:42:50 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 10:42:50 -FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
2018-08-09 10:42:50 -Enabling session validation scheduler...
2018-08-09 10:42:50 -请求地址 : http://localhost:8000/login
2018-08-09 10:42:50 -HTTP METHOD : GET
2018-08-09 10:42:50 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 10:42:50 -参数 : []
2018-08-09 10:42:50 -耗时 : 1
2018-08-09 10:42:50 -返回值 : login
2018-08-09 10:42:53 -请求地址 : http://localhost:8000/login
2018-08-09 10:42:53 -HTTP METHOD : POST
2018-08-09 10:42:53 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 10:42:53 -参数 : [admin, 111111]
2018-08-09 10:42:53 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 10:42:53 -==> Parameters: admin(String)
2018-08-09 10:42:53 -<==      Total: 1
2018-08-09 10:42:53 -耗时 : 200
2018-08-09 10:42:53 -返回值 : {msg=操作成功, code=0}
2018-08-09 10:42:53 -请求地址 : http://localhost:8000/index
2018-08-09 10:42:53 -HTTP METHOD : GET
2018-08-09 10:42:53 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 10:42:53 -参数 : [{}]
2018-08-09 10:42:53 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 10:42:53 -==> Parameters: 1(Long)
2018-08-09 10:42:53 -<==      Total: 28
2018-08-09 10:42:53 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 10:42:53 -==> Parameters: 142(Long)
2018-08-09 10:42:53 -<==      Total: 1
2018-08-09 10:42:53 -耗时 : 24
2018-08-09 10:42:53 -返回值 : index_v1
2018-08-09 10:42:53 -请求地址 : http://localhost:8000/main
2018-08-09 10:42:53 -HTTP METHOD : GET
2018-08-09 10:42:53 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 10:42:53 -参数 : []
2018-08-09 10:42:53 -耗时 : 1
2018-08-09 10:42:53 -返回值 : main
2018-08-09 10:42:53 -请求地址 : http://localhost:8000/main
2018-08-09 10:42:53 -HTTP METHOD : GET
2018-08-09 10:42:53 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 10:42:53 -参数 : []
2018-08-09 10:42:53 -耗时 : 0
2018-08-09 10:42:53 -返回值 : main
2018-08-09 10:43:10 -Starting App on zhy with PID 19560 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 10:43:10 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 10:43:10 -The following profiles are active: dev
2018-08-09 10:43:10 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 10:43:10 CST 2018]; root of context hierarchy
2018-08-09 10:43:11 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 10:43:11 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b428f899] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:43:11 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$957cfd29] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:43:11 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:43:11 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:43:11 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 10:43:11 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:43:11 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:43:11 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:43:11 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:43:11 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:43:12 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 10:43:12 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 10:43:12 -Starting service [Tomcat]
2018-08-09 10:43:12 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 10:43:12 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 10:43:12 -Initializing Spring embedded WebApplicationContext
2018-08-09 10:43:12 -Root WebApplicationContext: initialization completed in 1282 ms
2018-08-09 10:43:12 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 10:43:12 -Servlet dispatcherServlet mapped to [/]
2018-08-09 10:43:12 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 10:43:12 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 10:43:12 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 10:43:12 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 10:43:12 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 10:43:12 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 10:43:12 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 10:43:10 CST 2018]; root of context hierarchy
2018-08-09 10:43:12 -{dataSource-1} inited
2018-08-09 10:43:12 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 10:43:12 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:43:13 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 10:43:10 CST 2018]; root of context hierarchy
2018-08-09 10:43:13 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 10:43:13 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 10:43:13 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 10:43:13 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 10:43:13 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 10:43:13 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 10:43:13 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 10:43:13 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 10:43:13 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 10:43:13 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 10:43:13 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 10:43:13 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 10:43:13 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 10:43:13 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 10:43:13 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 10:43:13 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 10:43:13 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 10:43:13 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 10:43:13 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 10:43:13 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 10:43:13 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 10:43:13 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 10:43:13 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 10:43:13 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 10:43:13 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 10:43:13 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 10:43:13 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 10:43:13 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 10:43:13 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 10:43:13 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 10:43:13 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 10:43:13 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 10:43:13 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 10:43:13 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 10:43:13 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 10:43:13 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 10:43:13 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 10:43:13 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 10:43:13 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 10:43:13 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 10:43:13 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 10:43:13 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 10:43:13 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 10:43:13 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 10:43:13 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 10:43:13 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 10:43:13 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:43:13 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:43:13 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:43:13 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 10:43:13 -Using default implementation for ThreadExecutor
2018-08-09 10:43:13 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 10:43:13 -Quartz Scheduler v.2.2.1 created.
2018-08-09 10:43:13 -RAMJobStore initialized.
2018-08-09 10:43:13 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 10:43:13 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 10:43:13 -Quartz scheduler version: 2.2.1
2018-08-09 10:43:13 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@47058864
2018-08-09 10:43:13 -Registering beans for JMX exposure on startup
2018-08-09 10:43:13 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 10:43:13 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 10:43:13 -Starting beans in phase 2147483647
2018-08-09 10:43:13 -Starting Quartz Scheduler now
2018-08-09 10:43:13 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 10:43:13 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 10:43:13 -Using a shared selector for servlet write/read
2018-08-09 10:43:13 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 10:43:13 -Started App in 3.313 seconds (JVM running for 3.847)
2018-08-09 10:43:18 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 10:43:18 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 10:43:18 -FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2018-08-09 10:43:18 -Enabling session validation scheduler...
2018-08-09 10:43:19 -请求地址 : http://localhost:8000/login
2018-08-09 10:43:19 -HTTP METHOD : GET
2018-08-09 10:43:19 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 10:43:19 -参数 : []
2018-08-09 10:43:19 -耗时 : 1
2018-08-09 10:43:19 -返回值 : login
2018-08-09 10:43:21 -请求地址 : http://localhost:8000/login
2018-08-09 10:43:21 -HTTP METHOD : POST
2018-08-09 10:43:21 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 10:43:21 -参数 : [admin, 111111]
2018-08-09 10:43:21 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 10:43:22 -==> Parameters: admin(String)
2018-08-09 10:43:22 -<==      Total: 1
2018-08-09 10:43:22 -耗时 : 197
2018-08-09 10:43:22 -返回值 : {msg=操作成功, code=0}
2018-08-09 10:43:22 -请求地址 : http://localhost:8000/index
2018-08-09 10:43:22 -HTTP METHOD : GET
2018-08-09 10:43:22 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 10:43:22 -参数 : [{}]
2018-08-09 10:43:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 10:43:22 -==> Parameters: 1(Long)
2018-08-09 10:43:22 -<==      Total: 28
2018-08-09 10:43:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 10:43:22 -==> Parameters: 142(Long)
2018-08-09 10:43:22 -<==      Total: 1
2018-08-09 10:43:22 -耗时 : 23
2018-08-09 10:43:22 -返回值 : index_v1
2018-08-09 10:43:22 -请求地址 : http://localhost:8000/main
2018-08-09 10:43:22 -HTTP METHOD : GET
2018-08-09 10:43:22 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 10:43:22 -参数 : []
2018-08-09 10:43:22 -耗时 : 0
2018-08-09 10:43:22 -返回值 : main
2018-08-09 10:43:22 -请求地址 : http://localhost:8000/main
2018-08-09 10:43:22 -HTTP METHOD : GET
2018-08-09 10:43:22 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 10:43:22 -参数 : []
2018-08-09 10:43:22 -耗时 : 1
2018-08-09 10:43:22 -返回值 : main
2018-08-09 10:43:39 -Starting App on zhy with PID 904 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 10:43:39 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 10:43:39 -The following profiles are active: dev
2018-08-09 10:43:39 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 10:43:39 CST 2018]; root of context hierarchy
2018-08-09 10:43:40 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 10:43:40 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b428f899] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:43:40 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$957cfd29] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:43:40 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:43:40 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:43:40 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 10:43:40 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:43:40 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:43:40 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:43:40 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:43:40 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:43:40 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 10:43:40 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 10:43:40 -Starting service [Tomcat]
2018-08-09 10:43:40 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 10:43:40 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 10:43:41 -Initializing Spring embedded WebApplicationContext
2018-08-09 10:43:41 -Root WebApplicationContext: initialization completed in 1323 ms
2018-08-09 10:43:41 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 10:43:41 -Servlet dispatcherServlet mapped to [/]
2018-08-09 10:43:41 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 10:43:41 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 10:43:41 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 10:43:41 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 10:43:41 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 10:43:41 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 10:43:41 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 10:43:39 CST 2018]; root of context hierarchy
2018-08-09 10:43:41 -{dataSource-1} inited
2018-08-09 10:43:41 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 10:43:41 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:43:42 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 10:43:39 CST 2018]; root of context hierarchy
2018-08-09 10:43:42 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 10:43:42 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 10:43:42 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 10:43:42 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 10:43:42 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 10:43:42 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 10:43:42 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 10:43:42 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 10:43:42 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 10:43:42 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 10:43:42 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 10:43:42 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 10:43:42 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 10:43:42 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 10:43:42 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 10:43:42 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 10:43:42 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 10:43:42 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 10:43:42 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 10:43:42 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 10:43:42 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 10:43:42 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 10:43:42 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 10:43:42 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 10:43:42 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 10:43:42 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 10:43:42 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 10:43:42 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 10:43:42 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 10:43:42 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 10:43:42 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 10:43:42 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 10:43:42 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 10:43:42 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 10:43:42 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 10:43:42 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 10:43:42 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 10:43:42 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 10:43:42 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 10:43:42 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 10:43:42 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 10:43:42 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 10:43:42 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 10:43:42 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 10:43:42 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 10:43:42 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 10:43:42 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:43:42 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:43:42 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:43:42 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 10:43:42 -Using default implementation for ThreadExecutor
2018-08-09 10:43:42 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 10:43:42 -Quartz Scheduler v.2.2.1 created.
2018-08-09 10:43:42 -RAMJobStore initialized.
2018-08-09 10:43:42 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 10:43:42 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 10:43:42 -Quartz scheduler version: 2.2.1
2018-08-09 10:43:42 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@47058864
2018-08-09 10:43:42 -Registering beans for JMX exposure on startup
2018-08-09 10:43:42 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 10:43:42 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 10:43:42 -Starting beans in phase 2147483647
2018-08-09 10:43:42 -Starting Quartz Scheduler now
2018-08-09 10:43:42 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 10:43:42 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 10:43:42 -Using a shared selector for servlet write/read
2018-08-09 10:43:42 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 10:43:42 -Started App in 3.441 seconds (JVM running for 3.949)
2018-08-09 10:43:44 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 10:43:44 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 10:43:44 -FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2018-08-09 10:43:44 -Enabling session validation scheduler...
2018-08-09 10:43:44 -请求地址 : http://localhost:8000/login
2018-08-09 10:43:44 -HTTP METHOD : GET
2018-08-09 10:43:44 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 10:43:44 -参数 : []
2018-08-09 10:43:44 -耗时 : 1
2018-08-09 10:43:44 -返回值 : login
2018-08-09 10:43:48 -请求地址 : http://localhost:8000/login
2018-08-09 10:43:48 -HTTP METHOD : POST
2018-08-09 10:43:48 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 10:43:48 -参数 : [admin, 111111]
2018-08-09 10:43:48 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 10:43:48 -==> Parameters: admin(String)
2018-08-09 10:43:48 -<==      Total: 1
2018-08-09 10:43:48 -耗时 : 206
2018-08-09 10:43:48 -返回值 : {msg=操作成功, code=0}
2018-08-09 10:43:48 -请求地址 : http://localhost:8000/index
2018-08-09 10:43:48 -HTTP METHOD : GET
2018-08-09 10:43:48 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 10:43:48 -参数 : [{}]
2018-08-09 10:43:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 10:43:48 -==> Parameters: 1(Long)
2018-08-09 10:43:48 -<==      Total: 28
2018-08-09 10:43:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 10:43:48 -==> Parameters: 142(Long)
2018-08-09 10:43:48 -<==      Total: 1
2018-08-09 10:43:48 -耗时 : 34
2018-08-09 10:43:48 -返回值 : index_v1
2018-08-09 10:43:48 -请求地址 : http://localhost:8000/main
2018-08-09 10:43:48 -HTTP METHOD : GET
2018-08-09 10:43:48 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 10:43:48 -参数 : []
2018-08-09 10:43:48 -耗时 : 0
2018-08-09 10:43:48 -返回值 : main
2018-08-09 10:43:48 -请求地址 : http://localhost:8000/main
2018-08-09 10:43:48 -HTTP METHOD : GET
2018-08-09 10:43:48 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 10:43:48 -参数 : []
2018-08-09 10:43:48 -耗时 : 0
2018-08-09 10:43:48 -返回值 : main
2018-08-09 10:44:12 -Starting App on zhy with PID 6188 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 10:44:12 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 10:44:12 -The following profiles are active: dev
2018-08-09 10:44:12 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 10:44:12 CST 2018]; root of context hierarchy
2018-08-09 10:44:12 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 10:44:12 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b428f899] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:44:12 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$957cfd29] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:44:12 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:44:12 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:44:12 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 10:44:12 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:44:13 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:44:13 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:44:13 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:44:13 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:44:13 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 10:44:13 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 10:44:13 -Starting service [Tomcat]
2018-08-09 10:44:13 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 10:44:13 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 10:44:13 -Initializing Spring embedded WebApplicationContext
2018-08-09 10:44:13 -Root WebApplicationContext: initialization completed in 1285 ms
2018-08-09 10:44:13 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 10:44:13 -Servlet dispatcherServlet mapped to [/]
2018-08-09 10:44:13 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 10:44:13 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 10:44:13 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 10:44:13 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 10:44:13 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 10:44:13 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 10:44:13 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 10:44:12 CST 2018]; root of context hierarchy
2018-08-09 10:44:13 -{dataSource-1} inited
2018-08-09 10:44:14 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 10:44:14 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:44:14 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 10:44:12 CST 2018]; root of context hierarchy
2018-08-09 10:44:14 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 10:44:14 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 10:44:14 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 10:44:14 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 10:44:14 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 10:44:14 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 10:44:14 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 10:44:14 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 10:44:14 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 10:44:14 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 10:44:14 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 10:44:14 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 10:44:14 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 10:44:14 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 10:44:14 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 10:44:14 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 10:44:14 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 10:44:14 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 10:44:14 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 10:44:14 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 10:44:14 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 10:44:14 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 10:44:14 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 10:44:14 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 10:44:14 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 10:44:14 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 10:44:14 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 10:44:14 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 10:44:14 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 10:44:14 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 10:44:14 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 10:44:14 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 10:44:14 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 10:44:14 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 10:44:14 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 10:44:14 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 10:44:14 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 10:44:14 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 10:44:14 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 10:44:14 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 10:44:14 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 10:44:14 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 10:44:14 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 10:44:14 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 10:44:14 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 10:44:14 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 10:44:14 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:44:14 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:44:14 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:44:14 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 10:44:14 -Using default implementation for ThreadExecutor
2018-08-09 10:44:14 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 10:44:14 -Quartz Scheduler v.2.2.1 created.
2018-08-09 10:44:14 -RAMJobStore initialized.
2018-08-09 10:44:14 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 10:44:14 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 10:44:14 -Quartz scheduler version: 2.2.1
2018-08-09 10:44:14 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@9b2dc56
2018-08-09 10:44:15 -Registering beans for JMX exposure on startup
2018-08-09 10:44:15 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 10:44:15 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 10:44:15 -Starting beans in phase 2147483647
2018-08-09 10:44:15 -Starting Quartz Scheduler now
2018-08-09 10:44:15 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 10:44:15 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 10:44:15 -Using a shared selector for servlet write/read
2018-08-09 10:44:15 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 10:44:15 -Started App in 3.394 seconds (JVM running for 3.926)
2018-08-09 10:45:32 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 10:45:32 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 10:45:32 -FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2018-08-09 10:45:32 -Enabling session validation scheduler...
2018-08-09 10:45:32 -请求地址 : http://localhost:8000/login
2018-08-09 10:45:32 -HTTP METHOD : GET
2018-08-09 10:45:32 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 10:45:32 -参数 : []
2018-08-09 10:45:32 -耗时 : 1
2018-08-09 10:45:32 -返回值 : login
2018-08-09 10:45:35 -请求地址 : http://localhost:8000/login
2018-08-09 10:45:35 -HTTP METHOD : POST
2018-08-09 10:45:35 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 10:45:35 -参数 : [admin, 111111]
2018-08-09 10:45:35 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 10:45:35 -==> Parameters: admin(String)
2018-08-09 10:45:35 -<==      Total: 1
2018-08-09 10:45:35 -耗时 : 192
2018-08-09 10:45:35 -返回值 : {msg=操作成功, code=0}
2018-08-09 10:45:35 -请求地址 : http://localhost:8000/index
2018-08-09 10:45:35 -HTTP METHOD : GET
2018-08-09 10:45:35 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 10:45:35 -参数 : [{}]
2018-08-09 10:45:35 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 10:45:35 -==> Parameters: 1(Long)
2018-08-09 10:45:35 -<==      Total: 28
2018-08-09 10:45:35 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 10:45:35 -==> Parameters: 142(Long)
2018-08-09 10:45:35 -<==      Total: 1
2018-08-09 10:45:35 -耗时 : 29
2018-08-09 10:45:35 -返回值 : index_v1
2018-08-09 10:45:35 -请求地址 : http://localhost:8000/main
2018-08-09 10:45:35 -HTTP METHOD : GET
2018-08-09 10:45:35 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 10:45:35 -参数 : []
2018-08-09 10:45:35 -耗时 : 0
2018-08-09 10:45:35 -返回值 : main
2018-08-09 10:45:35 -请求地址 : http://localhost:8000/main
2018-08-09 10:45:35 -HTTP METHOD : GET
2018-08-09 10:45:35 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 10:45:35 -参数 : []
2018-08-09 10:45:35 -耗时 : 0
2018-08-09 10:45:35 -返回值 : main
2018-08-09 10:49:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:49:50 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-08-09 10:49:50 -==> Parameters: 1(Long)
2018-08-09 10:49:50 -<==      Total: 47
2018-08-09 10:49:50 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:49:50 -请求地址 : http://localhost:8000/system/sysDept
2018-08-09 10:49:50 -HTTP METHOD : GET
2018-08-09 10:49:50 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.dept
2018-08-09 10:49:50 -参数 : []
2018-08-09 10:49:50 -耗时 : 0
2018-08-09 10:49:50 -返回值 : system/dept/dept
2018-08-09 10:49:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:49:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:49:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:49:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:49:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:49:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:49:51 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:49:51 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 10:49:51 -HTTP METHOD : GET
2018-08-09 10:49:51 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 10:49:51 -参数 : []
2018-08-09 10:49:51 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 10:49:51 -==> Parameters: 
2018-08-09 10:49:51 -<==      Total: 11
2018-08-09 10:49:51 -耗时 : 6
2018-08-09 10:49:51 -返回值 : [DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 10:50:35 -Starting App on zhy with PID 9856 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 10:50:35 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 10:50:35 -The following profiles are active: dev
2018-08-09 10:50:35 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 10:50:35 CST 2018]; root of context hierarchy
2018-08-09 10:50:36 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 10:50:36 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b428f899] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:50:36 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$957cfd29] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:50:36 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:50:36 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:50:36 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 10:50:36 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:50:36 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:50:36 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:50:36 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:50:36 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:50:37 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 10:50:37 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 10:50:37 -Starting service [Tomcat]
2018-08-09 10:50:37 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 10:50:37 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 10:50:37 -Initializing Spring embedded WebApplicationContext
2018-08-09 10:50:37 -Root WebApplicationContext: initialization completed in 1345 ms
2018-08-09 10:50:37 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 10:50:37 -Servlet dispatcherServlet mapped to [/]
2018-08-09 10:50:37 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 10:50:37 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 10:50:37 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 10:50:37 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 10:50:37 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 10:50:37 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 10:50:37 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 10:50:35 CST 2018]; root of context hierarchy
2018-08-09 10:50:37 -{dataSource-1} inited
2018-08-09 10:50:37 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 10:50:38 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:50:38 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 10:50:35 CST 2018]; root of context hierarchy
2018-08-09 10:50:38 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 10:50:38 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 10:50:38 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 10:50:38 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 10:50:38 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 10:50:38 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 10:50:38 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 10:50:38 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 10:50:38 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 10:50:38 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 10:50:38 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 10:50:38 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 10:50:38 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 10:50:38 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 10:50:38 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 10:50:38 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 10:50:38 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 10:50:38 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 10:50:38 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 10:50:38 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 10:50:38 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 10:50:38 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 10:50:38 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 10:50:38 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 10:50:38 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 10:50:38 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 10:50:38 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 10:50:38 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 10:50:38 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 10:50:38 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 10:50:38 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 10:50:38 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 10:50:38 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 10:50:38 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 10:50:38 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 10:50:38 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 10:50:38 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 10:50:38 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 10:50:38 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 10:50:38 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 10:50:38 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 10:50:38 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 10:50:38 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 10:50:38 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 10:50:38 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 10:50:38 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 10:50:38 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:50:38 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:50:38 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:50:38 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 10:50:38 -Using default implementation for ThreadExecutor
2018-08-09 10:50:38 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 10:50:38 -Quartz Scheduler v.2.2.1 created.
2018-08-09 10:50:38 -RAMJobStore initialized.
2018-08-09 10:50:38 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 10:50:38 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 10:50:38 -Quartz scheduler version: 2.2.1
2018-08-09 10:50:38 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@47058864
2018-08-09 10:50:38 -Registering beans for JMX exposure on startup
2018-08-09 10:50:38 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 10:50:38 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 10:50:38 -Starting beans in phase 2147483647
2018-08-09 10:50:38 -Starting Quartz Scheduler now
2018-08-09 10:50:38 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 10:50:38 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 10:50:38 -Using a shared selector for servlet write/read
2018-08-09 10:50:38 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 10:50:38 -Started App in 3.46 seconds (JVM running for 3.985)
2018-08-09 10:50:39 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 10:50:39 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 10:50:39 -FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2018-08-09 10:50:39 -Enabling session validation scheduler...
2018-08-09 10:50:39 -请求地址 : http://localhost:8000/login
2018-08-09 10:50:39 -HTTP METHOD : GET
2018-08-09 10:50:39 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 10:50:39 -参数 : []
2018-08-09 10:50:39 -耗时 : 1
2018-08-09 10:50:39 -返回值 : login
2018-08-09 10:50:40 -请求地址 : http://localhost:8000/login
2018-08-09 10:50:40 -HTTP METHOD : POST
2018-08-09 10:50:40 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 10:50:40 -参数 : [admin, 111111]
2018-08-09 10:50:40 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 10:50:40 -==> Parameters: admin(String)
2018-08-09 10:50:40 -<==      Total: 1
2018-08-09 10:50:40 -耗时 : 197
2018-08-09 10:50:40 -返回值 : {msg=操作成功, code=0}
2018-08-09 10:50:40 -请求地址 : http://localhost:8000/index
2018-08-09 10:50:40 -HTTP METHOD : GET
2018-08-09 10:50:40 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 10:50:40 -参数 : [{}]
2018-08-09 10:50:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 10:50:40 -==> Parameters: 1(Long)
2018-08-09 10:50:40 -<==      Total: 28
2018-08-09 10:50:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 10:50:40 -==> Parameters: 142(Long)
2018-08-09 10:50:40 -<==      Total: 1
2018-08-09 10:50:40 -耗时 : 27
2018-08-09 10:50:40 -返回值 : index_v1
2018-08-09 10:50:40 -请求地址 : http://localhost:8000/main
2018-08-09 10:50:40 -HTTP METHOD : GET
2018-08-09 10:50:40 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 10:50:40 -参数 : []
2018-08-09 10:50:40 -耗时 : 0
2018-08-09 10:50:40 -返回值 : main
2018-08-09 10:50:40 -请求地址 : http://localhost:8000/main
2018-08-09 10:50:40 -HTTP METHOD : GET
2018-08-09 10:50:40 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 10:50:40 -参数 : []
2018-08-09 10:50:40 -耗时 : 0
2018-08-09 10:50:40 -返回值 : main
2018-08-09 10:50:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:50:46 -请求地址 : http://localhost:8000/system/sysDept
2018-08-09 10:50:46 -HTTP METHOD : GET
2018-08-09 10:50:46 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.dept
2018-08-09 10:50:46 -参数 : []
2018-08-09 10:50:46 -耗时 : 0
2018-08-09 10:50:46 -返回值 : system/dept/dept
2018-08-09 10:50:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:50:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:50:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:50:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:50:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:50:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:50:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:50:46 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 10:50:46 -HTTP METHOD : GET
2018-08-09 10:50:46 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 10:50:46 -参数 : []
2018-08-09 10:50:46 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 10:50:46 -==> Parameters: 
2018-08-09 10:50:46 -<==      Total: 11
2018-08-09 10:50:46 -耗时 : 7
2018-08-09 10:50:46 -返回值 : [DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 10:50:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:50:58 -请求地址 : http://localhost:8000/sys/menu/
2018-08-09 10:50:58 -HTTP METHOD : GET
2018-08-09 10:50:58 -CLASS_METHOD : com.zhy.management.system.controller.MenuController.menu
2018-08-09 10:50:58 -参数 : [{}]
2018-08-09 10:50:58 -耗时 : 0
2018-08-09 10:50:58 -返回值 : system/menu/menu
2018-08-09 10:50:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:50:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:50:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:50:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:50:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:50:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:50:58 -请求地址 : http://localhost:8000/sys/menu/list
2018-08-09 10:50:58 -HTTP METHOD : GET
2018-08-09 10:50:58 -CLASS_METHOD : com.zhy.management.system.controller.MenuController.list
2018-08-09 10:50:58 -参数 : [{sort=order_num}]
2018-08-09 10:50:58 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-08-09 10:50:58 -==> Parameters: 
2018-08-09 10:50:58 -<==      Total: 62
2018-08-09 10:50:58 -耗时 : 14
2018-08-09 10:50:58 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=94, parentId=93, name='模型管理', url='activiti/model', perms='', type=1, icon='fa fa-sort-amount-asc', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=96, parentId=93, name='流程管理', url='activiti/process', perms='', type=1, icon='fa fa-flag', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=101, parentId=93, name='待办任务', url='activiti/task/todo', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=77, name='swagger', url='/swagger-ui.html', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=0, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=68, parentId=49, name='发布文章', url='/blog/bContent/add', perms='blog:bContent:add', type=1, icon='fa fa-edit', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=50, parentId=49, name='文章列表', url='blog/bContent', perms='blog:bContent:bContent', type=1, icon='fa fa-file-image-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='common/generator', perms='common:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='部门管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计划任务', url='common/job', perms='common:taskScheduleJob', type=1, icon='fa fa-hourglass-1', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=49, parentId=0, name='博客管理', url='', perms='', type=0, icon='fa fa-rss', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=93, parentId=0, name='工作流程', url='', perms='', type=0, icon='fa fa-print', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='图表管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=7, gmtCreate=null, gmtModified=null}]
2018-08-09 10:51:30 -Starting App on zhy with PID 15140 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 10:51:30 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 10:51:30 -The following profiles are active: dev
2018-08-09 10:51:30 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 10:51:30 CST 2018]; root of context hierarchy
2018-08-09 10:51:31 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 10:51:31 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b428f899] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:51:31 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$957cfd29] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:51:31 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:51:31 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:51:31 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 10:51:31 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:51:31 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:51:31 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:51:31 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:51:31 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:51:31 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 10:51:31 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 10:51:31 -Starting service [Tomcat]
2018-08-09 10:51:31 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 10:51:31 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 10:51:31 -Initializing Spring embedded WebApplicationContext
2018-08-09 10:51:31 -Root WebApplicationContext: initialization completed in 1307 ms
2018-08-09 10:51:32 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 10:51:32 -Servlet dispatcherServlet mapped to [/]
2018-08-09 10:51:32 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 10:51:32 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 10:51:32 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 10:51:32 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 10:51:32 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 10:51:32 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 10:51:32 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 10:51:30 CST 2018]; root of context hierarchy
2018-08-09 10:51:32 -{dataSource-1} inited
2018-08-09 10:51:32 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 10:51:32 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:51:32 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 10:51:30 CST 2018]; root of context hierarchy
2018-08-09 10:51:33 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 10:51:33 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 10:51:33 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 10:51:33 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 10:51:33 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 10:51:33 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 10:51:33 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 10:51:33 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 10:51:33 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 10:51:33 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 10:51:33 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 10:51:33 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 10:51:33 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 10:51:33 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 10:51:33 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 10:51:33 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 10:51:33 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 10:51:33 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 10:51:33 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 10:51:33 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 10:51:33 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 10:51:33 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 10:51:33 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 10:51:33 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 10:51:33 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 10:51:33 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 10:51:33 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 10:51:33 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 10:51:33 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 10:51:33 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 10:51:33 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 10:51:33 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 10:51:33 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 10:51:33 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 10:51:33 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 10:51:33 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 10:51:33 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 10:51:33 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 10:51:33 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 10:51:33 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 10:51:33 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 10:51:33 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 10:51:33 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 10:51:33 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 10:51:33 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 10:51:33 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 10:51:33 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:51:33 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:51:33 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:51:33 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 10:51:33 -Using default implementation for ThreadExecutor
2018-08-09 10:51:33 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 10:51:33 -Quartz Scheduler v.2.2.1 created.
2018-08-09 10:51:33 -RAMJobStore initialized.
2018-08-09 10:51:33 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 10:51:33 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 10:51:33 -Quartz scheduler version: 2.2.1
2018-08-09 10:51:33 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@9b2dc56
2018-08-09 10:51:33 -Registering beans for JMX exposure on startup
2018-08-09 10:51:33 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 10:51:33 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 10:51:33 -Starting beans in phase 2147483647
2018-08-09 10:51:33 -Starting Quartz Scheduler now
2018-08-09 10:51:33 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 10:51:33 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 10:51:33 -Using a shared selector for servlet write/read
2018-08-09 10:51:33 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 10:51:33 -Started App in 3.399 seconds (JVM running for 3.937)
2018-08-09 10:51:35 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 10:51:35 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 10:51:35 -FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2018-08-09 10:51:35 -Enabling session validation scheduler...
2018-08-09 10:51:35 -请求地址 : http://localhost:8000/login
2018-08-09 10:51:35 -HTTP METHOD : GET
2018-08-09 10:51:35 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 10:51:35 -参数 : []
2018-08-09 10:51:35 -耗时 : 1
2018-08-09 10:51:35 -返回值 : login
2018-08-09 10:51:39 -请求地址 : http://localhost:8000/login
2018-08-09 10:51:39 -HTTP METHOD : POST
2018-08-09 10:51:39 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 10:51:39 -参数 : [admin, 111111]
2018-08-09 10:51:39 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 10:51:39 -==> Parameters: admin(String)
2018-08-09 10:51:39 -<==      Total: 1
2018-08-09 10:51:39 -耗时 : 204
2018-08-09 10:51:39 -返回值 : {msg=操作成功, code=0}
2018-08-09 10:51:39 -请求地址 : http://localhost:8000/index
2018-08-09 10:51:39 -HTTP METHOD : GET
2018-08-09 10:51:39 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 10:51:39 -参数 : [{}]
2018-08-09 10:51:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 10:51:39 -==> Parameters: 1(Long)
2018-08-09 10:51:39 -<==      Total: 28
2018-08-09 10:51:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 10:51:39 -==> Parameters: 142(Long)
2018-08-09 10:51:39 -<==      Total: 1
2018-08-09 10:51:39 -耗时 : 29
2018-08-09 10:51:39 -返回值 : index_v1
2018-08-09 10:51:39 -请求地址 : http://localhost:8000/main
2018-08-09 10:51:39 -HTTP METHOD : GET
2018-08-09 10:51:39 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 10:51:39 -参数 : []
2018-08-09 10:51:39 -耗时 : 0
2018-08-09 10:51:39 -返回值 : main
2018-08-09 10:51:39 -请求地址 : http://localhost:8000/main
2018-08-09 10:51:39 -HTTP METHOD : GET
2018-08-09 10:51:39 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 10:51:39 -参数 : []
2018-08-09 10:51:39 -耗时 : 1
2018-08-09 10:51:39 -返回值 : main
2018-08-09 10:51:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:51:48 -请求地址 : http://localhost:8000/system/sysDept
2018-08-09 10:51:48 -HTTP METHOD : GET
2018-08-09 10:51:48 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.dept
2018-08-09 10:51:48 -参数 : []
2018-08-09 10:51:48 -耗时 : 0
2018-08-09 10:51:48 -返回值 : system/dept/dept
2018-08-09 10:51:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:51:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:51:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:51:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:51:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:51:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:51:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:51:48 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 10:51:48 -HTTP METHOD : GET
2018-08-09 10:51:48 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 10:51:48 -参数 : []
2018-08-09 10:51:48 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 10:51:48 -==> Parameters: 
2018-08-09 10:51:48 -<==      Total: 11
2018-08-09 10:51:48 -耗时 : 5
2018-08-09 10:51:48 -返回值 : [DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 10:52:02 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:52:02 -请求地址 : http://localhost:8000/sys/menu/
2018-08-09 10:52:02 -HTTP METHOD : GET
2018-08-09 10:52:02 -CLASS_METHOD : com.zhy.management.system.controller.MenuController.menu
2018-08-09 10:52:02 -参数 : [{}]
2018-08-09 10:52:02 -耗时 : 1
2018-08-09 10:52:02 -返回值 : system/menu/menu
2018-08-09 10:52:02 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:52:02 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:52:02 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:52:02 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:52:02 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:52:02 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:52:02 -请求地址 : http://localhost:8000/sys/menu/list
2018-08-09 10:52:02 -HTTP METHOD : GET
2018-08-09 10:52:02 -CLASS_METHOD : com.zhy.management.system.controller.MenuController.list
2018-08-09 10:52:02 -参数 : [{sort=order_num}]
2018-08-09 10:52:02 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-08-09 10:52:02 -==> Parameters: 
2018-08-09 10:52:02 -<==      Total: 62
2018-08-09 10:52:02 -耗时 : 13
2018-08-09 10:52:02 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=94, parentId=93, name='模型管理', url='activiti/model', perms='', type=1, icon='fa fa-sort-amount-asc', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=96, parentId=93, name='流程管理', url='activiti/process', perms='', type=1, icon='fa fa-flag', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=101, parentId=93, name='待办任务', url='activiti/task/todo', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=77, name='swagger', url='/swagger-ui.html', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=0, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=68, parentId=49, name='发布文章', url='/blog/bContent/add', perms='blog:bContent:add', type=1, icon='fa fa-edit', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=50, parentId=49, name='文章列表', url='blog/bContent', perms='blog:bContent:bContent', type=1, icon='fa fa-file-image-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='common/generator', perms='common:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='部门管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计划任务', url='common/job', perms='common:taskScheduleJob', type=1, icon='fa fa-hourglass-1', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=49, parentId=0, name='博客管理', url='', perms='', type=0, icon='fa fa-rss', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=93, parentId=0, name='工作流程', url='', perms='', type=0, icon='fa fa-print', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='图表管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=7, gmtCreate=null, gmtModified=null}]
2018-08-09 10:52:54 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:52:54 -请求地址 : http://localhost:8000/sys/menu/add/1
2018-08-09 10:52:54 -HTTP METHOD : GET
2018-08-09 10:52:54 -CLASS_METHOD : com.zhy.management.system.controller.MenuController.add
2018-08-09 10:52:54 -参数 : [{}, 1]
2018-08-09 10:52:54 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2018-08-09 10:52:54 -==> Parameters: 1(Long)
2018-08-09 10:52:54 -<==      Total: 1
2018-08-09 10:52:54 -耗时 : 4
2018-08-09 10:52:54 -返回值 : system/menu/add
2018-08-09 10:53:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:53:16 -请求地址 : http://localhost:8000/system/sysDept/add/13
2018-08-09 10:53:16 -HTTP METHOD : GET
2018-08-09 10:53:16 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.add
2018-08-09 10:53:16 -参数 : [13, {}]
2018-08-09 10:53:16 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept where dept_id = ? 
2018-08-09 10:53:16 -==> Parameters: 13(Long)
2018-08-09 10:53:16 -<==      Total: 1
2018-08-09 10:53:16 -耗时 : 2
2018-08-09 10:53:16 -返回值 : system/dept/add
2018-08-09 10:53:28 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:53:28 -请求地址 : http://localhost:8000/system/sysDept/save
2018-08-09 10:53:28 -HTTP METHOD : POST
2018-08-09 10:53:28 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.save
2018-08-09 10:53:28 -参数 : [DeptDO{deptId=null, parentId=13, name='hahaha', orderNum=null, delFlag=null}]
2018-08-09 10:53:28 -==>  Preparing: insert into sys_dept ( `parent_id`, `name`, `order_num`, `del_flag` ) values ( ?, ?, ?, ? ) 
2018-08-09 10:53:28 -==> Parameters: 13(Long), hahaha(String), null, null
2018-08-09 10:53:28 -<==    Updates: 1
2018-08-09 10:53:28 -耗时 : 7
2018-08-09 10:53:28 -返回值 : {msg=操作成功, code=0}
2018-08-09 10:53:28 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:53:28 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 10:53:28 -HTTP METHOD : GET
2018-08-09 10:53:28 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 10:53:28 -参数 : []
2018-08-09 10:53:28 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 10:53:28 -==> Parameters: 
2018-08-09 10:53:28 -<==      Total: 12
2018-08-09 10:53:28 -耗时 : 3
2018-08-09 10:53:28 -返回值 : [DeptDO{deptId=18, parentId=13, name='hahaha', orderNum=null, delFlag=null}, DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 10:53:36 -Starting App on zhy with PID 19672 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 10:53:36 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 10:53:36 -The following profiles are active: dev
2018-08-09 10:53:36 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 10:53:36 CST 2018]; root of context hierarchy
2018-08-09 10:53:37 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 10:53:37 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7d80915f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:53:37 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5ed495ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:53:37 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:53:37 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:53:37 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 10:53:37 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:53:37 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:53:37 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:53:37 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:53:37 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:53:38 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 10:53:38 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 10:53:38 -Starting service [Tomcat]
2018-08-09 10:53:38 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 10:53:38 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 10:53:38 -Initializing Spring embedded WebApplicationContext
2018-08-09 10:53:38 -Root WebApplicationContext: initialization completed in 1379 ms
2018-08-09 10:53:38 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 10:53:38 -Servlet dispatcherServlet mapped to [/]
2018-08-09 10:53:38 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 10:53:38 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 10:53:38 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 10:53:38 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 10:53:38 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 10:53:38 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 10:53:38 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 10:53:36 CST 2018]; root of context hierarchy
2018-08-09 10:53:38 -{dataSource-1} inited
2018-08-09 10:53:38 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 10:53:39 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:53:39 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 10:53:36 CST 2018]; root of context hierarchy
2018-08-09 10:53:39 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 10:53:39 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 10:53:39 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 10:53:39 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 10:53:39 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 10:53:39 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 10:53:39 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 10:53:39 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 10:53:39 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 10:53:39 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 10:53:39 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 10:53:39 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 10:53:39 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 10:53:39 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 10:53:39 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 10:53:39 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 10:53:39 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 10:53:39 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 10:53:39 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 10:53:39 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 10:53:39 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 10:53:39 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 10:53:39 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 10:53:39 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 10:53:39 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 10:53:39 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 10:53:39 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 10:53:39 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 10:53:39 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 10:53:39 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 10:53:39 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 10:53:39 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 10:53:39 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 10:53:39 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 10:53:39 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 10:53:39 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 10:53:39 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 10:53:39 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 10:53:39 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 10:53:39 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 10:53:39 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 10:53:39 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 10:53:39 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 10:53:39 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 10:53:39 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 10:53:39 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 10:53:39 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:53:39 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:53:39 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:53:39 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 10:53:40 -Using default implementation for ThreadExecutor
2018-08-09 10:53:40 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 10:53:40 -Quartz Scheduler v.2.2.1 created.
2018-08-09 10:53:40 -RAMJobStore initialized.
2018-08-09 10:53:40 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 10:53:40 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 10:53:40 -Quartz scheduler version: 2.2.1
2018-08-09 10:53:40 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@4ee8051c
2018-08-09 10:53:40 -Registering beans for JMX exposure on startup
2018-08-09 10:53:40 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 10:53:40 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 10:53:40 -Starting beans in phase 2147483647
2018-08-09 10:53:40 -Starting Quartz Scheduler now
2018-08-09 10:53:40 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 10:53:40 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 10:53:40 -Using a shared selector for servlet write/read
2018-08-09 10:53:40 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 10:53:40 -Started App in 3.635 seconds (JVM running for 4.179)
2018-08-09 10:53:57 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 10:53:57 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 10:53:57 -FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2018-08-09 10:53:57 -Enabling session validation scheduler...
2018-08-09 10:53:57 -请求地址 : http://localhost:8000/
2018-08-09 10:53:57 -HTTP METHOD : GET
2018-08-09 10:53:57 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.welcome
2018-08-09 10:53:57 -参数 : [{}]
2018-08-09 10:53:57 -耗时 : 1
2018-08-09 10:53:57 -返回值 : redirect:/login
2018-08-09 10:53:57 -请求地址 : http://localhost:8000/login
2018-08-09 10:53:57 -HTTP METHOD : GET
2018-08-09 10:53:57 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 10:53:57 -参数 : []
2018-08-09 10:53:57 -耗时 : 0
2018-08-09 10:53:57 -返回值 : login
2018-08-09 10:54:01 -请求地址 : http://localhost:8000/login
2018-08-09 10:54:01 -HTTP METHOD : POST
2018-08-09 10:54:01 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 10:54:01 -参数 : [admin, 111111]
2018-08-09 10:54:01 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 10:54:01 -==> Parameters: admin(String)
2018-08-09 10:54:01 -<==      Total: 1
2018-08-09 10:54:01 -耗时 : 199
2018-08-09 10:54:01 -返回值 : {msg=操作成功, code=0}
2018-08-09 10:54:01 -请求地址 : http://localhost:8000/index
2018-08-09 10:54:01 -HTTP METHOD : GET
2018-08-09 10:54:01 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 10:54:01 -参数 : [{}]
2018-08-09 10:54:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 10:54:01 -==> Parameters: 1(Long)
2018-08-09 10:54:01 -<==      Total: 28
2018-08-09 10:54:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 10:54:01 -==> Parameters: 142(Long)
2018-08-09 10:54:01 -<==      Total: 1
2018-08-09 10:54:01 -耗时 : 27
2018-08-09 10:54:01 -返回值 : index_v1
2018-08-09 10:54:01 -请求地址 : http://localhost:8000/main
2018-08-09 10:54:01 -HTTP METHOD : GET
2018-08-09 10:54:01 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 10:54:01 -参数 : []
2018-08-09 10:54:01 -耗时 : 0
2018-08-09 10:54:01 -返回值 : main
2018-08-09 10:54:01 -请求地址 : http://localhost:8000/main
2018-08-09 10:54:01 -HTTP METHOD : GET
2018-08-09 10:54:01 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 10:54:01 -参数 : []
2018-08-09 10:54:01 -耗时 : 0
2018-08-09 10:54:01 -返回值 : main
2018-08-09 10:54:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:54:09 -请求地址 : http://localhost:8000/system/sysDept
2018-08-09 10:54:09 -HTTP METHOD : GET
2018-08-09 10:54:09 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.dept
2018-08-09 10:54:09 -参数 : []
2018-08-09 10:54:09 -耗时 : 0
2018-08-09 10:54:09 -返回值 : system/dept/dept
2018-08-09 10:54:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:54:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:54:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:54:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:54:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:54:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:54:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:54:09 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 10:54:09 -HTTP METHOD : GET
2018-08-09 10:54:09 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 10:54:09 -参数 : []
2018-08-09 10:54:09 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 10:54:09 -==> Parameters: 
2018-08-09 10:54:09 -<==      Total: 12
2018-08-09 10:54:09 -耗时 : 5
2018-08-09 10:54:09 -返回值 : [DeptDO{deptId=18, parentId=13, name='hahaha', orderNum=null, delFlag=null}, DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 10:54:10 -请求地址 : http://localhost:8000/index
2018-08-09 10:54:10 -HTTP METHOD : GET
2018-08-09 10:54:10 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 10:54:10 -参数 : [{}]
2018-08-09 10:54:10 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 10:54:10 -==> Parameters: 1(Long)
2018-08-09 10:54:10 -<==      Total: 28
2018-08-09 10:54:10 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 10:54:10 -==> Parameters: 142(Long)
2018-08-09 10:54:10 -<==      Total: 1
2018-08-09 10:54:10 -耗时 : 19
2018-08-09 10:54:10 -返回值 : index_v1
2018-08-09 10:54:10 -请求地址 : http://localhost:8000/main
2018-08-09 10:54:10 -HTTP METHOD : GET
2018-08-09 10:54:10 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 10:54:10 -参数 : []
2018-08-09 10:54:10 -耗时 : 0
2018-08-09 10:54:10 -返回值 : main
2018-08-09 10:54:10 -请求地址 : http://localhost:8000/main
2018-08-09 10:54:10 -HTTP METHOD : GET
2018-08-09 10:54:10 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 10:54:10 -参数 : []
2018-08-09 10:54:10 -耗时 : 0
2018-08-09 10:54:10 -返回值 : main
2018-08-09 10:54:18 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:54:18 -请求地址 : http://localhost:8000/system/sysDept
2018-08-09 10:54:18 -HTTP METHOD : GET
2018-08-09 10:54:18 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.dept
2018-08-09 10:54:18 -参数 : []
2018-08-09 10:54:18 -耗时 : 1
2018-08-09 10:54:18 -返回值 : system/dept/dept
2018-08-09 10:54:18 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:54:18 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:54:18 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:54:18 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:54:18 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:54:18 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:54:19 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:54:19 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 10:54:19 -HTTP METHOD : GET
2018-08-09 10:54:19 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 10:54:19 -参数 : []
2018-08-09 10:54:19 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 10:54:19 -==> Parameters: 
2018-08-09 10:54:19 -<==      Total: 12
2018-08-09 10:54:19 -耗时 : 2
2018-08-09 10:54:19 -返回值 : [DeptDO{deptId=18, parentId=13, name='hahaha', orderNum=null, delFlag=null}, DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 10:55:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:55:17 -请求地址 : http://localhost:8000/sys/menu/
2018-08-09 10:55:17 -HTTP METHOD : GET
2018-08-09 10:55:17 -CLASS_METHOD : com.zhy.management.system.controller.MenuController.menu
2018-08-09 10:55:17 -参数 : [{}]
2018-08-09 10:55:17 -耗时 : 1
2018-08-09 10:55:17 -返回值 : system/menu/menu
2018-08-09 10:55:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:55:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:55:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:55:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:55:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:55:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:55:17 -请求地址 : http://localhost:8000/sys/menu/list
2018-08-09 10:55:17 -HTTP METHOD : GET
2018-08-09 10:55:17 -CLASS_METHOD : com.zhy.management.system.controller.MenuController.list
2018-08-09 10:55:17 -参数 : [{sort=order_num}]
2018-08-09 10:55:17 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-08-09 10:55:17 -==> Parameters: 
2018-08-09 10:55:17 -<==      Total: 62
2018-08-09 10:55:17 -耗时 : 11
2018-08-09 10:55:17 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=94, parentId=93, name='模型管理', url='activiti/model', perms='', type=1, icon='fa fa-sort-amount-asc', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=96, parentId=93, name='流程管理', url='activiti/process', perms='', type=1, icon='fa fa-flag', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=101, parentId=93, name='待办任务', url='activiti/task/todo', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=77, name='swagger', url='/swagger-ui.html', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=0, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=68, parentId=49, name='发布文章', url='/blog/bContent/add', perms='blog:bContent:add', type=1, icon='fa fa-edit', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=50, parentId=49, name='文章列表', url='blog/bContent', perms='blog:bContent:bContent', type=1, icon='fa fa-file-image-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='common/generator', perms='common:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='部门管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计划任务', url='common/job', perms='common:taskScheduleJob', type=1, icon='fa fa-hourglass-1', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=49, parentId=0, name='博客管理', url='', perms='', type=0, icon='fa fa-rss', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=93, parentId=0, name='工作流程', url='', perms='', type=0, icon='fa fa-print', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='图表管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=7, gmtCreate=null, gmtModified=null}]
2018-08-09 10:55:51 -从redis中删除 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:55:51 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 10:55:51 -请求地址 : http://localhost:8000/
2018-08-09 10:55:51 -HTTP METHOD : GET
2018-08-09 10:55:51 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.welcome
2018-08-09 10:55:51 -参数 : [{}]
2018-08-09 10:55:51 -耗时 : 0
2018-08-09 10:55:51 -返回值 : redirect:/login
2018-08-09 10:55:51 -请求地址 : http://localhost:8000/login
2018-08-09 10:55:51 -HTTP METHOD : GET
2018-08-09 10:55:51 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 10:55:51 -参数 : []
2018-08-09 10:55:51 -耗时 : 0
2018-08-09 10:55:51 -返回值 : login
2018-08-09 10:56:31 -请求地址 : http://localhost:8000/login
2018-08-09 10:56:31 -HTTP METHOD : POST
2018-08-09 10:56:31 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 10:56:31 -参数 : [lijing, 111111]
2018-08-09 10:56:31 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 10:56:31 -==> Parameters: lijing(String)
2018-08-09 10:56:31 -<==      Total: 1
2018-08-09 10:56:31 -耗时 : 3
2018-08-09 10:56:31 -返回值 : {msg=用户或密码错误, code=500}
2018-08-09 10:56:32 -请求地址 : http://localhost:8000/login
2018-08-09 10:56:32 -HTTP METHOD : POST
2018-08-09 10:56:32 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 10:56:32 -参数 : [lijing, 111111]
2018-08-09 10:56:32 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 10:56:32 -==> Parameters: lijing(String)
2018-08-09 10:56:32 -<==      Total: 1
2018-08-09 10:56:32 -耗时 : 3
2018-08-09 10:56:32 -返回值 : {msg=用户或密码错误, code=500}
2018-08-09 10:59:41 -Starting App on zhy with PID 15472 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 10:59:41 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 10:59:41 -The following profiles are active: dev
2018-08-09 10:59:41 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@437da279: startup date [Thu Aug 09 10:59:41 CST 2018]; root of context hierarchy
2018-08-09 10:59:42 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 10:59:42 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ec396060] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:59:42 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$cd8d64f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:59:43 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:59:43 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:59:43 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 10:59:43 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:59:43 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:59:43 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:59:43 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:59:43 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 10:59:43 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 10:59:43 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 10:59:43 -Starting service [Tomcat]
2018-08-09 10:59:43 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 10:59:43 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 10:59:43 -Initializing Spring embedded WebApplicationContext
2018-08-09 10:59:43 -Root WebApplicationContext: initialization completed in 2358 ms
2018-08-09 10:59:43 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 10:59:43 -Servlet dispatcherServlet mapped to [/]
2018-08-09 10:59:43 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 10:59:43 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 10:59:43 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 10:59:43 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 10:59:43 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 10:59:43 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 10:59:43 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@437da279: startup date [Thu Aug 09 10:59:41 CST 2018]; root of context hierarchy
2018-08-09 10:59:44 -{dataSource-1} inited
2018-08-09 10:59:44 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 10:59:44 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:59:45 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@437da279: startup date [Thu Aug 09 10:59:41 CST 2018]; root of context hierarchy
2018-08-09 10:59:45 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 10:59:45 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 10:59:45 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 10:59:45 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 10:59:45 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 10:59:45 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 10:59:45 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 10:59:45 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 10:59:45 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 10:59:45 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 10:59:45 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 10:59:45 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 10:59:45 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 10:59:45 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 10:59:45 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 10:59:45 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 10:59:45 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 10:59:45 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 10:59:45 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 10:59:45 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 10:59:45 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 10:59:45 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 10:59:45 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 10:59:45 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 10:59:45 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 10:59:45 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 10:59:45 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 10:59:45 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 10:59:45 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 10:59:45 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 10:59:45 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 10:59:45 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 10:59:45 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 10:59:45 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 10:59:45 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 10:59:45 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 10:59:45 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 10:59:45 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 10:59:45 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 10:59:45 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 10:59:45 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 10:59:45 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 10:59:45 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 10:59:45 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 10:59:45 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 10:59:45 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 10:59:45 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:59:45 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:59:45 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 10:59:45 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 10:59:45 -Using default implementation for ThreadExecutor
2018-08-09 10:59:45 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 10:59:45 -Quartz Scheduler v.2.2.1 created.
2018-08-09 10:59:45 -RAMJobStore initialized.
2018-08-09 10:59:45 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 10:59:45 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 10:59:45 -Quartz scheduler version: 2.2.1
2018-08-09 10:59:45 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@1693ff90
2018-08-09 10:59:45 -Registering beans for JMX exposure on startup
2018-08-09 10:59:45 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 10:59:45 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 10:59:45 -Starting beans in phase 2147483647
2018-08-09 10:59:45 -Starting Quartz Scheduler now
2018-08-09 10:59:45 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 10:59:45 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 10:59:45 -Using a shared selector for servlet write/read
2018-08-09 10:59:45 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 10:59:45 -Started App in 4.976 seconds (JVM running for 6.181)
2018-08-09 10:59:51 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 10:59:51 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 10:59:51 -FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2018-08-09 10:59:52 -Enabling session validation scheduler...
2018-08-09 10:59:52 -请求地址 : http://localhost:8000/login
2018-08-09 10:59:52 -HTTP METHOD : GET
2018-08-09 10:59:52 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 10:59:52 -参数 : []
2018-08-09 10:59:52 -耗时 : 1
2018-08-09 10:59:52 -返回值 : login
2018-08-09 10:59:53 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:184)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:93)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1767)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:106)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:889)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:433)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:362)
	at redis.clients.util.Pool.getResource(Pool.java:49)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:226)
	at com.zhy.management.common.redis.shiro.RedisManager.set(RedisManager.java:108)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.saveSession(RedisSessionDAO.java:51)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.doCreate(RedisSessionDAO.java:83)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.create(AbstractSessionDAO.java:116)
	at org.apache.shiro.session.mgt.DefaultSessionManager.create(DefaultSessionManager.java:177)
	at org.apache.shiro.session.mgt.DefaultSessionManager.doCreateSession(DefaultSessionManager.java:158)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.createSession(AbstractValidatingSessionManager.java:136)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.start(AbstractNativeSessionManager.java:99)
	at org.apache.shiro.mgt.SessionsSecurityManager.start(SessionsSecurityManager.java:152)
	at org.apache.shiro.subject.support.DelegatingSubject.getSession(DelegatingSubject.java:336)
	at org.apache.shiro.subject.support.DelegatingSubject.getSession(DelegatingSubject.java:312)
	at org.apache.shiro.web.util.WebUtils.saveRequest(WebUtils.java:607)
	at org.apache.shiro.web.filter.AccessControlFilter.saveRequest(AccessControlFilter.java:208)
	at org.apache.shiro.web.filter.AccessControlFilter.saveRequestAndRedirectToLogin(AccessControlFilter.java:191)
	at org.apache.shiro.web.filter.authc.FormAuthenticationFilter.onAccessDenied(FormAuthenticationFilter.java:168)
	at org.apache.shiro.web.filter.AccessControlFilter.onAccessDenied(AccessControlFilter.java:133)
	at org.apache.shiro.web.filter.AccessControlFilter.onPreHandle(AccessControlFilter.java:162)
	at org.apache.shiro.web.filter.PathMatchingFilter.isFilterChainContinued(PathMatchingFilter.java:203)
	at org.apache.shiro.web.filter.PathMatchingFilter.preHandle(PathMatchingFilter.java:178)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:131)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:83)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 11:00:01 -请求地址 : http://localhost:8000/login
2018-08-09 11:00:01 -HTTP METHOD : POST
2018-08-09 11:00:01 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 11:00:01 -参数 : [lijing, 111111]
2018-08-09 11:00:01 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 11:00:01 -==> Parameters: lijing(String)
2018-08-09 11:00:02 -<==      Total: 1
2018-08-09 11:00:02 -耗时 : 331
2018-08-09 11:00:02 -返回值 : {msg=用户或密码错误, code=500}
2018-08-09 11:00:11 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:184)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:93)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1767)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:106)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:889)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:433)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:362)
	at redis.clients.util.Pool.getResource(Pool.java:49)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:226)
	at com.zhy.management.common.redis.shiro.RedisManager.set(RedisManager.java:108)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.saveSession(RedisSessionDAO.java:51)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.doCreate(RedisSessionDAO.java:83)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.create(AbstractSessionDAO.java:116)
	at org.apache.shiro.session.mgt.DefaultSessionManager.create(DefaultSessionManager.java:177)
	at org.apache.shiro.session.mgt.DefaultSessionManager.doCreateSession(DefaultSessionManager.java:158)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.createSession(AbstractValidatingSessionManager.java:136)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.start(AbstractNativeSessionManager.java:99)
	at org.apache.shiro.mgt.SessionsSecurityManager.start(SessionsSecurityManager.java:152)
	at org.apache.shiro.subject.support.DelegatingSubject.getSession(DelegatingSubject.java:336)
	at org.apache.shiro.subject.support.DelegatingSubject.getSession(DelegatingSubject.java:312)
	at org.apache.shiro.web.util.WebUtils.saveRequest(WebUtils.java:607)
	at org.apache.shiro.web.filter.AccessControlFilter.saveRequest(AccessControlFilter.java:208)
	at org.apache.shiro.web.filter.AccessControlFilter.saveRequestAndRedirectToLogin(AccessControlFilter.java:191)
	at org.apache.shiro.web.filter.authc.FormAuthenticationFilter.onAccessDenied(FormAuthenticationFilter.java:168)
	at org.apache.shiro.web.filter.AccessControlFilter.onAccessDenied(AccessControlFilter.java:133)
	at org.apache.shiro.web.filter.AccessControlFilter.onPreHandle(AccessControlFilter.java:162)
	at org.apache.shiro.web.filter.PathMatchingFilter.isFilterChainContinued(PathMatchingFilter.java:203)
	at org.apache.shiro.web.filter.PathMatchingFilter.preHandle(PathMatchingFilter.java:178)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:131)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 11:00:14 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:184)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:93)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1767)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:106)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:889)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:433)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:362)
	at redis.clients.util.Pool.getResource(Pool.java:49)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:226)
	at com.zhy.management.common.redis.shiro.RedisManager.set(RedisManager.java:108)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.saveSession(RedisSessionDAO.java:51)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.doCreate(RedisSessionDAO.java:83)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.create(AbstractSessionDAO.java:116)
	at org.apache.shiro.session.mgt.DefaultSessionManager.create(DefaultSessionManager.java:177)
	at org.apache.shiro.session.mgt.DefaultSessionManager.doCreateSession(DefaultSessionManager.java:158)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.createSession(AbstractValidatingSessionManager.java:136)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.start(AbstractNativeSessionManager.java:99)
	at org.apache.shiro.mgt.SessionsSecurityManager.start(SessionsSecurityManager.java:152)
	at org.apache.shiro.subject.support.DelegatingSubject.getSession(DelegatingSubject.java:336)
	at org.apache.shiro.subject.support.DelegatingSubject.getSession(DelegatingSubject.java:312)
	at org.apache.shiro.web.util.WebUtils.saveRequest(WebUtils.java:607)
	at org.apache.shiro.web.filter.AccessControlFilter.saveRequest(AccessControlFilter.java:208)
	at org.apache.shiro.web.filter.AccessControlFilter.saveRequestAndRedirectToLogin(AccessControlFilter.java:191)
	at org.apache.shiro.web.filter.authc.FormAuthenticationFilter.onAccessDenied(FormAuthenticationFilter.java:168)
	at org.apache.shiro.web.filter.AccessControlFilter.onAccessDenied(AccessControlFilter.java:133)
	at org.apache.shiro.web.filter.AccessControlFilter.onPreHandle(AccessControlFilter.java:162)
	at org.apache.shiro.web.filter.PathMatchingFilter.isFilterChainContinued(PathMatchingFilter.java:203)
	at org.apache.shiro.web.filter.PathMatchingFilter.preHandle(PathMatchingFilter.java:178)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:131)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 11:00:19 -请求地址 : http://localhost:8000/
2018-08-09 11:00:19 -HTTP METHOD : GET
2018-08-09 11:00:19 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.welcome
2018-08-09 11:00:19 -参数 : [{}]
2018-08-09 11:00:19 -耗时 : 0
2018-08-09 11:00:19 -返回值 : redirect:/login
2018-08-09 11:00:19 -请求地址 : http://localhost:8000/login
2018-08-09 11:00:19 -HTTP METHOD : GET
2018-08-09 11:00:19 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 11:00:19 -参数 : []
2018-08-09 11:00:19 -耗时 : 0
2018-08-09 11:00:19 -返回值 : login
2018-08-09 11:00:21 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:184)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:93)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1767)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:106)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:889)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:433)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:362)
	at redis.clients.util.Pool.getResource(Pool.java:49)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:226)
	at com.zhy.management.common.redis.shiro.RedisManager.set(RedisManager.java:108)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.saveSession(RedisSessionDAO.java:51)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.doCreate(RedisSessionDAO.java:83)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.create(AbstractSessionDAO.java:116)
	at org.apache.shiro.session.mgt.DefaultSessionManager.create(DefaultSessionManager.java:177)
	at org.apache.shiro.session.mgt.DefaultSessionManager.doCreateSession(DefaultSessionManager.java:158)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.createSession(AbstractValidatingSessionManager.java:136)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.start(AbstractNativeSessionManager.java:99)
	at org.apache.shiro.mgt.SessionsSecurityManager.start(SessionsSecurityManager.java:152)
	at org.apache.shiro.subject.support.DelegatingSubject.getSession(DelegatingSubject.java:336)
	at org.apache.shiro.subject.support.DelegatingSubject.getSession(DelegatingSubject.java:312)
	at org.apache.shiro.web.util.WebUtils.saveRequest(WebUtils.java:607)
	at org.apache.shiro.web.filter.AccessControlFilter.saveRequest(AccessControlFilter.java:208)
	at org.apache.shiro.web.filter.AccessControlFilter.saveRequestAndRedirectToLogin(AccessControlFilter.java:191)
	at org.apache.shiro.web.filter.authc.FormAuthenticationFilter.onAccessDenied(FormAuthenticationFilter.java:168)
	at org.apache.shiro.web.filter.AccessControlFilter.onAccessDenied(AccessControlFilter.java:133)
	at org.apache.shiro.web.filter.AccessControlFilter.onPreHandle(AccessControlFilter.java:162)
	at org.apache.shiro.web.filter.PathMatchingFilter.isFilterChainContinued(PathMatchingFilter.java:203)
	at org.apache.shiro.web.filter.PathMatchingFilter.preHandle(PathMatchingFilter.java:178)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:131)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:83)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 11:00:22 -请求地址 : http://localhost:8000/login
2018-08-09 11:00:22 -HTTP METHOD : POST
2018-08-09 11:00:22 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 11:00:22 -参数 : [admin, 111111]
2018-08-09 11:00:22 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 11:00:22 -==> Parameters: admin(String)
2018-08-09 11:00:22 -<==      Total: 1
2018-08-09 11:00:23 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:184)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:93)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1767)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:106)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:889)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:433)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:362)
	at redis.clients.util.Pool.getResource(Pool.java:49)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:226)
	at com.zhy.management.common.redis.shiro.RedisManager.set(RedisManager.java:108)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.saveSession(RedisSessionDAO.java:51)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.doCreate(RedisSessionDAO.java:83)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.create(AbstractSessionDAO.java:116)
	at org.apache.shiro.session.mgt.DefaultSessionManager.create(DefaultSessionManager.java:177)
	at org.apache.shiro.session.mgt.DefaultSessionManager.doCreateSession(DefaultSessionManager.java:158)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.createSession(AbstractValidatingSessionManager.java:136)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.start(AbstractNativeSessionManager.java:99)
	at org.apache.shiro.mgt.SessionsSecurityManager.start(SessionsSecurityManager.java:152)
	at org.apache.shiro.subject.support.DelegatingSubject.getSession(DelegatingSubject.java:336)
	at org.apache.shiro.subject.support.DelegatingSubject.getSession(DelegatingSubject.java:312)
	at org.apache.shiro.mgt.DefaultSubjectDAO.mergePrincipals(DefaultSubjectDAO.java:204)
	at org.apache.shiro.mgt.DefaultSubjectDAO.saveToSession(DefaultSubjectDAO.java:166)
	at org.apache.shiro.mgt.DefaultSubjectDAO.save(DefaultSubjectDAO.java:147)
	at org.apache.shiro.mgt.DefaultSecurityManager.save(DefaultSecurityManager.java:383)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:350)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:183)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:283)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.zhy.management.system.controller.LoginController.ajaxLogin(LoginController.java:80)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.zhy.management.common.aspect.WebLogAspect.doAround(WebLogAspect.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.zhy.management.system.controller.LoginController$$EnhancerBySpringCGLIB$$f015ef63.ajaxLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 11:00:26 -请求地址 : http://localhost:8000/login
2018-08-09 11:00:26 -HTTP METHOD : POST
2018-08-09 11:00:26 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 11:00:26 -参数 : [admin, 111111]
2018-08-09 11:00:26 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 11:00:26 -==> Parameters: admin(String)
2018-08-09 11:00:26 -<==      Total: 1
2018-08-09 11:00:27 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:184)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:93)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1767)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:106)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:889)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:433)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:362)
	at redis.clients.util.Pool.getResource(Pool.java:49)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:226)
	at com.zhy.management.common.redis.shiro.RedisManager.set(RedisManager.java:108)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.saveSession(RedisSessionDAO.java:51)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.doCreate(RedisSessionDAO.java:83)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.create(AbstractSessionDAO.java:116)
	at org.apache.shiro.session.mgt.DefaultSessionManager.create(DefaultSessionManager.java:177)
	at org.apache.shiro.session.mgt.DefaultSessionManager.doCreateSession(DefaultSessionManager.java:158)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.createSession(AbstractValidatingSessionManager.java:136)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.start(AbstractNativeSessionManager.java:99)
	at org.apache.shiro.mgt.SessionsSecurityManager.start(SessionsSecurityManager.java:152)
	at org.apache.shiro.subject.support.DelegatingSubject.getSession(DelegatingSubject.java:336)
	at org.apache.shiro.subject.support.DelegatingSubject.getSession(DelegatingSubject.java:312)
	at org.apache.shiro.mgt.DefaultSubjectDAO.mergePrincipals(DefaultSubjectDAO.java:204)
	at org.apache.shiro.mgt.DefaultSubjectDAO.saveToSession(DefaultSubjectDAO.java:166)
	at org.apache.shiro.mgt.DefaultSubjectDAO.save(DefaultSubjectDAO.java:147)
	at org.apache.shiro.mgt.DefaultSecurityManager.save(DefaultSecurityManager.java:383)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:350)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:183)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:283)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.zhy.management.system.controller.LoginController.ajaxLogin(LoginController.java:80)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.zhy.management.common.aspect.WebLogAspect.doAround(WebLogAspect.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.zhy.management.system.controller.LoginController$$EnhancerBySpringCGLIB$$f015ef63.ajaxLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 11:00:47 -请求地址 : http://localhost:8000/login
2018-08-09 11:00:47 -HTTP METHOD : POST
2018-08-09 11:00:47 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 11:00:47 -参数 : [lijing, 111111]
2018-08-09 11:00:47 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 11:00:47 -==> Parameters: lijing(String)
2018-08-09 11:00:47 -<==      Total: 1
2018-08-09 11:00:47 -耗时 : 3
2018-08-09 11:00:47 -返回值 : {msg=用户或密码错误, code=500}
2018-08-09 11:00:56 -请求地址 : http://localhost:8000/login
2018-08-09 11:00:56 -HTTP METHOD : POST
2018-08-09 11:00:56 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 11:00:56 -参数 : [admin, 111111]
2018-08-09 11:00:56 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 11:00:56 -==> Parameters: admin(String)
2018-08-09 11:00:56 -<==      Total: 1
2018-08-09 11:00:57 -耗时 : 13
2018-08-09 11:00:57 -返回值 : {msg=操作成功, code=0}
2018-08-09 11:00:57 -请求地址 : http://localhost:8000/index
2018-08-09 11:00:57 -HTTP METHOD : GET
2018-08-09 11:00:57 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 11:00:57 -参数 : [{}]
2018-08-09 11:00:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 11:00:57 -==> Parameters: 1(Long)
2018-08-09 11:00:57 -<==      Total: 28
2018-08-09 11:00:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 11:00:57 -==> Parameters: 142(Long)
2018-08-09 11:00:57 -<==      Total: 1
2018-08-09 11:00:57 -耗时 : 45
2018-08-09 11:00:57 -返回值 : index_v1
2018-08-09 11:00:57 -请求地址 : http://localhost:8000/main
2018-08-09 11:00:57 -HTTP METHOD : GET
2018-08-09 11:00:57 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 11:00:57 -参数 : []
2018-08-09 11:00:57 -耗时 : 0
2018-08-09 11:00:57 -返回值 : main
2018-08-09 11:00:57 -请求地址 : http://localhost:8000/main
2018-08-09 11:00:57 -HTTP METHOD : GET
2018-08-09 11:00:57 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 11:00:57 -参数 : []
2018-08-09 11:00:57 -耗时 : 0
2018-08-09 11:00:57 -返回值 : main
2018-08-09 11:01:01 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 11:01:01 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-08-09 11:01:01 -==> Parameters: 1(Long)
2018-08-09 11:01:01 -<==      Total: 47
2018-08-09 11:01:01 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 11:01:01 -请求地址 : http://localhost:8000/sys/user/
2018-08-09 11:01:01 -HTTP METHOD : GET
2018-08-09 11:01:01 -CLASS_METHOD : com.zhy.management.system.controller.UserController.user
2018-08-09 11:01:01 -参数 : [{}]
2018-08-09 11:01:01 -耗时 : 0
2018-08-09 11:01:01 -返回值 : system/user/user
2018-08-09 11:01:01 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 11:01:01 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 11:01:01 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 11:01:01 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 11:01:01 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 11:01:02 -请求地址 : http://localhost:8000/system/sysDept/tree
2018-08-09 11:01:02 -HTTP METHOD : GET
2018-08-09 11:01:02 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.tree
2018-08-09 11:01:02 -参数 : []
2018-08-09 11:01:02 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 11:01:02 -==> Parameters: 
2018-08-09 11:01:02 -<==      Total: 12
2018-08-09 11:01:02 -耗时 : 12
2018-08-09 11:01:02 -请求地址 : http://localhost:8000/sys/user/list
2018-08-09 11:01:02 -HTTP METHOD : GET
2018-08-09 11:01:02 -CLASS_METHOD : com.zhy.management.system.controller.UserController.list
2018-08-09 11:01:02 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-08-09 11:01:02 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-08-09 11:01:02 -==> Parameters: 0(Integer), 10(Integer)
2018-08-09 11:01:02 -<==      Total: 7
2018-08-09 11:01:02 -==>  Preparing: select count(*) from sys_user 
2018-08-09 11:01:02 -==> Parameters: 
2018-08-09 11:01:02 -<==      Total: 1
2018-08-09 11:01:02 -耗时 : 18
2018-08-09 11:01:02 -返回值 : com.zhy.management.common.utils.PageUtils@62d60b6a
2018-08-09 11:01:02 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"18","parentId":"13","state":{"opened":true},"text":"hahaha"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"人事"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"自然的恩典"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"福慧学院"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"17","parentId":"9","state":{"opened":true},"text":"人事"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"信息"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"总部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"视频部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"德养"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-08-09 11:01:07 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 11:01:07 -请求地址 : http://localhost:8000/sys/user/edit/123
2018-08-09 11:01:07 -HTTP METHOD : GET
2018-08-09 11:01:07 -CLASS_METHOD : com.zhy.management.system.controller.UserController.edit
2018-08-09 11:01:07 -参数 : [{}, 123]
2018-08-09 11:01:07 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-08-09 11:01:07 -==> Parameters: 123(Long)
2018-08-09 11:01:07 -<==      Total: 1
2018-08-09 11:01:07 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-08-09 11:01:07 -==> Parameters: 123(Long)
2018-08-09 11:01:07 -<==      Total: 1
2018-08-09 11:01:07 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept where dept_id = ? 
2018-08-09 11:01:07 -==> Parameters: 17(Long)
2018-08-09 11:01:07 -<==      Total: 1
2018-08-09 11:01:07 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-08-09 11:01:07 -==> Parameters: 123(Long)
2018-08-09 11:01:07 -<==      Total: 1
2018-08-09 11:01:07 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-08-09 11:01:07 -==> Parameters: 
2018-08-09 11:01:07 -<==      Total: 2
2018-08-09 11:01:07 -耗时 : 19
2018-08-09 11:01:07 -返回值 : system/user/edit
2018-08-09 11:01:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 11:01:21 -请求地址 : http://localhost:8000/sys/user/resetPwd/123
2018-08-09 11:01:21 -HTTP METHOD : GET
2018-08-09 11:01:21 -CLASS_METHOD : com.zhy.management.system.controller.UserController.resetPwd
2018-08-09 11:01:21 -参数 : [123, {}]
2018-08-09 11:01:21 -耗时 : 0
2018-08-09 11:01:21 -返回值 : system/user/reset_pwd
2018-08-09 11:01:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 11:01:26 -请求地址 : http://localhost:8000/sys/user/adminResetPwd
2018-08-09 11:01:26 -HTTP METHOD : POST
2018-08-09 11:01:26 -CLASS_METHOD : com.zhy.management.system.controller.UserController.adminResetPwd
2018-08-09 11:01:26 -参数 : [com.zhy.management.system.vo.UserVO@414ab2bc]
2018-08-09 11:01:26 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-08-09 11:01:26 -==> Parameters: 123(Long)
2018-08-09 11:01:26 -<==      Total: 1
2018-08-09 11:01:26 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-08-09 11:01:26 -==> Parameters: 123(Long)
2018-08-09 11:01:26 -<==      Total: 1
2018-08-09 11:01:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept where dept_id = ? 
2018-08-09 11:01:26 -==> Parameters: 17(Long)
2018-08-09 11:01:26 -<==      Total: 1
2018-08-09 11:01:26 -==>  Preparing: update sys_user SET `username` = ?, `name` = ?, `password` = ?, `dept_id` = ?, `email` = ?, `status` = ? where user_id = ? 
2018-08-09 11:01:26 -==> Parameters: lijing(String), 李晶(String), 111111(String), 17(Long), zxy@bootdo(String), 0(Integer), 123(Long)
2018-08-09 11:01:26 -<==    Updates: 1
2018-08-09 11:01:26 -耗时 : 11
2018-08-09 11:01:26 -返回值 : {msg=操作成功, code=0}
2018-08-09 11:01:26 -请求地址 : http://localhost:8000/sys/user/list
2018-08-09 11:01:26 -HTTP METHOD : GET
2018-08-09 11:01:26 -CLASS_METHOD : com.zhy.management.system.controller.UserController.list
2018-08-09 11:01:26 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-08-09 11:01:26 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-08-09 11:01:26 -==> Parameters: 0(Integer), 10(Integer)
2018-08-09 11:01:26 -<==      Total: 7
2018-08-09 11:01:26 -==>  Preparing: select count(*) from sys_user 
2018-08-09 11:01:26 -==> Parameters: 
2018-08-09 11:01:26 -<==      Total: 1
2018-08-09 11:01:26 -耗时 : 8
2018-08-09 11:01:26 -返回值 : com.zhy.management.common.utils.PageUtils@7b93ee18
2018-08-09 11:01:33 -从redis中删除 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 11:01:33 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 11:01:33 -请求地址 : http://localhost:8000/
2018-08-09 11:01:33 -HTTP METHOD : GET
2018-08-09 11:01:33 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.welcome
2018-08-09 11:01:33 -参数 : [{}]
2018-08-09 11:01:33 -耗时 : 0
2018-08-09 11:01:33 -返回值 : redirect:/login
2018-08-09 11:01:33 -请求地址 : http://localhost:8000/login
2018-08-09 11:01:33 -HTTP METHOD : GET
2018-08-09 11:01:33 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 11:01:33 -参数 : []
2018-08-09 11:01:33 -耗时 : 0
2018-08-09 11:01:33 -返回值 : login
2018-08-09 11:01:37 -请求地址 : http://localhost:8000/login
2018-08-09 11:01:37 -HTTP METHOD : POST
2018-08-09 11:01:37 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 11:01:37 -参数 : [lijing, 111111]
2018-08-09 11:01:37 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 11:01:37 -==> Parameters: lijing(String)
2018-08-09 11:01:37 -<==      Total: 1
2018-08-09 11:01:37 -耗时 : 2
2018-08-09 11:01:37 -返回值 : {msg=用户或密码错误, code=500}
2018-08-09 11:02:07 -请求地址 : http://localhost:8000/login
2018-08-09 11:02:07 -HTTP METHOD : POST
2018-08-09 11:02:07 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 11:02:07 -参数 : [lijing, 111111]
2018-08-09 11:02:07 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 11:02:07 -==> Parameters: lijing(String)
2018-08-09 11:02:07 -<==      Total: 1
2018-08-09 11:02:07 -耗时 : 2
2018-08-09 11:02:07 -返回值 : {msg=用户或密码错误, code=500}
2018-08-09 11:02:50 -Starting App on zhy with PID 15820 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 11:02:50 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 11:02:50 -The following profiles are active: dev
2018-08-09 11:02:50 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 11:02:50 CST 2018]; root of context hierarchy
2018-08-09 11:02:51 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 11:02:51 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7d80915f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 11:02:51 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5ed495ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 11:02:51 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 11:02:51 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 11:02:51 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 11:02:51 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 11:02:51 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 11:02:51 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 11:02:51 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 11:02:51 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 11:02:52 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 11:02:52 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 11:02:52 -Starting service [Tomcat]
2018-08-09 11:02:52 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 11:02:52 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 11:02:52 -Initializing Spring embedded WebApplicationContext
2018-08-09 11:02:52 -Root WebApplicationContext: initialization completed in 1327 ms
2018-08-09 11:02:52 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 11:02:52 -Servlet dispatcherServlet mapped to [/]
2018-08-09 11:02:52 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 11:02:52 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 11:02:52 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 11:02:52 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 11:02:52 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 11:02:52 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 11:02:52 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 11:02:50 CST 2018]; root of context hierarchy
2018-08-09 11:02:52 -{dataSource-1} inited
2018-08-09 11:02:52 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 11:02:52 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 11:02:53 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 11:02:50 CST 2018]; root of context hierarchy
2018-08-09 11:02:53 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 11:02:53 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 11:02:53 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 11:02:53 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 11:02:53 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 11:02:53 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 11:02:53 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 11:02:53 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 11:02:53 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 11:02:53 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 11:02:53 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 11:02:53 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 11:02:53 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 11:02:53 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 11:02:53 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 11:02:53 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 11:02:53 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 11:02:53 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 11:02:53 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 11:02:53 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 11:02:53 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 11:02:53 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 11:02:53 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 11:02:53 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 11:02:53 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 11:02:53 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 11:02:53 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 11:02:53 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 11:02:53 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 11:02:53 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 11:02:53 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 11:02:53 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 11:02:53 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 11:02:53 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 11:02:53 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 11:02:53 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 11:02:53 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 11:02:53 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 11:02:53 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 11:02:53 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 11:02:53 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 11:02:53 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 11:02:53 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 11:02:53 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 11:02:53 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 11:02:53 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 11:02:53 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 11:02:53 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 11:02:53 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 11:02:53 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 11:02:53 -Using default implementation for ThreadExecutor
2018-08-09 11:02:53 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 11:02:53 -Quartz Scheduler v.2.2.1 created.
2018-08-09 11:02:53 -RAMJobStore initialized.
2018-08-09 11:02:53 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 11:02:53 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 11:02:53 -Quartz scheduler version: 2.2.1
2018-08-09 11:02:53 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@4ee8051c
2018-08-09 11:02:53 -Registering beans for JMX exposure on startup
2018-08-09 11:02:53 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 11:02:53 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 11:02:53 -Starting beans in phase 2147483647
2018-08-09 11:02:53 -Starting Quartz Scheduler now
2018-08-09 11:02:53 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 11:02:53 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 11:02:53 -Using a shared selector for servlet write/read
2018-08-09 11:02:53 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 11:02:53 -Started App in 3.382 seconds (JVM running for 3.907)
2018-08-09 11:03:06 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 11:03:06 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 11:03:06 -FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2018-08-09 11:03:06 -Enabling session validation scheduler...
2018-08-09 11:03:06 -请求地址 : http://localhost:8000/login
2018-08-09 11:03:06 -HTTP METHOD : POST
2018-08-09 11:03:06 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 11:03:06 -参数 : [lijing, 111111]
2018-08-09 11:03:06 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 11:03:06 -==> Parameters: lijing(String)
2018-08-09 11:03:06 -<==      Total: 1
2018-08-09 11:03:06 -耗时 : 88
2018-08-09 11:03:06 -返回值 : {msg=用户或密码错误, code=500}
2018-08-09 11:03:51 -Starting App on zhy with PID 1384 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 11:03:51 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 11:03:51 -The following profiles are active: dev
2018-08-09 11:03:51 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 11:03:51 CST 2018]; root of context hierarchy
2018-08-09 11:03:51 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 11:03:51 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b428f899] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 11:03:51 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$957cfd29] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 11:03:52 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 11:03:52 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 11:03:52 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 11:03:52 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 11:03:52 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 11:03:52 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 11:03:52 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 11:03:52 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 11:03:52 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 11:03:52 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 11:03:52 -Starting service [Tomcat]
2018-08-09 11:03:52 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 11:03:52 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 11:03:52 -Initializing Spring embedded WebApplicationContext
2018-08-09 11:03:52 -Root WebApplicationContext: initialization completed in 1293 ms
2018-08-09 11:03:52 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 11:03:52 -Servlet dispatcherServlet mapped to [/]
2018-08-09 11:03:52 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 11:03:52 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 11:03:52 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 11:03:52 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 11:03:52 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 11:03:52 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 11:03:52 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 11:03:51 CST 2018]; root of context hierarchy
2018-08-09 11:03:52 -{dataSource-1} inited
2018-08-09 11:03:53 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 11:03:53 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 11:03:53 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 11:03:51 CST 2018]; root of context hierarchy
2018-08-09 11:03:53 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 11:03:53 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 11:03:53 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 11:03:53 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 11:03:53 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 11:03:53 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 11:03:53 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 11:03:53 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 11:03:53 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 11:03:53 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 11:03:53 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 11:03:53 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 11:03:53 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 11:03:53 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 11:03:53 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 11:03:53 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 11:03:53 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 11:03:53 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 11:03:53 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 11:03:53 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 11:03:53 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 11:03:53 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 11:03:53 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 11:03:53 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 11:03:53 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 11:03:53 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 11:03:53 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 11:03:53 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 11:03:53 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 11:03:53 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 11:03:53 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 11:03:53 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 11:03:53 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 11:03:53 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 11:03:53 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 11:03:53 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 11:03:53 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 11:03:53 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 11:03:53 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 11:03:53 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 11:03:53 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 11:03:53 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 11:03:53 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 11:03:53 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 11:03:53 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 11:03:53 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 11:03:53 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 11:03:53 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 11:03:53 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 11:03:53 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 11:03:53 -Using default implementation for ThreadExecutor
2018-08-09 11:03:53 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 11:03:53 -Quartz Scheduler v.2.2.1 created.
2018-08-09 11:03:53 -RAMJobStore initialized.
2018-08-09 11:03:53 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 11:03:53 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 11:03:53 -Quartz scheduler version: 2.2.1
2018-08-09 11:03:53 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@47058864
2018-08-09 11:03:54 -Registering beans for JMX exposure on startup
2018-08-09 11:03:54 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 11:03:54 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 11:03:54 -Starting beans in phase 2147483647
2018-08-09 11:03:54 -Starting Quartz Scheduler now
2018-08-09 11:03:54 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 11:03:54 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 11:03:54 -Using a shared selector for servlet write/read
2018-08-09 11:03:54 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 11:03:54 -Started App in 3.314 seconds (JVM running for 3.833)
2018-08-09 11:03:57 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 11:03:57 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 11:03:57 -FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
2018-08-09 11:03:57 -Enabling session validation scheduler...
2018-08-09 11:03:57 -请求地址 : http://localhost:8000/login
2018-08-09 11:03:57 -HTTP METHOD : GET
2018-08-09 11:03:57 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 11:03:57 -参数 : []
2018-08-09 11:03:57 -耗时 : 1
2018-08-09 11:03:57 -返回值 : login
2018-08-09 11:03:57 -请求地址 : http://localhost:8000/login;JSESSIONID=7afa67df-06b0-4680-8960-543388bdf6cd
2018-08-09 11:03:57 -HTTP METHOD : GET
2018-08-09 11:03:57 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 11:03:57 -参数 : []
2018-08-09 11:03:57 -耗时 : 0
2018-08-09 11:03:57 -返回值 : login
2018-08-09 11:04:07 -请求地址 : http://localhost:8000/login
2018-08-09 11:04:07 -HTTP METHOD : POST
2018-08-09 11:04:07 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 11:04:07 -参数 : [lijing, 111111]
2018-08-09 11:04:07 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 11:04:07 -==> Parameters: lijing(String)
2018-08-09 11:04:07 -<==      Total: 1
2018-08-09 11:04:07 -耗时 : 201
2018-08-09 11:04:07 -返回值 : {msg=用户或密码错误, code=500}
2018-08-09 11:05:12 -请求地址 : http://localhost:8000/login
2018-08-09 11:05:12 -HTTP METHOD : POST
2018-08-09 11:05:12 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 11:05:12 -参数 : [admin, 111111]
2018-08-09 11:05:12 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 11:05:12 -==> Parameters: admin(String)
2018-08-09 11:05:12 -<==      Total: 1
2018-08-09 11:05:12 -耗时 : 11
2018-08-09 11:05:12 -返回值 : {msg=操作成功, code=0}
2018-08-09 11:05:12 -请求地址 : http://localhost:8000/index
2018-08-09 11:05:12 -HTTP METHOD : GET
2018-08-09 11:05:12 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 11:05:12 -参数 : [{}]
2018-08-09 11:05:12 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 11:05:12 -==> Parameters: 1(Long)
2018-08-09 11:05:12 -<==      Total: 28
2018-08-09 11:05:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 11:05:12 -==> Parameters: 142(Long)
2018-08-09 11:05:12 -<==      Total: 1
2018-08-09 11:05:12 -耗时 : 27
2018-08-09 11:05:12 -返回值 : index_v1
2018-08-09 11:05:12 -请求地址 : http://localhost:8000/main
2018-08-09 11:05:12 -HTTP METHOD : GET
2018-08-09 11:05:12 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 11:05:12 -参数 : []
2018-08-09 11:05:12 -耗时 : 0
2018-08-09 11:05:12 -返回值 : main
2018-08-09 11:05:12 -请求地址 : http://localhost:8000/main
2018-08-09 11:05:12 -HTTP METHOD : GET
2018-08-09 11:05:12 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 11:05:12 -参数 : []
2018-08-09 11:05:12 -耗时 : 0
2018-08-09 11:05:12 -返回值 : main
2018-08-09 11:05:35 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 11:05:35 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-08-09 11:05:35 -==> Parameters: 1(Long)
2018-08-09 11:05:35 -<==      Total: 47
2018-08-09 11:05:35 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 11:05:35 -请求地址 : http://localhost:8000/system/sysDept
2018-08-09 11:05:35 -HTTP METHOD : GET
2018-08-09 11:05:35 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.dept
2018-08-09 11:05:35 -参数 : []
2018-08-09 11:05:35 -耗时 : 0
2018-08-09 11:05:35 -返回值 : system/dept/dept
2018-08-09 11:05:35 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 11:05:35 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 11:05:35 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 11:05:35 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 11:05:35 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 11:05:35 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 11:05:35 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 11:05:35 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 11:05:35 -HTTP METHOD : GET
2018-08-09 11:05:35 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 11:05:35 -参数 : []
2018-08-09 11:05:35 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 11:05:35 -==> Parameters: 
2018-08-09 11:05:35 -<==      Total: 12
2018-08-09 11:05:35 -耗时 : 5
2018-08-09 11:05:35 -返回值 : [DeptDO{deptId=18, parentId=13, name='hahaha', orderNum=null, delFlag=null}, DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 11:13:07 -从redis中删除 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 11:13:07 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 11:13:07 -请求地址 : http://localhost:8000/
2018-08-09 11:13:07 -HTTP METHOD : GET
2018-08-09 11:13:07 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.welcome
2018-08-09 11:13:07 -参数 : [{}]
2018-08-09 11:13:07 -耗时 : 0
2018-08-09 11:13:07 -返回值 : redirect:/login
2018-08-09 11:13:07 -请求地址 : http://localhost:8000/login
2018-08-09 11:13:07 -HTTP METHOD : GET
2018-08-09 11:13:07 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 11:13:07 -参数 : []
2018-08-09 11:13:07 -耗时 : 1
2018-08-09 11:13:07 -返回值 : login
2018-08-09 11:13:19 -请求地址 : http://localhost:8000/login
2018-08-09 11:13:19 -HTTP METHOD : POST
2018-08-09 11:13:19 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 11:13:19 -参数 : [lhc, 111111]
2018-08-09 11:13:19 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 11:13:19 -==> Parameters: lhc(String)
2018-08-09 11:13:19 -<==      Total: 1
2018-08-09 11:13:19 -耗时 : 5
2018-08-09 11:13:19 -返回值 : {msg=用户或密码错误, code=500}
2018-08-09 11:13:40 -请求地址 : http://localhost:8000/login
2018-08-09 11:13:40 -HTTP METHOD : POST
2018-08-09 11:13:40 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 11:13:40 -参数 : [lyf, 111111]
2018-08-09 11:13:40 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 11:13:40 -==> Parameters: lyf(String)
2018-08-09 11:13:40 -<==      Total: 1
2018-08-09 11:13:40 -耗时 : 3
2018-08-09 11:13:40 -返回值 : {msg=操作成功, code=0}
2018-08-09 11:13:40 -请求地址 : http://localhost:8000/index
2018-08-09 11:13:40 -HTTP METHOD : GET
2018-08-09 11:13:40 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 11:13:40 -参数 : [{}]
2018-08-09 11:13:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 11:13:40 -==> Parameters: 132(Long)
2018-08-09 11:13:40 -<==      Total: 0
2018-08-09 11:13:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 11:13:40 -==> Parameters: null
2018-08-09 11:13:40 -<==      Total: 0
2018-08-09 11:13:40 -耗时 : 7
2018-08-09 11:13:40 -返回值 : index_v1
2018-08-09 11:13:40 -请求地址 : http://localhost:8000/main
2018-08-09 11:13:40 -HTTP METHOD : GET
2018-08-09 11:13:40 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 11:13:40 -参数 : []
2018-08-09 11:13:40 -耗时 : 0
2018-08-09 11:13:40 -返回值 : main
2018-08-09 11:13:40 -请求地址 : http://localhost:8000/main
2018-08-09 11:13:40 -HTTP METHOD : GET
2018-08-09 11:13:40 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 11:13:40 -参数 : []
2018-08-09 11:13:40 -耗时 : 0
2018-08-09 11:13:40 -返回值 : main
2018-08-09 11:14:23 -请求地址 : http://localhost:8000/login
2018-08-09 11:14:23 -HTTP METHOD : GET
2018-08-09 11:14:23 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 11:14:23 -参数 : []
2018-08-09 11:14:23 -耗时 : 0
2018-08-09 11:14:23 -返回值 : login
2018-08-09 11:14:28 -请求地址 : http://localhost:8000/login
2018-08-09 11:14:28 -HTTP METHOD : POST
2018-08-09 11:14:28 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 11:14:28 -参数 : [lijing, 111111]
2018-08-09 11:14:28 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 11:14:28 -==> Parameters: lijing(String)
2018-08-09 11:14:28 -<==      Total: 1
2018-08-09 11:14:28 -耗时 : 4
2018-08-09 11:14:28 -返回值 : {msg=操作成功, code=0}
2018-08-09 11:14:28 -请求地址 : http://localhost:8000/index
2018-08-09 11:14:28 -HTTP METHOD : GET
2018-08-09 11:14:28 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 11:14:28 -参数 : [{}]
2018-08-09 11:14:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 11:14:28 -==> Parameters: 123(Long)
2018-08-09 11:14:28 -<==      Total: 1
2018-08-09 11:14:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 11:14:28 -==> Parameters: null
2018-08-09 11:14:28 -<==      Total: 0
2018-08-09 11:14:28 -耗时 : 6
2018-08-09 11:14:28 -返回值 : index_v1
2018-08-09 11:14:28 -请求地址 : http://localhost:8000/main
2018-08-09 11:14:28 -HTTP METHOD : GET
2018-08-09 11:14:28 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 11:14:28 -参数 : []
2018-08-09 11:14:28 -耗时 : 0
2018-08-09 11:14:28 -返回值 : main
2018-08-09 11:14:28 -请求地址 : http://localhost:8000/main
2018-08-09 11:14:28 -HTTP METHOD : GET
2018-08-09 11:14:28 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 11:14:28 -参数 : []
2018-08-09 11:14:28 -耗时 : 0
2018-08-09 11:14:28 -返回值 : main
2018-08-09 12:02:11 -请求地址 : http://localhost:8000/login;JSESSIONID=ffc4ec60-ce64-430a-a557-b85f5027f356
2018-08-09 12:02:11 -HTTP METHOD : GET
2018-08-09 12:02:11 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 12:02:11 -参数 : []
2018-08-09 12:02:11 -耗时 : 0
2018-08-09 12:02:11 -返回值 : login
2018-08-09 12:02:11 -请求地址 : http://localhost:8000/login;JSESSIONID=ffc4ec60-ce64-430a-a557-b85f5027f356
2018-08-09 12:02:11 -HTTP METHOD : GET
2018-08-09 12:02:11 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 12:02:11 -参数 : []
2018-08-09 12:02:11 -耗时 : 0
2018-08-09 12:02:11 -返回值 : login
2018-08-09 12:02:13 -请求地址 : http://localhost:8000/login
2018-08-09 12:02:13 -HTTP METHOD : POST
2018-08-09 12:02:13 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 12:02:13 -参数 : [admin, 111111]
2018-08-09 12:02:13 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 12:02:13 -==> Parameters: admin(String)
2018-08-09 12:02:13 -<==      Total: 1
2018-08-09 12:02:13 -耗时 : 5
2018-08-09 12:02:13 -返回值 : {msg=操作成功, code=0}
2018-08-09 12:02:13 -请求地址 : http://localhost:8000/index
2018-08-09 12:02:13 -HTTP METHOD : GET
2018-08-09 12:02:13 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 12:02:13 -参数 : [{}]
2018-08-09 12:02:13 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 12:02:13 -==> Parameters: 1(Long)
2018-08-09 12:02:13 -<==      Total: 28
2018-08-09 12:02:13 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 12:02:13 -==> Parameters: 142(Long)
2018-08-09 12:02:13 -<==      Total: 1
2018-08-09 12:02:13 -耗时 : 11
2018-08-09 12:02:13 -返回值 : index_v1
2018-08-09 12:02:13 -请求地址 : http://localhost:8000/main
2018-08-09 12:02:13 -HTTP METHOD : GET
2018-08-09 12:02:13 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 12:02:13 -参数 : []
2018-08-09 12:02:13 -耗时 : 0
2018-08-09 12:02:13 -返回值 : main
2018-08-09 12:02:13 -请求地址 : http://localhost:8000/main
2018-08-09 12:02:13 -HTTP METHOD : GET
2018-08-09 12:02:13 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 12:02:13 -参数 : []
2018-08-09 12:02:13 -耗时 : 0
2018-08-09 12:02:13 -返回值 : main
2018-08-09 12:03:57 -Validating all active sessions...
2018-08-09 12:03:57 -Finished session validation.  No sessions were stopped.
2018-08-09 12:05:43 -从redis中删除 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 12:05:43 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 12:05:43 -请求地址 : http://localhost:8000/
2018-08-09 12:05:43 -HTTP METHOD : GET
2018-08-09 12:05:43 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.welcome
2018-08-09 12:05:43 -参数 : [{}]
2018-08-09 12:05:43 -耗时 : 0
2018-08-09 12:05:43 -返回值 : redirect:/login
2018-08-09 12:05:43 -请求地址 : http://localhost:8000/login
2018-08-09 12:05:43 -HTTP METHOD : GET
2018-08-09 12:05:43 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 12:05:43 -参数 : []
2018-08-09 12:05:43 -耗时 : 1
2018-08-09 12:05:43 -返回值 : login
2018-08-09 12:05:48 -请求地址 : http://localhost:8000/login
2018-08-09 12:05:48 -HTTP METHOD : POST
2018-08-09 12:05:48 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 12:05:48 -参数 : [lijing, 111111]
2018-08-09 12:05:48 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 12:05:48 -==> Parameters: lijing(String)
2018-08-09 12:05:48 -<==      Total: 1
2018-08-09 12:05:48 -耗时 : 4
2018-08-09 12:05:48 -返回值 : {msg=操作成功, code=0}
2018-08-09 12:05:48 -请求地址 : http://localhost:8000/index
2018-08-09 12:05:48 -HTTP METHOD : GET
2018-08-09 12:05:48 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 12:05:48 -参数 : [{}]
2018-08-09 12:05:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 12:05:48 -==> Parameters: 123(Long)
2018-08-09 12:05:48 -<==      Total: 4
2018-08-09 12:05:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 12:05:48 -==> Parameters: null
2018-08-09 12:05:48 -<==      Total: 0
2018-08-09 12:05:48 -耗时 : 5
2018-08-09 12:05:48 -返回值 : index_v1
2018-08-09 12:05:48 -请求地址 : http://localhost:8000/main
2018-08-09 12:05:48 -HTTP METHOD : GET
2018-08-09 12:05:48 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 12:05:48 -参数 : []
2018-08-09 12:05:48 -耗时 : 0
2018-08-09 12:05:48 -返回值 : main
2018-08-09 12:05:48 -请求地址 : http://localhost:8000/main
2018-08-09 12:05:48 -HTTP METHOD : GET
2018-08-09 12:05:48 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 12:05:48 -参数 : []
2018-08-09 12:05:48 -耗时 : 0
2018-08-09 12:05:48 -返回值 : main
2018-08-09 12:11:36 -请求地址 : http://localhost:8000/login;JSESSIONID=6c3ee9c1-0378-4ff2-92f6-6b8f70e429e7
2018-08-09 12:11:36 -HTTP METHOD : GET
2018-08-09 12:11:36 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 12:11:36 -参数 : []
2018-08-09 12:11:36 -耗时 : 0
2018-08-09 12:11:36 -返回值 : login
2018-08-09 12:11:36 -请求地址 : http://localhost:8000/login
2018-08-09 12:11:36 -HTTP METHOD : GET
2018-08-09 12:11:36 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 12:11:36 -参数 : []
2018-08-09 12:11:36 -耗时 : 0
2018-08-09 12:11:36 -返回值 : login
2018-08-09 12:11:39 -请求地址 : http://localhost:8000/login
2018-08-09 12:11:39 -HTTP METHOD : POST
2018-08-09 12:11:39 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 12:11:39 -参数 : [admin, 111111]
2018-08-09 12:11:39 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 12:11:39 -==> Parameters: admin(String)
2018-08-09 12:11:39 -<==      Total: 1
2018-08-09 12:11:39 -耗时 : 8
2018-08-09 12:11:39 -返回值 : {msg=操作成功, code=0}
2018-08-09 12:11:39 -请求地址 : http://localhost:8000/index
2018-08-09 12:11:39 -HTTP METHOD : GET
2018-08-09 12:11:39 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 12:11:39 -参数 : [{}]
2018-08-09 12:11:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 12:11:39 -==> Parameters: 1(Long)
2018-08-09 12:11:39 -<==      Total: 28
2018-08-09 12:11:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 12:11:39 -==> Parameters: 142(Long)
2018-08-09 12:11:39 -<==      Total: 1
2018-08-09 12:11:39 -耗时 : 8
2018-08-09 12:11:39 -返回值 : index_v1
2018-08-09 12:11:40 -请求地址 : http://localhost:8000/main
2018-08-09 12:11:40 -HTTP METHOD : GET
2018-08-09 12:11:40 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 12:11:40 -参数 : []
2018-08-09 12:11:40 -耗时 : 0
2018-08-09 12:11:40 -返回值 : main
2018-08-09 12:11:40 -请求地址 : http://localhost:8000/main
2018-08-09 12:11:40 -HTTP METHOD : GET
2018-08-09 12:11:40 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 12:11:40 -参数 : []
2018-08-09 12:11:40 -耗时 : 0
2018-08-09 12:11:40 -返回值 : main
2018-08-09 12:12:21 -请求地址 : http://localhost:8000/
2018-08-09 12:12:21 -HTTP METHOD : GET
2018-08-09 12:12:21 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.welcome
2018-08-09 12:12:21 -参数 : [{}]
2018-08-09 12:12:21 -耗时 : 0
2018-08-09 12:12:21 -返回值 : redirect:/login
2018-08-09 12:12:21 -请求地址 : http://localhost:8000/login
2018-08-09 12:12:21 -HTTP METHOD : GET
2018-08-09 12:12:21 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 12:12:21 -参数 : []
2018-08-09 12:12:21 -耗时 : 0
2018-08-09 12:12:21 -返回值 : login
2018-08-09 12:12:25 -请求地址 : http://localhost:8000/login
2018-08-09 12:12:25 -HTTP METHOD : POST
2018-08-09 12:12:25 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 12:12:25 -参数 : [admin, 111111]
2018-08-09 12:12:25 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 12:12:25 -==> Parameters: admin(String)
2018-08-09 12:12:25 -<==      Total: 1
2018-08-09 12:12:25 -耗时 : 5
2018-08-09 12:12:25 -返回值 : {msg=操作成功, code=0}
2018-08-09 12:12:25 -请求地址 : http://localhost:8000/index
2018-08-09 12:12:25 -HTTP METHOD : GET
2018-08-09 12:12:25 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 12:12:25 -参数 : [{}]
2018-08-09 12:12:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 12:12:25 -==> Parameters: 1(Long)
2018-08-09 12:12:25 -<==      Total: 28
2018-08-09 12:12:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 12:12:25 -==> Parameters: 142(Long)
2018-08-09 12:12:25 -<==      Total: 1
2018-08-09 12:12:25 -耗时 : 8
2018-08-09 12:12:25 -返回值 : index_v1
2018-08-09 12:12:25 -请求地址 : http://localhost:8000/main
2018-08-09 12:12:25 -HTTP METHOD : GET
2018-08-09 12:12:25 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 12:12:25 -参数 : []
2018-08-09 12:12:25 -耗时 : 0
2018-08-09 12:12:25 -返回值 : main
2018-08-09 12:12:25 -请求地址 : http://localhost:8000/main
2018-08-09 12:12:25 -HTTP METHOD : GET
2018-08-09 12:12:25 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 12:12:25 -参数 : []
2018-08-09 12:12:25 -耗时 : 1
2018-08-09 12:12:25 -返回值 : main
2018-08-09 12:13:09 -请求地址 : http://localhost:8000/login
2018-08-09 12:13:09 -HTTP METHOD : GET
2018-08-09 12:13:09 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 12:13:09 -参数 : []
2018-08-09 12:13:09 -耗时 : 0
2018-08-09 12:13:09 -返回值 : login
2018-08-09 12:13:11 -请求地址 : http://localhost:8000/login
2018-08-09 12:13:11 -HTTP METHOD : POST
2018-08-09 12:13:11 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 12:13:11 -参数 : [admin, 111111]
2018-08-09 12:13:11 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 12:13:11 -==> Parameters: admin(String)
2018-08-09 12:13:11 -<==      Total: 1
2018-08-09 12:13:11 -耗时 : 3
2018-08-09 12:13:11 -返回值 : {msg=操作成功, code=0}
2018-08-09 12:13:11 -请求地址 : http://localhost:8000/index
2018-08-09 12:13:11 -HTTP METHOD : GET
2018-08-09 12:13:11 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 12:13:11 -参数 : [{}]
2018-08-09 12:13:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 12:13:11 -==> Parameters: 1(Long)
2018-08-09 12:13:11 -<==      Total: 28
2018-08-09 12:13:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 12:13:11 -==> Parameters: 142(Long)
2018-08-09 12:13:11 -<==      Total: 1
2018-08-09 12:13:11 -耗时 : 6
2018-08-09 12:13:11 -返回值 : index_v1
2018-08-09 12:13:11 -请求地址 : http://localhost:8000/main
2018-08-09 12:13:11 -HTTP METHOD : GET
2018-08-09 12:13:11 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 12:13:11 -参数 : []
2018-08-09 12:13:11 -耗时 : 0
2018-08-09 12:13:11 -返回值 : main
2018-08-09 12:13:11 -请求地址 : http://localhost:8000/main
2018-08-09 12:13:11 -HTTP METHOD : GET
2018-08-09 12:13:11 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 12:13:11 -参数 : []
2018-08-09 12:13:11 -耗时 : 0
2018-08-09 12:13:11 -返回值 : main
2018-08-09 12:32:35 -Starting App on zhy with PID 11252 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 12:32:35 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 12:32:35 -The following profiles are active: dev
2018-08-09 12:32:36 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21282ed8: startup date [Thu Aug 09 12:32:36 CST 2018]; root of context hierarchy
2018-08-09 12:32:36 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 12:32:36 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$532bf8fb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 12:32:36 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$347ffd8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 12:32:36 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 12:32:36 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 12:32:36 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 12:32:36 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 12:32:36 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 12:32:36 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 12:32:36 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 12:32:37 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 12:32:37 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 12:32:37 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 12:32:37 -Starting service [Tomcat]
2018-08-09 12:32:37 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 12:32:37 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 12:32:37 -Initializing Spring embedded WebApplicationContext
2018-08-09 12:32:37 -Root WebApplicationContext: initialization completed in 1300 ms
2018-08-09 12:32:37 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 12:32:37 -Servlet dispatcherServlet mapped to [/]
2018-08-09 12:32:37 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 12:32:37 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 12:32:37 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 12:32:37 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 12:32:37 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 12:32:37 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 12:32:37 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21282ed8: startup date [Thu Aug 09 12:32:36 CST 2018]; root of context hierarchy
2018-08-09 12:32:37 -{dataSource-1} inited
2018-08-09 12:32:37 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 12:32:38 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 12:32:38 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21282ed8: startup date [Thu Aug 09 12:32:36 CST 2018]; root of context hierarchy
2018-08-09 12:32:38 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 12:32:38 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 12:32:38 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 12:32:38 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 12:32:38 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 12:32:38 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 12:32:38 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 12:32:38 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 12:32:38 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 12:32:38 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 12:32:38 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 12:32:38 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 12:32:38 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 12:32:38 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 12:32:38 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 12:32:38 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 12:32:38 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 12:32:38 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 12:32:38 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 12:32:38 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 12:32:38 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 12:32:38 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 12:32:38 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 12:32:38 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 12:32:38 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 12:32:38 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 12:32:38 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 12:32:38 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 12:32:38 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 12:32:38 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 12:32:38 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 12:32:38 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 12:32:38 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 12:32:38 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 12:32:38 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 12:32:38 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 12:32:38 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 12:32:38 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 12:32:38 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 12:32:38 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 12:32:38 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 12:32:38 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 12:32:38 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 12:32:38 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 12:32:38 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 12:32:38 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 12:32:38 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 12:32:38 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 12:32:38 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 12:32:38 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 12:32:38 -Using default implementation for ThreadExecutor
2018-08-09 12:32:38 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 12:32:38 -Quartz Scheduler v.2.2.1 created.
2018-08-09 12:32:38 -RAMJobStore initialized.
2018-08-09 12:32:38 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 12:32:38 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 12:32:38 -Quartz scheduler version: 2.2.1
2018-08-09 12:32:38 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@ef86c72
2018-08-09 12:32:39 -Registering beans for JMX exposure on startup
2018-08-09 12:32:39 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 12:32:39 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 12:32:39 -Starting beans in phase 2147483647
2018-08-09 12:32:39 -Starting Quartz Scheduler now
2018-08-09 12:32:39 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 12:32:39 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 12:32:39 -Using a shared selector for servlet write/read
2018-08-09 12:32:39 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 12:32:39 -Started App in 3.377 seconds (JVM running for 4.059)
2018-08-09 12:32:47 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 12:32:47 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 12:32:47 -FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2018-08-09 12:32:47 -Enabling session validation scheduler...
2018-08-09 12:33:07 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.net.SocketInputStream.read(SocketInputStream.java:127)
	at redis.clients.util.RedisInputStream.ensureFill(RedisInputStream.java:196)
	at redis.clients.util.RedisInputStream.readByte(RedisInputStream.java:40)
	at redis.clients.jedis.Protocol.process(Protocol.java:151)
	at redis.clients.jedis.Protocol.read(Protocol.java:215)
	at redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:340)
	at redis.clients.jedis.Connection.getBinaryBulkReply(Connection.java:259)
	at redis.clients.jedis.BinaryJedis.get(BinaryJedis.java:244)
	at com.zhy.management.common.redis.shiro.RedisManager.get(RedisManager.java:68)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:94)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 12:33:10 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.net.SocketInputStream.read(SocketInputStream.java:127)
	at redis.clients.util.RedisInputStream.ensureFill(RedisInputStream.java:196)
	at redis.clients.util.RedisInputStream.readByte(RedisInputStream.java:40)
	at redis.clients.jedis.Protocol.process(Protocol.java:151)
	at redis.clients.jedis.Protocol.read(Protocol.java:215)
	at redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:340)
	at redis.clients.jedis.Connection.getBinaryBulkReply(Connection.java:259)
	at redis.clients.jedis.BinaryJedis.get(BinaryJedis.java:244)
	at com.zhy.management.common.redis.shiro.RedisManager.get(RedisManager.java:68)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:94)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 12:33:22 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.net.SocketInputStream.read(SocketInputStream.java:127)
	at redis.clients.util.RedisInputStream.ensureFill(RedisInputStream.java:196)
	at redis.clients.util.RedisInputStream.readByte(RedisInputStream.java:40)
	at redis.clients.jedis.Protocol.process(Protocol.java:151)
	at redis.clients.jedis.Protocol.read(Protocol.java:215)
	at redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:340)
	at redis.clients.jedis.Connection.getBinaryBulkReply(Connection.java:259)
	at redis.clients.jedis.BinaryJedis.get(BinaryJedis.java:244)
	at com.zhy.management.common.redis.shiro.RedisManager.get(RedisManager.java:68)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:94)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 12:33:33 -Starting App on zhy with PID 11992 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 12:33:33 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 12:33:33 -The following profiles are active: dev
2018-08-09 12:33:33 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 12:33:33 CST 2018]; root of context hierarchy
2018-08-09 12:33:34 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 12:33:34 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$36826712] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 12:33:34 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$17d66ba2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 12:33:34 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 12:33:34 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 12:33:34 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 12:33:34 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 12:33:34 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 12:33:34 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 12:33:34 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 12:33:34 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 12:33:34 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 12:33:34 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 12:33:34 -Starting service [Tomcat]
2018-08-09 12:33:34 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 12:33:34 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 12:33:35 -Initializing Spring embedded WebApplicationContext
2018-08-09 12:33:35 -Root WebApplicationContext: initialization completed in 1332 ms
2018-08-09 12:33:35 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 12:33:35 -Servlet dispatcherServlet mapped to [/]
2018-08-09 12:33:35 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 12:33:35 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 12:33:35 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 12:33:35 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 12:33:35 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 12:33:35 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 12:33:35 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 12:33:33 CST 2018]; root of context hierarchy
2018-08-09 12:33:35 -{dataSource-1} inited
2018-08-09 12:33:35 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 12:33:35 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 12:33:36 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 12:33:33 CST 2018]; root of context hierarchy
2018-08-09 12:33:36 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 12:33:36 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 12:33:36 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 12:33:36 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 12:33:36 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 12:33:36 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 12:33:36 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 12:33:36 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 12:33:36 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 12:33:36 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 12:33:36 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 12:33:36 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 12:33:36 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 12:33:36 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 12:33:36 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 12:33:36 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 12:33:36 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 12:33:36 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 12:33:36 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 12:33:36 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 12:33:36 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 12:33:36 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 12:33:36 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 12:33:36 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 12:33:36 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 12:33:36 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 12:33:36 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 12:33:36 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 12:33:36 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 12:33:36 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 12:33:36 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 12:33:36 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 12:33:36 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 12:33:36 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 12:33:36 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 12:33:36 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 12:33:36 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 12:33:36 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 12:33:36 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 12:33:36 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 12:33:36 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 12:33:36 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 12:33:36 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 12:33:36 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 12:33:36 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 12:33:36 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 12:33:36 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 12:33:36 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 12:33:36 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 12:33:36 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 12:33:36 -Using default implementation for ThreadExecutor
2018-08-09 12:33:36 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 12:33:36 -Quartz Scheduler v.2.2.1 created.
2018-08-09 12:33:36 -RAMJobStore initialized.
2018-08-09 12:33:36 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 12:33:36 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 12:33:36 -Quartz scheduler version: 2.2.1
2018-08-09 12:33:36 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@35563e4c
2018-08-09 12:33:36 -Registering beans for JMX exposure on startup
2018-08-09 12:33:36 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 12:33:36 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 12:33:36 -Starting beans in phase 2147483647
2018-08-09 12:33:36 -Starting Quartz Scheduler now
2018-08-09 12:33:36 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 12:33:36 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 12:33:36 -Using a shared selector for servlet write/read
2018-08-09 12:33:36 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 12:33:36 -Started App in 3.442 seconds (JVM running for 4.137)
2018-08-09 12:33:51 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 12:33:51 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 12:33:51 -FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2018-08-09 12:33:51 -Enabling session validation scheduler...
2018-08-09 12:34:11 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.net.SocketInputStream.read(SocketInputStream.java:127)
	at redis.clients.util.RedisInputStream.ensureFill(RedisInputStream.java:196)
	at redis.clients.util.RedisInputStream.readByte(RedisInputStream.java:40)
	at redis.clients.jedis.Protocol.process(Protocol.java:151)
	at redis.clients.jedis.Protocol.read(Protocol.java:215)
	at redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:340)
	at redis.clients.jedis.Connection.getBinaryBulkReply(Connection.java:259)
	at redis.clients.jedis.BinaryJedis.get(BinaryJedis.java:244)
	at com.zhy.management.common.redis.shiro.RedisManager.get(RedisManager.java:68)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:94)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 12:34:26 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.net.SocketInputStream.read(SocketInputStream.java:127)
	at redis.clients.util.RedisInputStream.ensureFill(RedisInputStream.java:196)
	at redis.clients.util.RedisInputStream.readByte(RedisInputStream.java:40)
	at redis.clients.jedis.Protocol.process(Protocol.java:151)
	at redis.clients.jedis.Protocol.read(Protocol.java:215)
	at redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:340)
	at redis.clients.jedis.Connection.getBinaryBulkReply(Connection.java:259)
	at redis.clients.jedis.BinaryJedis.get(BinaryJedis.java:244)
	at com.zhy.management.common.redis.shiro.RedisManager.get(RedisManager.java:68)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:94)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:83)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 12:34:46 -请求地址 : http://localhost:8000/
2018-08-09 12:34:46 -HTTP METHOD : GET
2018-08-09 12:34:46 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.welcome
2018-08-09 12:34:46 -参数 : [{}]
2018-08-09 12:34:46 -耗时 : 2
2018-08-09 12:34:46 -返回值 : redirect:/login
2018-08-09 12:34:46 -请求地址 : http://localhost:8000/login
2018-08-09 12:34:46 -HTTP METHOD : GET
2018-08-09 12:34:46 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 12:34:46 -参数 : []
2018-08-09 12:34:46 -耗时 : 0
2018-08-09 12:34:46 -返回值 : login
2018-08-09 12:34:46 -请求地址 : http://localhost:8000/login;JSESSIONID=848bddbe-1bd6-4bfa-b9d3-67c620933d2e
2018-08-09 12:34:46 -HTTP METHOD : GET
2018-08-09 12:34:46 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 12:34:46 -参数 : []
2018-08-09 12:34:46 -耗时 : 1
2018-08-09 12:34:46 -返回值 : login
2018-08-09 12:34:50 -请求地址 : http://localhost:8000/login
2018-08-09 12:34:50 -HTTP METHOD : POST
2018-08-09 12:34:50 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 12:34:50 -参数 : [admin, 111111]
2018-08-09 12:34:50 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 12:34:50 -==> Parameters: admin(String)
2018-08-09 12:34:50 -<==      Total: 1
2018-08-09 12:34:50 -耗时 : 213
2018-08-09 12:34:50 -返回值 : {msg=操作成功, code=0}
2018-08-09 12:34:50 -请求地址 : http://localhost:8000/index
2018-08-09 12:34:50 -HTTP METHOD : GET
2018-08-09 12:34:50 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 12:34:50 -参数 : [{}]
2018-08-09 12:34:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 12:34:50 -==> Parameters: 1(Long)
2018-08-09 12:34:50 -<==      Total: 28
2018-08-09 12:34:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 12:34:50 -==> Parameters: 142(Long)
2018-08-09 12:34:50 -<==      Total: 1
2018-08-09 12:34:50 -耗时 : 30
2018-08-09 12:34:50 -返回值 : index_v1
2018-08-09 12:34:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 12:34:50 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-08-09 12:34:50 -==> Parameters: 1(Long)
2018-08-09 12:34:50 -<==      Total: 47
2018-08-09 12:34:50 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 12:34:50 -请求地址 : http://localhost:8000/main
2018-08-09 12:34:50 -HTTP METHOD : GET
2018-08-09 12:34:50 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 12:34:50 -参数 : []
2018-08-09 12:34:50 -耗时 : 1
2018-08-09 12:34:50 -返回值 : main
2018-08-09 12:34:50 -请求地址 : http://localhost:8000/main
2018-08-09 12:34:50 -HTTP METHOD : GET
2018-08-09 12:34:50 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 12:34:50 -参数 : []
2018-08-09 12:34:50 -耗时 : 0
2018-08-09 12:34:50 -返回值 : main
2018-08-09 12:34:53 -请求地址 : http://localhost:8000/login
2018-08-09 12:34:53 -HTTP METHOD : GET
2018-08-09 12:34:53 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 12:34:53 -参数 : []
2018-08-09 12:34:53 -耗时 : 0
2018-08-09 12:34:53 -返回值 : login
2018-08-09 12:35:00 -请求地址 : http://localhost:8000/login
2018-08-09 12:35:00 -HTTP METHOD : POST
2018-08-09 12:35:00 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 12:35:00 -参数 : [lijing, 111111]
2018-08-09 12:35:00 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 12:35:00 -==> Parameters: lijing(String)
2018-08-09 12:35:00 -<==      Total: 1
2018-08-09 12:35:00 -耗时 : 4
2018-08-09 12:35:00 -返回值 : {msg=操作成功, code=0}
2018-08-09 12:35:00 -请求地址 : http://localhost:8000/index
2018-08-09 12:35:00 -HTTP METHOD : GET
2018-08-09 12:35:00 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 12:35:00 -参数 : [{}]
2018-08-09 12:35:00 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 12:35:00 -==> Parameters: 123(Long)
2018-08-09 12:35:00 -<==      Total: 5
2018-08-09 12:35:00 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 12:35:00 -==> Parameters: null
2018-08-09 12:35:00 -<==      Total: 0
2018-08-09 12:35:00 -耗时 : 5
2018-08-09 12:35:00 -返回值 : index_v1
2018-08-09 12:35:00 -根据key从Redis中获取对象 key [UserDO{userId=123, username='lijing', name='李晶', password='111111', deptId=17, deptName='null', email='zxy@bootdo', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-08-09 12:35:00 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-08-09 12:35:00 -==> Parameters: 123(Long)
2018-08-09 12:35:00 -<==      Total: 4
2018-08-09 12:35:00 -根据key从存储 key [UserDO{userId=123, username='lijing', name='李晶', password='111111', deptId=17, deptName='null', email='zxy@bootdo', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-08-09 12:35:00 -请求地址 : http://localhost:8000/main
2018-08-09 12:35:00 -HTTP METHOD : GET
2018-08-09 12:35:00 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 12:35:00 -参数 : []
2018-08-09 12:35:00 -耗时 : 0
2018-08-09 12:35:00 -返回值 : main
2018-08-09 12:35:01 -请求地址 : http://localhost:8000/main
2018-08-09 12:35:01 -HTTP METHOD : GET
2018-08-09 12:35:01 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 12:35:01 -参数 : []
2018-08-09 12:35:01 -耗时 : 0
2018-08-09 12:35:01 -返回值 : main
2018-08-09 12:36:48 -请求地址 : http://localhost:8000/index
2018-08-09 12:36:48 -HTTP METHOD : GET
2018-08-09 12:36:48 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 12:36:48 -参数 : [{}]
2018-08-09 12:36:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 12:36:48 -==> Parameters: 123(Long)
2018-08-09 12:36:48 -<==      Total: 5
2018-08-09 12:36:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 12:36:48 -==> Parameters: null
2018-08-09 12:36:48 -<==      Total: 0
2018-08-09 12:36:48 -耗时 : 6
2018-08-09 12:36:48 -返回值 : index_v1
2018-08-09 12:36:48 -根据key从Redis中获取对象 key [UserDO{userId=123, username='lijing', name='李晶', password='111111', deptId=17, deptName='null', email='zxy@bootdo', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-08-09 12:36:48 -请求地址 : http://localhost:8000/main
2018-08-09 12:36:48 -HTTP METHOD : GET
2018-08-09 12:36:48 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 12:36:48 -参数 : []
2018-08-09 12:36:48 -耗时 : 0
2018-08-09 12:36:48 -返回值 : main
2018-08-09 12:36:48 -请求地址 : http://localhost:8000/main
2018-08-09 12:36:48 -HTTP METHOD : GET
2018-08-09 12:36:48 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 12:36:48 -参数 : []
2018-08-09 12:36:48 -耗时 : 0
2018-08-09 12:36:48 -返回值 : main
2018-08-09 12:36:48 -请求地址 : http://localhost:8000/index
2018-08-09 12:36:48 -HTTP METHOD : GET
2018-08-09 12:36:48 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 12:36:48 -参数 : [{}]
2018-08-09 12:36:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 12:36:48 -==> Parameters: 123(Long)
2018-08-09 12:36:48 -<==      Total: 5
2018-08-09 12:36:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 12:36:48 -==> Parameters: null
2018-08-09 12:36:48 -<==      Total: 0
2018-08-09 12:36:48 -耗时 : 6
2018-08-09 12:36:48 -返回值 : index_v1
2018-08-09 12:36:48 -根据key从Redis中获取对象 key [UserDO{userId=123, username='lijing', name='李晶', password='111111', deptId=17, deptName='null', email='zxy@bootdo', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-08-09 12:36:48 -请求地址 : http://localhost:8000/main
2018-08-09 12:36:48 -HTTP METHOD : GET
2018-08-09 12:36:48 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 12:36:48 -参数 : []
2018-08-09 12:36:48 -耗时 : 0
2018-08-09 12:36:48 -返回值 : main
2018-08-09 12:36:48 -请求地址 : http://localhost:8000/main
2018-08-09 12:36:48 -HTTP METHOD : GET
2018-08-09 12:36:48 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 12:36:48 -参数 : []
2018-08-09 12:36:48 -耗时 : 1
2018-08-09 12:36:48 -返回值 : main
2018-08-09 12:36:50 -请求地址 : http://localhost:8000/index
2018-08-09 12:36:50 -HTTP METHOD : GET
2018-08-09 12:36:50 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 12:36:50 -参数 : [{}]
2018-08-09 12:36:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 12:36:50 -==> Parameters: 123(Long)
2018-08-09 12:36:50 -<==      Total: 5
2018-08-09 12:36:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 12:36:50 -==> Parameters: null
2018-08-09 12:36:50 -<==      Total: 0
2018-08-09 12:36:50 -耗时 : 8
2018-08-09 12:36:50 -返回值 : index_v1
2018-08-09 12:36:50 -根据key从Redis中获取对象 key [UserDO{userId=123, username='lijing', name='李晶', password='111111', deptId=17, deptName='null', email='zxy@bootdo', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-08-09 12:36:50 -请求地址 : http://localhost:8000/main
2018-08-09 12:36:50 -HTTP METHOD : GET
2018-08-09 12:36:50 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 12:36:50 -参数 : []
2018-08-09 12:36:50 -耗时 : 1
2018-08-09 12:36:50 -返回值 : main
2018-08-09 12:36:50 -请求地址 : http://localhost:8000/main
2018-08-09 12:36:50 -HTTP METHOD : GET
2018-08-09 12:36:50 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 12:36:50 -参数 : []
2018-08-09 12:36:50 -耗时 : 0
2018-08-09 12:36:50 -返回值 : main
2018-08-09 12:36:52 -请求地址 : http://localhost:8000/login
2018-08-09 12:36:52 -HTTP METHOD : GET
2018-08-09 12:36:52 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 12:36:52 -参数 : []
2018-08-09 12:36:52 -耗时 : 1
2018-08-09 12:36:52 -返回值 : login
2018-08-09 12:36:54 -请求地址 : http://localhost:8000/login
2018-08-09 12:36:54 -HTTP METHOD : POST
2018-08-09 12:36:54 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 12:36:54 -参数 : [lijing, 111111]
2018-08-09 12:36:54 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 12:36:54 -==> Parameters: lijing(String)
2018-08-09 12:36:54 -<==      Total: 1
2018-08-09 12:36:54 -耗时 : 3
2018-08-09 12:36:54 -返回值 : {msg=操作成功, code=0}
2018-08-09 12:36:54 -请求地址 : http://localhost:8000/index
2018-08-09 12:36:54 -HTTP METHOD : GET
2018-08-09 12:36:54 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 12:36:54 -参数 : [{}]
2018-08-09 12:36:54 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 12:36:54 -==> Parameters: 123(Long)
2018-08-09 12:36:54 -<==      Total: 5
2018-08-09 12:36:54 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 12:36:54 -==> Parameters: null
2018-08-09 12:36:54 -<==      Total: 0
2018-08-09 12:36:54 -耗时 : 6
2018-08-09 12:36:54 -返回值 : index_v1
2018-08-09 12:36:54 -根据key从Redis中获取对象 key [UserDO{userId=123, username='lijing', name='李晶', password='111111', deptId=17, deptName='null', email='zxy@bootdo', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-08-09 12:36:54 -请求地址 : http://localhost:8000/main
2018-08-09 12:36:54 -HTTP METHOD : GET
2018-08-09 12:36:54 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 12:36:54 -参数 : []
2018-08-09 12:36:54 -耗时 : 0
2018-08-09 12:36:54 -返回值 : main
2018-08-09 12:36:54 -请求地址 : http://localhost:8000/main
2018-08-09 12:36:54 -HTTP METHOD : GET
2018-08-09 12:36:54 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 12:36:54 -参数 : []
2018-08-09 12:36:54 -耗时 : 0
2018-08-09 12:36:54 -返回值 : main
2018-08-09 12:36:58 -Starting App on zhy with PID 6628 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 12:36:58 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 12:36:58 -The following profiles are active: dev
2018-08-09 12:36:58 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21282ed8: startup date [Thu Aug 09 12:36:58 CST 2018]; root of context hierarchy
2018-08-09 12:36:58 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 12:36:58 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7d80915f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 12:36:58 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5ed495ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 12:36:59 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 12:36:59 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 12:36:59 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 12:36:59 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 12:36:59 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 12:36:59 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 12:36:59 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 12:36:59 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 12:36:59 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 12:36:59 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 12:36:59 -Starting service [Tomcat]
2018-08-09 12:36:59 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 12:36:59 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 12:36:59 -Initializing Spring embedded WebApplicationContext
2018-08-09 12:36:59 -Root WebApplicationContext: initialization completed in 1288 ms
2018-08-09 12:36:59 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 12:36:59 -Servlet dispatcherServlet mapped to [/]
2018-08-09 12:36:59 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 12:36:59 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 12:36:59 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 12:36:59 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 12:36:59 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 12:36:59 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 12:36:59 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21282ed8: startup date [Thu Aug 09 12:36:58 CST 2018]; root of context hierarchy
2018-08-09 12:36:59 -{dataSource-1} inited
2018-08-09 12:37:00 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 12:37:00 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 12:37:00 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21282ed8: startup date [Thu Aug 09 12:36:58 CST 2018]; root of context hierarchy
2018-08-09 12:37:00 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 12:37:00 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 12:37:00 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 12:37:00 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 12:37:00 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 12:37:00 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 12:37:00 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 12:37:00 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 12:37:00 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 12:37:00 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 12:37:00 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 12:37:00 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 12:37:00 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 12:37:00 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 12:37:00 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 12:37:00 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 12:37:00 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 12:37:00 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 12:37:00 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 12:37:00 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 12:37:00 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 12:37:00 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 12:37:00 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 12:37:00 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 12:37:00 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 12:37:00 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 12:37:00 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 12:37:00 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 12:37:00 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 12:37:00 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 12:37:00 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 12:37:00 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 12:37:00 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 12:37:00 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 12:37:00 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 12:37:00 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 12:37:00 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 12:37:00 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 12:37:00 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 12:37:00 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 12:37:00 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 12:37:00 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 12:37:00 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 12:37:00 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 12:37:00 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 12:37:00 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 12:37:00 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 12:37:00 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 12:37:00 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 12:37:00 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 12:37:01 -Using default implementation for ThreadExecutor
2018-08-09 12:37:01 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 12:37:01 -Quartz Scheduler v.2.2.1 created.
2018-08-09 12:37:01 -RAMJobStore initialized.
2018-08-09 12:37:01 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 12:37:01 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 12:37:01 -Quartz scheduler version: 2.2.1
2018-08-09 12:37:01 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@4ee8051c
2018-08-09 12:37:01 -Registering beans for JMX exposure on startup
2018-08-09 12:37:01 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 12:37:01 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 12:37:01 -Starting beans in phase 2147483647
2018-08-09 12:37:01 -Starting Quartz Scheduler now
2018-08-09 12:37:01 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 12:37:01 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 12:37:01 -Using a shared selector for servlet write/read
2018-08-09 12:37:01 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 12:37:01 -Started App in 3.331 seconds (JVM running for 4.021)
2018-08-09 12:37:04 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 12:37:04 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 12:37:04 -FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2018-08-09 12:37:04 -Enabling session validation scheduler...
2018-08-09 12:37:04 -请求地址 : http://localhost:8000/login
2018-08-09 12:37:04 -HTTP METHOD : GET
2018-08-09 12:37:04 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 12:37:04 -参数 : []
2018-08-09 12:37:04 -耗时 : 1
2018-08-09 12:37:04 -返回值 : login
2018-08-09 12:37:05 -请求地址 : http://localhost:8000/login
2018-08-09 12:37:05 -HTTP METHOD : POST
2018-08-09 12:37:05 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 12:37:05 -参数 : [lijing, 111111]
2018-08-09 12:37:05 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 12:37:05 -==> Parameters: lijing(String)
2018-08-09 12:37:05 -<==      Total: 1
2018-08-09 12:37:05 -耗时 : 188
2018-08-09 12:37:05 -返回值 : {msg=操作成功, code=0}
2018-08-09 12:37:05 -请求地址 : http://localhost:8000/index
2018-08-09 12:37:05 -HTTP METHOD : GET
2018-08-09 12:37:05 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 12:37:05 -参数 : [{}]
2018-08-09 12:37:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 12:37:05 -==> Parameters: 123(Long)
2018-08-09 12:37:05 -<==      Total: 5
2018-08-09 12:37:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 12:37:05 -==> Parameters: null
2018-08-09 12:37:05 -<==      Total: 0
2018-08-09 12:37:05 -耗时 : 25
2018-08-09 12:37:05 -返回值 : index_v1
2018-08-09 12:37:05 -请求地址 : http://localhost:8000/main
2018-08-09 12:37:05 -HTTP METHOD : GET
2018-08-09 12:37:05 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 12:37:05 -参数 : []
2018-08-09 12:37:05 -耗时 : 0
2018-08-09 12:37:05 -返回值 : main
2018-08-09 12:37:05 -请求地址 : http://localhost:8000/main
2018-08-09 12:37:05 -HTTP METHOD : GET
2018-08-09 12:37:05 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 12:37:05 -参数 : []
2018-08-09 12:37:05 -耗时 : 0
2018-08-09 12:37:05 -返回值 : main
2018-08-09 13:05:41 -Starting App on zhy with PID 5456 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 13:05:41 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 13:05:41 -The following profiles are active: dev
2018-08-09 13:05:41 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 13:05:41 CST 2018]; root of context hierarchy
2018-08-09 13:05:41 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 13:05:42 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4c40cfb0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:05:42 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$2d94d440] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:05:42 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:05:42 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:05:42 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 13:05:42 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:05:42 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:05:42 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:05:42 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:05:42 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:05:42 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 13:05:42 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 13:05:42 -Starting service [Tomcat]
2018-08-09 13:05:42 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 13:05:42 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 13:05:42 -Initializing Spring embedded WebApplicationContext
2018-08-09 13:05:42 -Root WebApplicationContext: initialization completed in 1333 ms
2018-08-09 13:05:43 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 13:05:43 -Servlet dispatcherServlet mapped to [/]
2018-08-09 13:05:43 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 13:05:43 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 13:05:43 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 13:05:43 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 13:05:43 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 13:05:43 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 13:05:43 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 13:05:41 CST 2018]; root of context hierarchy
2018-08-09 13:05:43 -{dataSource-1} inited
2018-08-09 13:05:43 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 13:05:43 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:05:43 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@957e06: startup date [Thu Aug 09 13:05:41 CST 2018]; root of context hierarchy
2018-08-09 13:05:43 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 13:05:43 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 13:05:43 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 13:05:43 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 13:05:43 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 13:05:43 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 13:05:43 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 13:05:43 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 13:05:43 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 13:05:43 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 13:05:43 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 13:05:43 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 13:05:43 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 13:05:43 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 13:05:43 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 13:05:43 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 13:05:43 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 13:05:43 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 13:05:43 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 13:05:43 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 13:05:43 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 13:05:43 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 13:05:43 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 13:05:43 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 13:05:43 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 13:05:43 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 13:05:43 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 13:05:43 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 13:05:43 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 13:05:43 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 13:05:43 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 13:05:43 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 13:05:43 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 13:05:43 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 13:05:43 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 13:05:43 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 13:05:43 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 13:05:43 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 13:05:43 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 13:05:43 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 13:05:43 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 13:05:43 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 13:05:43 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 13:05:43 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 13:05:43 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 13:05:43 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 13:05:43 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:05:43 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:05:43 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:05:44 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 13:05:44 -Using default implementation for ThreadExecutor
2018-08-09 13:05:44 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 13:05:44 -Quartz Scheduler v.2.2.1 created.
2018-08-09 13:05:44 -RAMJobStore initialized.
2018-08-09 13:05:44 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 13:05:44 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 13:05:44 -Quartz scheduler version: 2.2.1
2018-08-09 13:05:44 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@123307c4
2018-08-09 13:05:44 -Registering beans for JMX exposure on startup
2018-08-09 13:05:44 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 13:05:44 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 13:05:44 -Starting beans in phase 2147483647
2018-08-09 13:05:44 -Starting Quartz Scheduler now
2018-08-09 13:05:44 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 13:05:44 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 13:05:44 -Using a shared selector for servlet write/read
2018-08-09 13:05:44 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 13:05:44 -Started App in 3.389 seconds (JVM running for 3.917)
2018-08-09 13:06:05 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 13:06:05 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 13:06:05 -FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
2018-08-09 13:06:05 -Enabling session validation scheduler...
2018-08-09 13:06:06 -从redis中删除 key [UserDO{userId=123, username='lijing', name='李晶', password='111111', deptId=17, deptName='null', email='zxy@bootdo', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-08-09 13:06:06 -根据key从Redis中获取对象 key [UserDO{userId=123, username='lijing', name='李晶', password='111111', deptId=17, deptName='null', email='zxy@bootdo', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-08-09 13:06:06 -请求地址 : http://localhost:8000/
2018-08-09 13:06:06 -HTTP METHOD : GET
2018-08-09 13:06:06 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.welcome
2018-08-09 13:06:06 -参数 : [{}]
2018-08-09 13:06:06 -耗时 : 1
2018-08-09 13:06:06 -返回值 : redirect:/login
2018-08-09 13:06:06 -请求地址 : http://localhost:8000/login
2018-08-09 13:06:06 -HTTP METHOD : GET
2018-08-09 13:06:06 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 13:06:06 -参数 : []
2018-08-09 13:06:06 -耗时 : 0
2018-08-09 13:06:06 -返回值 : login
2018-08-09 13:06:11 -请求地址 : http://localhost:8000/login
2018-08-09 13:06:11 -HTTP METHOD : POST
2018-08-09 13:06:11 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 13:06:11 -参数 : [admin, 111111]
2018-08-09 13:06:11 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 13:06:11 -==> Parameters: admin(String)
2018-08-09 13:06:11 -<==      Total: 1
2018-08-09 13:06:11 -耗时 : 203
2018-08-09 13:06:11 -返回值 : {msg=操作成功, code=0}
2018-08-09 13:06:11 -请求地址 : http://localhost:8000/index
2018-08-09 13:06:11 -HTTP METHOD : GET
2018-08-09 13:06:11 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 13:06:11 -参数 : [{}]
2018-08-09 13:06:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 13:06:11 -==> Parameters: 1(Long)
2018-08-09 13:06:12 -<==      Total: 28
2018-08-09 13:06:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 13:06:12 -==> Parameters: 142(Long)
2018-08-09 13:06:12 -<==      Total: 1
2018-08-09 13:06:12 -耗时 : 27
2018-08-09 13:06:12 -返回值 : index_v1
2018-08-09 13:06:12 -请求地址 : http://localhost:8000/main
2018-08-09 13:06:12 -HTTP METHOD : GET
2018-08-09 13:06:12 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 13:06:12 -参数 : []
2018-08-09 13:06:12 -耗时 : 0
2018-08-09 13:06:12 -返回值 : main
2018-08-09 13:06:12 -请求地址 : http://localhost:8000/main
2018-08-09 13:06:12 -HTTP METHOD : GET
2018-08-09 13:06:12 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 13:06:12 -参数 : []
2018-08-09 13:06:12 -耗时 : 1
2018-08-09 13:06:12 -返回值 : main
2018-08-09 13:07:38 -请求地址 : http://localhost:8000/
2018-08-09 13:07:38 -HTTP METHOD : GET
2018-08-09 13:07:38 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.welcome
2018-08-09 13:07:38 -参数 : [{}]
2018-08-09 13:07:38 -耗时 : 1
2018-08-09 13:07:38 -返回值 : redirect:/login
2018-08-09 13:07:38 -请求地址 : http://localhost:8000/login
2018-08-09 13:07:38 -HTTP METHOD : GET
2018-08-09 13:07:38 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 13:07:38 -参数 : []
2018-08-09 13:07:38 -耗时 : 1
2018-08-09 13:07:38 -返回值 : login
2018-08-09 13:28:21 -请求地址 : http://localhost:8000/login;JSESSIONID=f8862e84-390e-47a6-a7c5-ce881108aae6
2018-08-09 13:28:21 -HTTP METHOD : GET
2018-08-09 13:28:21 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 13:28:21 -参数 : []
2018-08-09 13:28:21 -耗时 : 0
2018-08-09 13:28:21 -返回值 : login
2018-08-09 13:28:21 -请求地址 : http://localhost:8000/login;JSESSIONID=f8862e84-390e-47a6-a7c5-ce881108aae6
2018-08-09 13:28:21 -HTTP METHOD : GET
2018-08-09 13:28:21 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 13:28:21 -参数 : []
2018-08-09 13:28:21 -耗时 : 0
2018-08-09 13:28:21 -返回值 : login
2018-08-09 13:28:23 -请求地址 : http://localhost:8000/login
2018-08-09 13:28:23 -HTTP METHOD : POST
2018-08-09 13:28:23 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 13:28:23 -参数 : [admin, 111111]
2018-08-09 13:28:23 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 13:28:23 -==> Parameters: admin(String)
2018-08-09 13:28:23 -<==      Total: 1
2018-08-09 13:28:23 -耗时 : 6
2018-08-09 13:28:23 -返回值 : {msg=操作成功, code=0}
2018-08-09 13:28:23 -请求地址 : http://localhost:8000/index
2018-08-09 13:28:23 -HTTP METHOD : GET
2018-08-09 13:28:23 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 13:28:23 -参数 : [{}]
2018-08-09 13:28:23 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 13:28:23 -==> Parameters: 1(Long)
2018-08-09 13:28:23 -<==      Total: 28
2018-08-09 13:28:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 13:28:23 -==> Parameters: 142(Long)
2018-08-09 13:28:23 -<==      Total: 1
2018-08-09 13:28:23 -耗时 : 10
2018-08-09 13:28:23 -返回值 : index_v1
2018-08-09 13:28:23 -请求地址 : http://localhost:8000/main
2018-08-09 13:28:23 -HTTP METHOD : GET
2018-08-09 13:28:23 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 13:28:23 -参数 : []
2018-08-09 13:28:23 -耗时 : 0
2018-08-09 13:28:23 -返回值 : main
2018-08-09 13:28:23 -请求地址 : http://localhost:8000/main
2018-08-09 13:28:23 -HTTP METHOD : GET
2018-08-09 13:28:23 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 13:28:23 -参数 : []
2018-08-09 13:28:23 -耗时 : 0
2018-08-09 13:28:23 -返回值 : main
2018-08-09 13:28:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:28:26 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-08-09 13:28:26 -==> Parameters: 1(Long)
2018-08-09 13:28:26 -<==      Total: 47
2018-08-09 13:28:26 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:28:26 -请求地址 : http://localhost:8000/sys/menu/
2018-08-09 13:28:26 -HTTP METHOD : GET
2018-08-09 13:28:26 -CLASS_METHOD : com.zhy.management.system.controller.MenuController.menu
2018-08-09 13:28:26 -参数 : [{}]
2018-08-09 13:28:26 -耗时 : 0
2018-08-09 13:28:26 -返回值 : system/menu/menu
2018-08-09 13:28:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:28:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:28:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:28:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:28:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:28:27 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:28:27 -请求地址 : http://localhost:8000/sys/menu/list
2018-08-09 13:28:27 -HTTP METHOD : GET
2018-08-09 13:28:27 -CLASS_METHOD : com.zhy.management.system.controller.MenuController.list
2018-08-09 13:28:27 -参数 : [{sort=order_num}]
2018-08-09 13:28:27 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-08-09 13:28:27 -==> Parameters: 
2018-08-09 13:28:27 -<==      Total: 63
2018-08-09 13:28:27 -耗时 : 12
2018-08-09 13:28:27 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=94, parentId=93, name='模型管理', url='activiti/model', perms='', type=1, icon='fa fa-sort-amount-asc', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=96, parentId=93, name='流程管理', url='activiti/process', perms='', type=1, icon='fa fa-flag', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=101, parentId=93, name='待办任务', url='activiti/task/todo', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=77, name='swagger', url='/swagger-ui.html', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='hahaha', url='null', perms='a', type=0, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=0, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=68, parentId=49, name='发布文章', url='/blog/bContent/add', perms='blog:bContent:add', type=1, icon='fa fa-edit', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=50, parentId=49, name='文章列表', url='blog/bContent', perms='blog:bContent:bContent', type=1, icon='fa fa-file-image-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='common/generator', perms='common:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='部门管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计划任务', url='common/job', perms='common:taskScheduleJob', type=1, icon='fa fa-hourglass-1', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=49, parentId=0, name='博客管理', url='', perms='', type=0, icon='fa fa-rss', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=93, parentId=0, name='工作流程', url='', perms='', type=0, icon='fa fa-print', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='图表管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=7, gmtCreate=null, gmtModified=null}]
2018-08-09 13:28:27 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:28:27 -请求地址 : http://localhost:8000/sys/user/
2018-08-09 13:28:27 -HTTP METHOD : GET
2018-08-09 13:28:27 -CLASS_METHOD : com.zhy.management.system.controller.UserController.user
2018-08-09 13:28:27 -参数 : [{}]
2018-08-09 13:28:27 -耗时 : 0
2018-08-09 13:28:27 -返回值 : system/user/user
2018-08-09 13:28:27 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:28:27 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:28:27 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:28:27 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:28:27 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:28:27 -请求地址 : http://localhost:8000/system/sysDept/tree
2018-08-09 13:28:27 -HTTP METHOD : GET
2018-08-09 13:28:27 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.tree
2018-08-09 13:28:27 -参数 : []
2018-08-09 13:28:27 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 13:28:27 -==> Parameters: 
2018-08-09 13:28:27 -<==      Total: 12
2018-08-09 13:28:27 -耗时 : 6
2018-08-09 13:28:27 -请求地址 : http://localhost:8000/sys/user/list
2018-08-09 13:28:27 -HTTP METHOD : GET
2018-08-09 13:28:27 -CLASS_METHOD : com.zhy.management.system.controller.UserController.list
2018-08-09 13:28:27 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-08-09 13:28:27 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-08-09 13:28:27 -==> Parameters: 0(Integer), 10(Integer)
2018-08-09 13:28:27 -<==      Total: 7
2018-08-09 13:28:27 -==>  Preparing: select count(*) from sys_user 
2018-08-09 13:28:27 -==> Parameters: 
2018-08-09 13:28:27 -<==      Total: 1
2018-08-09 13:28:27 -耗时 : 11
2018-08-09 13:28:27 -返回值 : com.zhy.management.common.utils.PageUtils@3a4137f
2018-08-09 13:28:27 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"18","parentId":"13","state":{"opened":true},"text":"hahaha"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"人事"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"自然的恩典"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"福慧学院"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"17","parentId":"9","state":{"opened":true},"text":"人事"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"信息"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"总部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"视频部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"德养"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-08-09 13:42:24 -Starting App on zhy with PID 3380 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 13:42:24 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 13:42:24 -The following profiles are active: dev
2018-08-09 13:42:24 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e1a0406: startup date [Thu Aug 09 13:42:24 CST 2018]; root of context hierarchy
2018-08-09 13:42:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 13:42:25 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bc79d0b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:42:25 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$9dcdd548] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:42:25 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:42:25 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:42:25 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 13:42:25 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:42:25 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:42:25 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:42:25 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:42:25 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:42:25 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 13:42:25 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 13:42:25 -Starting service [Tomcat]
2018-08-09 13:42:25 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 13:42:25 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 13:42:25 -Initializing Spring embedded WebApplicationContext
2018-08-09 13:42:25 -Root WebApplicationContext: initialization completed in 1369 ms
2018-08-09 13:42:26 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 13:42:26 -Servlet dispatcherServlet mapped to [/]
2018-08-09 13:42:26 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 13:42:26 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 13:42:26 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 13:42:26 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 13:42:26 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 13:42:26 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 13:42:26 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e1a0406: startup date [Thu Aug 09 13:42:24 CST 2018]; root of context hierarchy
2018-08-09 13:42:26 -{dataSource-1} inited
2018-08-09 13:42:26 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 13:42:26 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:42:27 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e1a0406: startup date [Thu Aug 09 13:42:24 CST 2018]; root of context hierarchy
2018-08-09 13:42:27 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 13:42:27 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 13:42:27 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 13:42:27 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 13:42:27 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 13:42:27 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 13:42:27 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 13:42:27 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 13:42:27 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 13:42:27 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 13:42:27 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 13:42:27 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 13:42:27 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 13:42:27 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 13:42:27 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 13:42:27 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 13:42:27 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 13:42:27 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 13:42:27 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 13:42:27 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 13:42:27 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 13:42:27 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 13:42:27 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 13:42:27 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 13:42:27 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 13:42:27 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 13:42:27 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 13:42:27 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 13:42:27 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 13:42:27 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 13:42:27 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 13:42:27 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 13:42:27 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 13:42:27 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 13:42:27 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 13:42:27 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 13:42:27 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 13:42:27 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 13:42:27 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 13:42:27 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 13:42:27 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 13:42:27 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 13:42:27 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 13:42:27 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 13:42:27 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 13:42:27 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 13:42:27 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:42:27 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:42:27 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:42:27 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 13:42:27 -Using default implementation for ThreadExecutor
2018-08-09 13:42:27 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 13:42:27 -Quartz Scheduler v.2.2.1 created.
2018-08-09 13:42:27 -RAMJobStore initialized.
2018-08-09 13:42:27 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 13:42:27 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 13:42:27 -Quartz scheduler version: 2.2.1
2018-08-09 13:42:27 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@2d237460
2018-08-09 13:42:27 -Registering beans for JMX exposure on startup
2018-08-09 13:42:27 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 13:42:27 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 13:42:27 -Starting beans in phase 2147483647
2018-08-09 13:42:27 -Starting Quartz Scheduler now
2018-08-09 13:42:27 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 13:42:27 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 13:42:27 -Using a shared selector for servlet write/read
2018-08-09 13:42:27 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 13:42:27 -Started App in 3.619 seconds (JVM running for 4.203)
2018-08-09 13:42:38 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 13:42:38 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 13:42:38 -FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2018-08-09 13:42:38 -Enabling session validation scheduler...
2018-08-09 13:42:38 -请求地址 : http://localhost:8000/index
2018-08-09 13:42:38 -HTTP METHOD : GET
2018-08-09 13:42:38 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 13:42:38 -参数 : [{}]
2018-08-09 13:42:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 13:42:38 -==> Parameters: 1(Long)
2018-08-09 13:42:38 -<==      Total: 28
2018-08-09 13:42:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 13:42:38 -==> Parameters: 142(Long)
2018-08-09 13:42:38 -<==      Total: 1
2018-08-09 13:42:38 -耗时 : 99
2018-08-09 13:42:38 -返回值 : index_v1
2018-08-09 13:42:38 -请求地址 : http://localhost:8000/main
2018-08-09 13:42:38 -HTTP METHOD : GET
2018-08-09 13:42:38 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 13:42:38 -参数 : []
2018-08-09 13:42:38 -耗时 : 0
2018-08-09 13:42:38 -返回值 : main
2018-08-09 13:42:38 -请求地址 : http://localhost:8000/main
2018-08-09 13:42:38 -HTTP METHOD : GET
2018-08-09 13:42:38 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 13:42:38 -参数 : []
2018-08-09 13:42:38 -耗时 : 0
2018-08-09 13:42:38 -返回值 : main
2018-08-09 13:42:42 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:42:42 -请求地址 : http://localhost:8000/sys/user/
2018-08-09 13:42:42 -HTTP METHOD : GET
2018-08-09 13:42:42 -CLASS_METHOD : com.zhy.management.system.controller.UserController.user
2018-08-09 13:42:42 -参数 : [{}]
2018-08-09 13:42:42 -耗时 : 0
2018-08-09 13:42:42 -返回值 : system/user/user
2018-08-09 13:42:42 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:42:42 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:42:42 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:42:42 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:42:42 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:42:42 -请求地址 : http://localhost:8000/system/sysDept/tree
2018-08-09 13:42:42 -HTTP METHOD : GET
2018-08-09 13:42:42 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.tree
2018-08-09 13:42:42 -参数 : []
2018-08-09 13:42:42 -请求地址 : http://localhost:8000/sys/user/list
2018-08-09 13:42:42 -HTTP METHOD : GET
2018-08-09 13:42:42 -CLASS_METHOD : com.zhy.management.system.controller.UserController.list
2018-08-09 13:42:42 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-08-09 13:42:42 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 13:42:42 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-08-09 13:42:42 -==> Parameters: 
2018-08-09 13:42:42 -==> Parameters: 0(Integer), 10(Integer)
2018-08-09 13:42:42 -<==      Total: 12
2018-08-09 13:42:42 -耗时 : 23
2018-08-09 13:42:42 -<==      Total: 7
2018-08-09 13:42:42 -==>  Preparing: select count(*) from sys_user 
2018-08-09 13:42:42 -==> Parameters: 
2018-08-09 13:42:42 -<==      Total: 1
2018-08-09 13:42:42 -耗时 : 19
2018-08-09 13:42:42 -返回值 : com.zhy.management.common.utils.PageUtils@6ffa063b
2018-08-09 13:42:42 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"18","parentId":"13","state":{"opened":true},"text":"hahaha"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"人事"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"自然的恩典"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"福慧学院"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"17","parentId":"9","state":{"opened":true},"text":"人事"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"信息"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"总部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"视频部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"德养"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-08-09 13:42:58 -请求地址 : http://localhost:8000/index
2018-08-09 13:42:58 -HTTP METHOD : GET
2018-08-09 13:42:58 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 13:42:58 -参数 : [{}]
2018-08-09 13:42:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 13:42:58 -==> Parameters: 1(Long)
2018-08-09 13:42:58 -<==      Total: 28
2018-08-09 13:42:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 13:42:58 -==> Parameters: 142(Long)
2018-08-09 13:42:58 -<==      Total: 1
2018-08-09 13:42:58 -耗时 : 8
2018-08-09 13:42:58 -返回值 : index_v1
2018-08-09 13:42:58 -请求地址 : http://localhost:8000/main
2018-08-09 13:42:58 -HTTP METHOD : GET
2018-08-09 13:42:58 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 13:42:58 -参数 : []
2018-08-09 13:42:58 -耗时 : 1
2018-08-09 13:42:58 -返回值 : main
2018-08-09 13:42:58 -请求地址 : http://localhost:8000/main
2018-08-09 13:42:58 -HTTP METHOD : GET
2018-08-09 13:42:58 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 13:42:58 -参数 : []
2018-08-09 13:42:58 -耗时 : 0
2018-08-09 13:42:58 -返回值 : main
2018-08-09 13:43:02 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:43:02 -请求地址 : http://localhost:8000/sys/user/
2018-08-09 13:43:02 -HTTP METHOD : GET
2018-08-09 13:43:02 -CLASS_METHOD : com.zhy.management.system.controller.UserController.user
2018-08-09 13:43:02 -参数 : [{}]
2018-08-09 13:43:02 -耗时 : 0
2018-08-09 13:43:02 -返回值 : system/user/user
2018-08-09 13:43:02 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:43:02 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:43:02 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:43:02 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:43:02 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:43:02 -请求地址 : http://localhost:8000/system/sysDept/tree
2018-08-09 13:43:02 -HTTP METHOD : GET
2018-08-09 13:43:02 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.tree
2018-08-09 13:43:02 -参数 : []
2018-08-09 13:43:02 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 13:43:02 -==> Parameters: 
2018-08-09 13:43:02 -<==      Total: 12
2018-08-09 13:43:02 -耗时 : 5
2018-08-09 13:43:02 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"18","parentId":"13","state":{"opened":true},"text":"hahaha"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"人事"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"自然的恩典"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"福慧学院"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"17","parentId":"9","state":{"opened":true},"text":"人事"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"信息"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"总部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"视频部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"德养"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-08-09 13:43:02 -请求地址 : http://localhost:8000/sys/user/list
2018-08-09 13:43:02 -HTTP METHOD : GET
2018-08-09 13:43:02 -CLASS_METHOD : com.zhy.management.system.controller.UserController.list
2018-08-09 13:43:02 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-08-09 13:43:02 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-08-09 13:43:02 -==> Parameters: 0(Integer), 10(Integer)
2018-08-09 13:43:02 -<==      Total: 7
2018-08-09 13:43:02 -==>  Preparing: select count(*) from sys_user 
2018-08-09 13:43:02 -==> Parameters: 
2018-08-09 13:43:02 -<==      Total: 1
2018-08-09 13:43:02 -耗时 : 7
2018-08-09 13:43:02 -返回值 : com.zhy.management.common.utils.PageUtils@6232fb4f
2018-08-09 13:43:52 -Starting App on zhy with PID 4800 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 13:43:52 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 13:43:52 -The following profiles are active: dev
2018-08-09 13:43:52 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 13:43:52 CST 2018]; root of context hierarchy
2018-08-09 13:43:52 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 13:43:52 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f441b3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:43:53 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f0981fcf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:43:53 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:43:53 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:43:53 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 13:43:53 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:43:53 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:43:53 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:43:53 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:43:53 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:43:53 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 13:43:53 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 13:43:53 -Starting service [Tomcat]
2018-08-09 13:43:53 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 13:43:53 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 13:43:53 -Initializing Spring embedded WebApplicationContext
2018-08-09 13:43:53 -Root WebApplicationContext: initialization completed in 1331 ms
2018-08-09 13:43:53 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 13:43:53 -Servlet dispatcherServlet mapped to [/]
2018-08-09 13:43:53 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 13:43:53 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 13:43:53 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 13:43:53 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 13:43:53 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 13:43:53 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 13:43:53 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 13:43:52 CST 2018]; root of context hierarchy
2018-08-09 13:43:54 -{dataSource-1} inited
2018-08-09 13:43:54 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 13:43:54 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:43:54 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 13:43:52 CST 2018]; root of context hierarchy
2018-08-09 13:43:54 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 13:43:54 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 13:43:54 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 13:43:54 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 13:43:54 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 13:43:54 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 13:43:54 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 13:43:54 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 13:43:54 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 13:43:54 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 13:43:54 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 13:43:54 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 13:43:54 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 13:43:54 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 13:43:54 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 13:43:54 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 13:43:54 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 13:43:54 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 13:43:54 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 13:43:54 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 13:43:54 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 13:43:54 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 13:43:54 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 13:43:54 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 13:43:54 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 13:43:54 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 13:43:54 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 13:43:54 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 13:43:54 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 13:43:54 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 13:43:54 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 13:43:54 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 13:43:54 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 13:43:54 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 13:43:54 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 13:43:54 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 13:43:54 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 13:43:54 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 13:43:54 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 13:43:54 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 13:43:54 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 13:43:54 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 13:43:54 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 13:43:54 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 13:43:54 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 13:43:54 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 13:43:54 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:43:54 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:43:54 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:43:54 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 13:43:55 -Using default implementation for ThreadExecutor
2018-08-09 13:43:55 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 13:43:55 -Quartz Scheduler v.2.2.1 created.
2018-08-09 13:43:55 -RAMJobStore initialized.
2018-08-09 13:43:55 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 13:43:55 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 13:43:55 -Quartz scheduler version: 2.2.1
2018-08-09 13:43:55 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@ad3f70a
2018-08-09 13:43:55 -Registering beans for JMX exposure on startup
2018-08-09 13:43:55 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 13:43:55 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 13:43:55 -Starting beans in phase 2147483647
2018-08-09 13:43:55 -Starting Quartz Scheduler now
2018-08-09 13:43:55 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 13:43:55 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 13:43:55 -Using a shared selector for servlet write/read
2018-08-09 13:43:55 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 13:43:55 -Started App in 3.456 seconds (JVM running for 3.993)
2018-08-09 13:43:59 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 13:43:59 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 13:43:59 -FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
2018-08-09 13:43:59 -Enabling session validation scheduler...
2018-08-09 13:43:59 -请求地址 : http://localhost:8000/index
2018-08-09 13:43:59 -HTTP METHOD : GET
2018-08-09 13:43:59 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 13:43:59 -参数 : [{}]
2018-08-09 13:43:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 13:43:59 -==> Parameters: 1(Long)
2018-08-09 13:43:59 -<==      Total: 28
2018-08-09 13:43:59 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 13:43:59 -==> Parameters: 142(Long)
2018-08-09 13:43:59 -<==      Total: 1
2018-08-09 13:43:59 -耗时 : 106
2018-08-09 13:43:59 -返回值 : index_v1
2018-08-09 13:43:59 -请求地址 : http://localhost:8000/main
2018-08-09 13:43:59 -HTTP METHOD : GET
2018-08-09 13:43:59 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 13:43:59 -参数 : []
2018-08-09 13:43:59 -耗时 : 0
2018-08-09 13:43:59 -返回值 : main
2018-08-09 13:43:59 -请求地址 : http://localhost:8000/main
2018-08-09 13:43:59 -HTTP METHOD : GET
2018-08-09 13:43:59 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 13:43:59 -参数 : []
2018-08-09 13:43:59 -耗时 : 0
2018-08-09 13:43:59 -返回值 : main
2018-08-09 13:44:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:44:03 -请求地址 : http://localhost:8000/sys/user/
2018-08-09 13:44:03 -HTTP METHOD : GET
2018-08-09 13:44:03 -CLASS_METHOD : com.zhy.management.system.controller.UserController.user
2018-08-09 13:44:03 -参数 : [{}]
2018-08-09 13:44:03 -耗时 : 0
2018-08-09 13:44:03 -返回值 : system/user/user
2018-08-09 13:44:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:44:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:44:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:44:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:44:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:44:03 -请求地址 : http://localhost:8000/system/sysDept/tree
2018-08-09 13:44:03 -HTTP METHOD : GET
2018-08-09 13:44:03 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.tree
2018-08-09 13:44:03 -参数 : []
2018-08-09 13:44:03 -请求地址 : http://localhost:8000/sys/user/list
2018-08-09 13:44:03 -HTTP METHOD : GET
2018-08-09 13:44:03 -CLASS_METHOD : com.zhy.management.system.controller.UserController.list
2018-08-09 13:44:03 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-08-09 13:44:03 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 13:44:03 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-08-09 13:44:03 -==> Parameters: 
2018-08-09 13:44:03 -==> Parameters: 0(Integer), 10(Integer)
2018-08-09 13:44:03 -<==      Total: 12
2018-08-09 13:44:03 -耗时 : 28
2018-08-09 13:44:03 -<==      Total: 7
2018-08-09 13:44:03 -==>  Preparing: select count(*) from sys_user 
2018-08-09 13:44:03 -==> Parameters: 
2018-08-09 13:44:03 -<==      Total: 1
2018-08-09 13:44:03 -耗时 : 20
2018-08-09 13:44:03 -返回值 : com.zhy.management.common.utils.PageUtils@9c1cfb
2018-08-09 13:44:03 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"18","parentId":"13","state":{"opened":true},"text":"hahaha"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"人事"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"自然的恩典"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"福慧学院"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"17","parentId":"9","state":{"opened":true},"text":"人事"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"信息"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"总部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"视频部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"德养"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-08-09 13:44:16 -请求地址 : http://localhost:8000/index
2018-08-09 13:44:16 -HTTP METHOD : GET
2018-08-09 13:44:16 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 13:44:16 -参数 : [{}]
2018-08-09 13:44:16 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 13:44:16 -==> Parameters: 1(Long)
2018-08-09 13:44:16 -<==      Total: 28
2018-08-09 13:44:16 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 13:44:16 -==> Parameters: 142(Long)
2018-08-09 13:44:16 -<==      Total: 1
2018-08-09 13:44:16 -耗时 : 7
2018-08-09 13:44:16 -返回值 : index_v1
2018-08-09 13:44:16 -请求地址 : http://localhost:8000/main
2018-08-09 13:44:16 -HTTP METHOD : GET
2018-08-09 13:44:16 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 13:44:16 -参数 : []
2018-08-09 13:44:16 -耗时 : 0
2018-08-09 13:44:16 -返回值 : main
2018-08-09 13:44:16 -请求地址 : http://localhost:8000/main
2018-08-09 13:44:16 -HTTP METHOD : GET
2018-08-09 13:44:16 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 13:44:16 -参数 : []
2018-08-09 13:44:16 -耗时 : 0
2018-08-09 13:44:16 -返回值 : main
2018-08-09 13:44:48 -请求地址 : http://localhost:8000/index
2018-08-09 13:44:48 -HTTP METHOD : GET
2018-08-09 13:44:48 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 13:44:48 -参数 : [{}]
2018-08-09 13:44:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 13:44:48 -==> Parameters: 1(Long)
2018-08-09 13:44:48 -<==      Total: 28
2018-08-09 13:44:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 13:44:48 -==> Parameters: 142(Long)
2018-08-09 13:44:48 -<==      Total: 1
2018-08-09 13:44:48 -耗时 : 8
2018-08-09 13:44:48 -返回值 : index_v1
2018-08-09 13:44:48 -请求地址 : http://localhost:8000/main
2018-08-09 13:44:48 -HTTP METHOD : GET
2018-08-09 13:44:48 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 13:44:48 -参数 : []
2018-08-09 13:44:48 -耗时 : 0
2018-08-09 13:44:48 -返回值 : main
2018-08-09 13:44:48 -请求地址 : http://localhost:8000/main
2018-08-09 13:44:48 -HTTP METHOD : GET
2018-08-09 13:44:48 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 13:44:48 -参数 : []
2018-08-09 13:44:48 -耗时 : 0
2018-08-09 13:44:48 -返回值 : main
2018-08-09 13:44:54 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:44:54 -请求地址 : http://localhost:8000/system/sysDept
2018-08-09 13:44:54 -HTTP METHOD : GET
2018-08-09 13:44:54 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.dept
2018-08-09 13:44:54 -参数 : []
2018-08-09 13:44:54 -耗时 : 1
2018-08-09 13:44:54 -返回值 : system/dept/dept
2018-08-09 13:44:54 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:44:54 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:44:54 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:44:54 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:44:54 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:44:54 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:44:54 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:44:54 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 13:44:54 -HTTP METHOD : GET
2018-08-09 13:44:54 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 13:44:54 -参数 : []
2018-08-09 13:44:54 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 13:44:54 -==> Parameters: 
2018-08-09 13:44:54 -<==      Total: 12
2018-08-09 13:44:54 -耗时 : 3
2018-08-09 13:44:54 -返回值 : [DeptDO{deptId=18, parentId=13, name='hahaha', orderNum=null, delFlag=null}, DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 13:45:06 -请求地址 : http://localhost:8000/main
2018-08-09 13:45:06 -HTTP METHOD : GET
2018-08-09 13:45:06 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 13:45:06 -参数 : []
2018-08-09 13:45:06 -耗时 : 0
2018-08-09 13:45:06 -返回值 : main
2018-08-09 13:45:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:45:09 -请求地址 : http://localhost:8000/system/sysDept
2018-08-09 13:45:09 -HTTP METHOD : GET
2018-08-09 13:45:09 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.dept
2018-08-09 13:45:09 -参数 : []
2018-08-09 13:45:09 -耗时 : 1
2018-08-09 13:45:09 -返回值 : system/dept/dept
2018-08-09 13:45:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:45:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:45:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:45:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:45:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:45:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:45:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:45:09 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 13:45:09 -HTTP METHOD : GET
2018-08-09 13:45:09 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 13:45:09 -参数 : []
2018-08-09 13:45:09 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 13:45:09 -==> Parameters: 
2018-08-09 13:45:09 -<==      Total: 12
2018-08-09 13:45:09 -耗时 : 2
2018-08-09 13:45:09 -返回值 : [DeptDO{deptId=18, parentId=13, name='hahaha', orderNum=null, delFlag=null}, DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 13:45:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:45:10 -请求地址 : http://localhost:8000/sys/user/
2018-08-09 13:45:10 -HTTP METHOD : GET
2018-08-09 13:45:10 -CLASS_METHOD : com.zhy.management.system.controller.UserController.user
2018-08-09 13:45:10 -参数 : [{}]
2018-08-09 13:45:10 -耗时 : 0
2018-08-09 13:45:10 -返回值 : system/user/user
2018-08-09 13:45:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:45:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:45:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:45:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:45:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:45:10 -请求地址 : http://localhost:8000/system/sysDept/tree
2018-08-09 13:45:10 -HTTP METHOD : GET
2018-08-09 13:45:10 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.tree
2018-08-09 13:45:10 -参数 : []
2018-08-09 13:45:10 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 13:45:10 -==> Parameters: 
2018-08-09 13:45:10 -<==      Total: 12
2018-08-09 13:45:10 -耗时 : 2
2018-08-09 13:45:10 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"18","parentId":"13","state":{"opened":true},"text":"hahaha"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"人事"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"自然的恩典"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"福慧学院"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"17","parentId":"9","state":{"opened":true},"text":"人事"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"信息"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"总部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"视频部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"德养"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-08-09 13:45:10 -请求地址 : http://localhost:8000/sys/user/list
2018-08-09 13:45:10 -HTTP METHOD : GET
2018-08-09 13:45:10 -CLASS_METHOD : com.zhy.management.system.controller.UserController.list
2018-08-09 13:45:10 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-08-09 13:45:10 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-08-09 13:45:10 -==> Parameters: 0(Integer), 10(Integer)
2018-08-09 13:45:10 -<==      Total: 7
2018-08-09 13:45:10 -==>  Preparing: select count(*) from sys_user 
2018-08-09 13:45:10 -==> Parameters: 
2018-08-09 13:45:10 -<==      Total: 1
2018-08-09 13:45:10 -耗时 : 6
2018-08-09 13:45:10 -返回值 : com.zhy.management.common.utils.PageUtils@6164a5df
2018-08-09 13:45:19 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:45:19 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 13:45:19 -HTTP METHOD : GET
2018-08-09 13:45:19 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 13:45:19 -参数 : []
2018-08-09 13:45:19 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 13:45:19 -==> Parameters: 
2018-08-09 13:45:19 -<==      Total: 12
2018-08-09 13:45:19 -耗时 : 2
2018-08-09 13:45:19 -返回值 : [DeptDO{deptId=18, parentId=13, name='hahaha', orderNum=null, delFlag=null}, DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 13:45:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:45:20 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 13:45:20 -HTTP METHOD : GET
2018-08-09 13:45:20 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 13:45:20 -参数 : []
2018-08-09 13:45:20 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 13:45:20 -==> Parameters: 
2018-08-09 13:45:20 -<==      Total: 12
2018-08-09 13:45:20 -耗时 : 3
2018-08-09 13:45:20 -返回值 : [DeptDO{deptId=18, parentId=13, name='hahaha', orderNum=null, delFlag=null}, DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 13:45:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:45:21 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 13:45:21 -HTTP METHOD : GET
2018-08-09 13:45:21 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 13:45:21 -参数 : []
2018-08-09 13:45:21 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 13:45:21 -==> Parameters: 
2018-08-09 13:45:21 -<==      Total: 12
2018-08-09 13:45:21 -耗时 : 1
2018-08-09 13:45:21 -返回值 : [DeptDO{deptId=18, parentId=13, name='hahaha', orderNum=null, delFlag=null}, DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 13:45:36 -Starting App on zhy with PID 14456 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 13:45:36 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 13:45:36 -The following profiles are active: dev
2018-08-09 13:45:36 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 13:45:36 CST 2018]; root of context hierarchy
2018-08-09 13:45:36 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 13:45:37 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$532bf8fb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:45:37 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$347ffd8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:45:37 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:45:37 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:45:37 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 13:45:37 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:45:37 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:45:37 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:45:37 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:45:37 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:45:37 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 13:45:37 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 13:45:37 -Starting service [Tomcat]
2018-08-09 13:45:37 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 13:45:37 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 13:45:37 -Initializing Spring embedded WebApplicationContext
2018-08-09 13:45:37 -Root WebApplicationContext: initialization completed in 1415 ms
2018-08-09 13:45:37 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 13:45:37 -Servlet dispatcherServlet mapped to [/]
2018-08-09 13:45:37 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 13:45:37 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 13:45:37 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 13:45:37 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 13:45:37 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 13:45:37 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 13:45:37 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 13:45:36 CST 2018]; root of context hierarchy
2018-08-09 13:45:38 -{dataSource-1} inited
2018-08-09 13:45:38 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 13:45:38 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:45:38 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 13:45:36 CST 2018]; root of context hierarchy
2018-08-09 13:45:38 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 13:45:38 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 13:45:38 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 13:45:38 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 13:45:38 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 13:45:38 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 13:45:38 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 13:45:38 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 13:45:38 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 13:45:38 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 13:45:38 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 13:45:38 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 13:45:38 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 13:45:38 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 13:45:38 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 13:45:38 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 13:45:38 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 13:45:38 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 13:45:38 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 13:45:38 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 13:45:38 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 13:45:38 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 13:45:38 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 13:45:38 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 13:45:38 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 13:45:38 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 13:45:38 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 13:45:38 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 13:45:38 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 13:45:38 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 13:45:38 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 13:45:38 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 13:45:38 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 13:45:38 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 13:45:38 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 13:45:38 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 13:45:38 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 13:45:38 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 13:45:38 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 13:45:38 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 13:45:38 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 13:45:38 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 13:45:38 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 13:45:38 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 13:45:38 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 13:45:38 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 13:45:38 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:45:38 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:45:38 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:45:38 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 13:45:39 -Using default implementation for ThreadExecutor
2018-08-09 13:45:39 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 13:45:39 -Quartz Scheduler v.2.2.1 created.
2018-08-09 13:45:39 -RAMJobStore initialized.
2018-08-09 13:45:39 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 13:45:39 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 13:45:39 -Quartz scheduler version: 2.2.1
2018-08-09 13:45:39 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@47058864
2018-08-09 13:45:39 -Registering beans for JMX exposure on startup
2018-08-09 13:45:39 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 13:45:39 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 13:45:39 -Starting beans in phase 2147483647
2018-08-09 13:45:39 -Starting Quartz Scheduler now
2018-08-09 13:45:39 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 13:45:39 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 13:45:39 -Using a shared selector for servlet write/read
2018-08-09 13:45:39 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 13:45:39 -Started App in 3.645 seconds (JVM running for 4.248)
2018-08-09 13:45:39 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 13:45:39 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 13:45:39 -FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2018-08-09 13:45:39 -Enabling session validation scheduler...
2018-08-09 13:45:39 -请求地址 : http://localhost:8000/index
2018-08-09 13:45:39 -HTTP METHOD : GET
2018-08-09 13:45:39 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 13:45:39 -参数 : [{}]
2018-08-09 13:45:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 13:45:39 -==> Parameters: 1(Long)
2018-08-09 13:45:39 -<==      Total: 28
2018-08-09 13:45:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 13:45:39 -==> Parameters: 142(Long)
2018-08-09 13:45:39 -<==      Total: 1
2018-08-09 13:45:39 -耗时 : 102
2018-08-09 13:45:39 -返回值 : index_v1
2018-08-09 13:45:40 -请求地址 : http://localhost:8000/main
2018-08-09 13:45:40 -HTTP METHOD : GET
2018-08-09 13:45:40 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 13:45:40 -参数 : []
2018-08-09 13:45:40 -耗时 : 0
2018-08-09 13:45:40 -返回值 : main
2018-08-09 13:45:40 -请求地址 : http://localhost:8000/main
2018-08-09 13:45:40 -HTTP METHOD : GET
2018-08-09 13:45:40 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 13:45:40 -参数 : []
2018-08-09 13:45:40 -耗时 : 0
2018-08-09 13:45:40 -返回值 : main
2018-08-09 13:45:42 -请求地址 : http://localhost:8000/index
2018-08-09 13:45:42 -HTTP METHOD : GET
2018-08-09 13:45:42 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 13:45:42 -参数 : [{}]
2018-08-09 13:45:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 13:45:42 -==> Parameters: 1(Long)
2018-08-09 13:45:42 -<==      Total: 28
2018-08-09 13:45:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 13:45:42 -==> Parameters: 142(Long)
2018-08-09 13:45:42 -<==      Total: 1
2018-08-09 13:45:42 -耗时 : 6
2018-08-09 13:45:42 -返回值 : index_v1
2018-08-09 13:45:42 -请求地址 : http://localhost:8000/main
2018-08-09 13:45:42 -HTTP METHOD : GET
2018-08-09 13:45:42 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 13:45:42 -参数 : []
2018-08-09 13:45:42 -耗时 : 0
2018-08-09 13:45:42 -返回值 : main
2018-08-09 13:45:42 -请求地址 : http://localhost:8000/main
2018-08-09 13:45:42 -HTTP METHOD : GET
2018-08-09 13:45:42 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 13:45:42 -参数 : []
2018-08-09 13:45:42 -耗时 : 0
2018-08-09 13:45:42 -返回值 : main
2018-08-09 13:45:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:45:46 -请求地址 : http://localhost:8000/system/sysDept
2018-08-09 13:45:46 -HTTP METHOD : GET
2018-08-09 13:45:46 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.dept
2018-08-09 13:45:46 -参数 : []
2018-08-09 13:45:46 -耗时 : 0
2018-08-09 13:45:46 -返回值 : system/dept/dept
2018-08-09 13:45:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:45:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:45:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:45:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:45:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:45:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:45:48 -请求地址 : http://localhost:8000/index
2018-08-09 13:45:48 -HTTP METHOD : GET
2018-08-09 13:45:48 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 13:45:48 -参数 : [{}]
2018-08-09 13:45:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 13:45:48 -==> Parameters: 1(Long)
2018-08-09 13:45:48 -<==      Total: 28
2018-08-09 13:45:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 13:45:48 -==> Parameters: 142(Long)
2018-08-09 13:45:48 -<==      Total: 1
2018-08-09 13:45:48 -耗时 : 8
2018-08-09 13:45:48 -返回值 : index_v1
2018-08-09 13:45:48 -请求地址 : http://localhost:8000/main
2018-08-09 13:45:48 -HTTP METHOD : GET
2018-08-09 13:45:48 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 13:45:48 -参数 : []
2018-08-09 13:45:48 -耗时 : 0
2018-08-09 13:45:48 -返回值 : main
2018-08-09 13:45:48 -请求地址 : http://localhost:8000/main
2018-08-09 13:45:48 -HTTP METHOD : GET
2018-08-09 13:45:48 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 13:45:48 -参数 : []
2018-08-09 13:45:48 -耗时 : 0
2018-08-09 13:45:48 -返回值 : main
2018-08-09 13:46:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:46:05 -请求地址 : http://localhost:8000/system/sysDept
2018-08-09 13:46:05 -HTTP METHOD : GET
2018-08-09 13:46:05 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.dept
2018-08-09 13:46:05 -参数 : []
2018-08-09 13:46:05 -耗时 : 0
2018-08-09 13:46:05 -返回值 : system/dept/dept
2018-08-09 13:46:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:46:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:46:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:46:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:46:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:46:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:46:16 -Starting App on zhy with PID 12476 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 13:46:16 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 13:46:16 -The following profiles are active: dev
2018-08-09 13:46:16 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 13:46:16 CST 2018]; root of context hierarchy
2018-08-09 13:46:17 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 13:46:17 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6120f87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:46:17 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$e7661417] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:46:17 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:46:17 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:46:17 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 13:46:17 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:46:17 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:46:17 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:46:17 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:46:17 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:46:18 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 13:46:18 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 13:46:18 -Starting service [Tomcat]
2018-08-09 13:46:18 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 13:46:18 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 13:46:18 -Initializing Spring embedded WebApplicationContext
2018-08-09 13:46:18 -Root WebApplicationContext: initialization completed in 1344 ms
2018-08-09 13:46:18 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 13:46:18 -Servlet dispatcherServlet mapped to [/]
2018-08-09 13:46:18 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 13:46:18 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 13:46:18 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 13:46:18 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 13:46:18 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 13:46:18 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 13:46:18 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 13:46:16 CST 2018]; root of context hierarchy
2018-08-09 13:46:18 -{dataSource-1} inited
2018-08-09 13:46:18 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 13:46:18 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:46:19 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 13:46:16 CST 2018]; root of context hierarchy
2018-08-09 13:46:19 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 13:46:19 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 13:46:19 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 13:46:19 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 13:46:19 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 13:46:19 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 13:46:19 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 13:46:19 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 13:46:19 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 13:46:19 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 13:46:19 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 13:46:19 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 13:46:19 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 13:46:19 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 13:46:19 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 13:46:19 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 13:46:19 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 13:46:19 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 13:46:19 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 13:46:19 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 13:46:19 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 13:46:19 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 13:46:19 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 13:46:19 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 13:46:19 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 13:46:19 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 13:46:19 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 13:46:19 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 13:46:19 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 13:46:19 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 13:46:19 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 13:46:19 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 13:46:19 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 13:46:19 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 13:46:19 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 13:46:19 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 13:46:19 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 13:46:19 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 13:46:19 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 13:46:19 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 13:46:19 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 13:46:19 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 13:46:19 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 13:46:19 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 13:46:19 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 13:46:19 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 13:46:19 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:46:19 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:46:19 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:46:19 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 13:46:19 -Using default implementation for ThreadExecutor
2018-08-09 13:46:19 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 13:46:19 -Quartz Scheduler v.2.2.1 created.
2018-08-09 13:46:19 -RAMJobStore initialized.
2018-08-09 13:46:19 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 13:46:19 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 13:46:19 -Quartz scheduler version: 2.2.1
2018-08-09 13:46:19 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@4eb9ae4d
2018-08-09 13:46:19 -Registering beans for JMX exposure on startup
2018-08-09 13:46:19 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 13:46:19 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 13:46:19 -Starting beans in phase 2147483647
2018-08-09 13:46:19 -Starting Quartz Scheduler now
2018-08-09 13:46:19 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 13:46:19 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 13:46:19 -Using a shared selector for servlet write/read
2018-08-09 13:46:19 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 13:46:19 -Started App in 3.517 seconds (JVM running for 4.07)
2018-08-09 13:46:21 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 13:46:21 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 13:46:21 -FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2018-08-09 13:46:21 -Enabling session validation scheduler...
2018-08-09 13:46:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:46:21 -请求地址 : http://localhost:8000/system/sysDept
2018-08-09 13:46:21 -HTTP METHOD : GET
2018-08-09 13:46:21 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.dept
2018-08-09 13:46:21 -参数 : []
2018-08-09 13:46:21 -耗时 : 1
2018-08-09 13:46:21 -返回值 : system/dept/dept
2018-08-09 13:46:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:46:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:46:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:46:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:46:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:46:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:46:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:46:21 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 13:46:21 -HTTP METHOD : GET
2018-08-09 13:46:21 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 13:46:21 -参数 : []
2018-08-09 13:46:21 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 13:46:21 -==> Parameters: 
2018-08-09 13:46:21 -<==      Total: 12
2018-08-09 13:46:21 -耗时 : 187
2018-08-09 13:46:21 -返回值 : [DeptDO{deptId=18, parentId=13, name='hahaha', orderNum=null, delFlag=null}, DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 13:47:02 -Starting App on zhy with PID 10580 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 13:47:02 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 13:47:02 -The following profiles are active: dev
2018-08-09 13:47:02 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 13:47:02 CST 2018]; root of context hierarchy
2018-08-09 13:47:03 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 13:47:03 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$aa024291] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:47:03 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$8b564721] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:47:03 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:47:03 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:47:03 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 13:47:03 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:47:03 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:47:03 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:47:03 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:47:03 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:47:04 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 13:47:04 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 13:47:04 -Starting service [Tomcat]
2018-08-09 13:47:04 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 13:47:04 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 13:47:04 -Initializing Spring embedded WebApplicationContext
2018-08-09 13:47:04 -Root WebApplicationContext: initialization completed in 1328 ms
2018-08-09 13:47:04 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 13:47:04 -Servlet dispatcherServlet mapped to [/]
2018-08-09 13:47:04 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 13:47:04 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 13:47:04 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 13:47:04 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 13:47:04 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 13:47:04 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 13:47:04 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 13:47:02 CST 2018]; root of context hierarchy
2018-08-09 13:47:04 -{dataSource-1} inited
2018-08-09 13:47:04 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 13:47:05 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:47:05 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 13:47:02 CST 2018]; root of context hierarchy
2018-08-09 13:47:05 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 13:47:05 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 13:47:05 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 13:47:05 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 13:47:05 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 13:47:05 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 13:47:05 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 13:47:05 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 13:47:05 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 13:47:05 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 13:47:05 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 13:47:05 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 13:47:05 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 13:47:05 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 13:47:05 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 13:47:05 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 13:47:05 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 13:47:05 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 13:47:05 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 13:47:05 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 13:47:05 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 13:47:05 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 13:47:05 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 13:47:05 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 13:47:05 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 13:47:05 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 13:47:05 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 13:47:05 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 13:47:05 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 13:47:05 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 13:47:05 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 13:47:05 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 13:47:05 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 13:47:05 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 13:47:05 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 13:47:05 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 13:47:05 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 13:47:05 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 13:47:05 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 13:47:05 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 13:47:05 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 13:47:05 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 13:47:05 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 13:47:05 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 13:47:05 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 13:47:05 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 13:47:05 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:47:05 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:47:05 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:47:05 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 13:47:05 -Using default implementation for ThreadExecutor
2018-08-09 13:47:05 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 13:47:05 -Quartz Scheduler v.2.2.1 created.
2018-08-09 13:47:05 -RAMJobStore initialized.
2018-08-09 13:47:05 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 13:47:05 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 13:47:05 -Quartz scheduler version: 2.2.1
2018-08-09 13:47:05 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@743d0d44
2018-08-09 13:47:05 -Registering beans for JMX exposure on startup
2018-08-09 13:47:05 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 13:47:05 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 13:47:05 -Starting beans in phase 2147483647
2018-08-09 13:47:05 -Starting Quartz Scheduler now
2018-08-09 13:47:05 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 13:47:06 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 13:47:06 -Using a shared selector for servlet write/read
2018-08-09 13:47:06 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 13:47:06 -Started App in 3.452 seconds (JVM running for 4.023)
2018-08-09 13:47:09 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 13:47:09 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 13:47:09 -FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2018-08-09 13:47:09 -Enabling session validation scheduler...
2018-08-09 13:47:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:47:09 -请求地址 : http://localhost:8000/system/sysDept
2018-08-09 13:47:09 -HTTP METHOD : GET
2018-08-09 13:47:09 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.dept
2018-08-09 13:47:09 -参数 : []
2018-08-09 13:47:09 -耗时 : 1
2018-08-09 13:47:09 -返回值 : system/dept/dept
2018-08-09 13:47:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:47:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:47:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:47:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:47:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:47:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:47:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:47:10 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 13:47:10 -HTTP METHOD : GET
2018-08-09 13:47:10 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 13:47:10 -参数 : []
2018-08-09 13:47:10 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 13:47:10 -==> Parameters: 
2018-08-09 13:47:10 -<==      Total: 12
2018-08-09 13:47:10 -耗时 : 188
2018-08-09 13:47:10 -返回值 : [DeptDO{deptId=18, parentId=13, name='hahaha', orderNum=null, delFlag=null}, DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 13:47:40 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:47:40 -请求地址 : http://localhost:8000/system/sysDept
2018-08-09 13:47:40 -HTTP METHOD : GET
2018-08-09 13:47:40 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.dept
2018-08-09 13:47:40 -参数 : []
2018-08-09 13:47:40 -耗时 : 0
2018-08-09 13:47:40 -返回值 : system/dept/dept
2018-08-09 13:47:40 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:47:40 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:47:40 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:47:40 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:47:40 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:47:40 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:47:40 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:47:40 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 13:47:40 -HTTP METHOD : GET
2018-08-09 13:47:40 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 13:47:40 -参数 : []
2018-08-09 13:47:40 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 13:47:40 -==> Parameters: 
2018-08-09 13:47:40 -<==      Total: 12
2018-08-09 13:47:40 -耗时 : 5
2018-08-09 13:47:40 -返回值 : [DeptDO{deptId=18, parentId=13, name='hahaha', orderNum=null, delFlag=null}, DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 13:47:44 -Starting App on zhy with PID 14960 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 13:47:44 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 13:47:44 -The following profiles are active: dev
2018-08-09 13:47:44 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 13:47:44 CST 2018]; root of context hierarchy
2018-08-09 13:47:44 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 13:47:45 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6120f87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:47:45 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$e7661417] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:47:45 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:47:45 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:47:45 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 13:47:45 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:47:45 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:47:45 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:47:45 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:47:45 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:47:45 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 13:47:45 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 13:47:45 -Starting service [Tomcat]
2018-08-09 13:47:45 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 13:47:45 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 13:47:45 -Initializing Spring embedded WebApplicationContext
2018-08-09 13:47:45 -Root WebApplicationContext: initialization completed in 1348 ms
2018-08-09 13:47:45 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 13:47:45 -Servlet dispatcherServlet mapped to [/]
2018-08-09 13:47:45 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 13:47:45 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 13:47:45 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 13:47:45 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 13:47:45 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 13:47:45 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 13:47:45 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 13:47:44 CST 2018]; root of context hierarchy
2018-08-09 13:47:46 -{dataSource-1} inited
2018-08-09 13:47:46 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 13:47:46 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:47:46 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 13:47:44 CST 2018]; root of context hierarchy
2018-08-09 13:47:46 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 13:47:46 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 13:47:46 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 13:47:46 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 13:47:46 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 13:47:46 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 13:47:46 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 13:47:46 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 13:47:46 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 13:47:46 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 13:47:46 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 13:47:46 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 13:47:46 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 13:47:46 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 13:47:46 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 13:47:46 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 13:47:46 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 13:47:46 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 13:47:46 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 13:47:46 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 13:47:46 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 13:47:46 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 13:47:46 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 13:47:46 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 13:47:46 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 13:47:46 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 13:47:46 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 13:47:46 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 13:47:46 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 13:47:46 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 13:47:46 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 13:47:46 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 13:47:46 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 13:47:46 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 13:47:46 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 13:47:46 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 13:47:46 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 13:47:46 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 13:47:46 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 13:47:46 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 13:47:46 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 13:47:46 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 13:47:46 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 13:47:46 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 13:47:46 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 13:47:46 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 13:47:46 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:47:46 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:47:46 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:47:46 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 13:47:47 -Using default implementation for ThreadExecutor
2018-08-09 13:47:47 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 13:47:47 -Quartz Scheduler v.2.2.1 created.
2018-08-09 13:47:47 -RAMJobStore initialized.
2018-08-09 13:47:47 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 13:47:47 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 13:47:47 -Quartz scheduler version: 2.2.1
2018-08-09 13:47:47 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@4eb9ae4d
2018-08-09 13:47:47 -Registering beans for JMX exposure on startup
2018-08-09 13:47:47 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 13:47:47 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 13:47:47 -Starting beans in phase 2147483647
2018-08-09 13:47:47 -Starting Quartz Scheduler now
2018-08-09 13:47:47 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 13:47:47 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 13:47:47 -Using a shared selector for servlet write/read
2018-08-09 13:47:47 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 13:47:47 -Started App in 3.509 seconds (JVM running for 4.057)
2018-08-09 13:47:54 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 13:47:54 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 13:47:54 -FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2018-08-09 13:47:54 -Enabling session validation scheduler...
2018-08-09 13:47:54 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:47:54 -请求地址 : http://localhost:8000/system/sysDept
2018-08-09 13:47:54 -HTTP METHOD : GET
2018-08-09 13:47:54 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.dept
2018-08-09 13:47:54 -参数 : []
2018-08-09 13:47:54 -耗时 : 1
2018-08-09 13:47:54 -返回值 : system/dept/dept
2018-08-09 13:47:54 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:47:54 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:47:54 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:47:54 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:47:54 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:47:54 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:47:54 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:47:54 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 13:47:54 -HTTP METHOD : GET
2018-08-09 13:47:54 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 13:47:54 -参数 : []
2018-08-09 13:47:54 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 13:47:54 -==> Parameters: 
2018-08-09 13:47:54 -<==      Total: 12
2018-08-09 13:47:54 -耗时 : 184
2018-08-09 13:47:54 -返回值 : [DeptDO{deptId=18, parentId=13, name='hahaha', orderNum=null, delFlag=null}, DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 13:48:13 -请求地址 : http://localhost:8000/
2018-08-09 13:48:13 -HTTP METHOD : GET
2018-08-09 13:48:13 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.welcome
2018-08-09 13:48:13 -参数 : [{}]
2018-08-09 13:48:13 -耗时 : 1
2018-08-09 13:48:13 -返回值 : redirect:/login
2018-08-09 13:48:13 -请求地址 : http://localhost:8000/login
2018-08-09 13:48:13 -HTTP METHOD : GET
2018-08-09 13:48:13 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 13:48:13 -参数 : []
2018-08-09 13:48:13 -耗时 : 0
2018-08-09 13:48:13 -返回值 : login
2018-08-09 13:48:15 -请求地址 : http://localhost:8000/login
2018-08-09 13:48:15 -HTTP METHOD : POST
2018-08-09 13:48:15 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 13:48:15 -参数 : [admin, 111111]
2018-08-09 13:48:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 13:48:15 -==> Parameters: admin(String)
2018-08-09 13:48:15 -<==      Total: 1
2018-08-09 13:48:15 -耗时 : 22
2018-08-09 13:48:15 -返回值 : {msg=操作成功, code=0}
2018-08-09 13:48:15 -请求地址 : http://localhost:8000/index
2018-08-09 13:48:15 -HTTP METHOD : GET
2018-08-09 13:48:15 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 13:48:15 -参数 : [{}]
2018-08-09 13:48:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 13:48:15 -==> Parameters: 1(Long)
2018-08-09 13:48:15 -<==      Total: 28
2018-08-09 13:48:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 13:48:15 -==> Parameters: 142(Long)
2018-08-09 13:48:15 -<==      Total: 1
2018-08-09 13:48:15 -耗时 : 22
2018-08-09 13:48:15 -返回值 : index_v1
2018-08-09 13:48:15 -请求地址 : http://localhost:8000/main
2018-08-09 13:48:15 -HTTP METHOD : GET
2018-08-09 13:48:15 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 13:48:15 -参数 : []
2018-08-09 13:48:15 -耗时 : 1
2018-08-09 13:48:15 -返回值 : main
2018-08-09 13:48:15 -请求地址 : http://localhost:8000/main
2018-08-09 13:48:15 -HTTP METHOD : GET
2018-08-09 13:48:15 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 13:48:15 -参数 : []
2018-08-09 13:48:15 -耗时 : 0
2018-08-09 13:48:15 -返回值 : main
2018-08-09 13:48:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:48:17 -请求地址 : http://localhost:8000/system/sysDept
2018-08-09 13:48:17 -HTTP METHOD : GET
2018-08-09 13:48:17 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.dept
2018-08-09 13:48:17 -参数 : []
2018-08-09 13:48:17 -耗时 : 0
2018-08-09 13:48:17 -返回值 : system/dept/dept
2018-08-09 13:48:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:48:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:48:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:48:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:48:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:48:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:48:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:48:17 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 13:48:17 -HTTP METHOD : GET
2018-08-09 13:48:17 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 13:48:17 -参数 : []
2018-08-09 13:48:17 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 13:48:17 -==> Parameters: 
2018-08-09 13:48:17 -<==      Total: 12
2018-08-09 13:48:17 -耗时 : 4
2018-08-09 13:48:17 -返回值 : [DeptDO{deptId=18, parentId=13, name='hahaha', orderNum=null, delFlag=null}, DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 13:52:45 -Starting App on zhy with PID 10256 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 13:52:45 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 13:52:45 -The following profiles are active: dev
2018-08-09 13:52:45 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 13:52:45 CST 2018]; root of context hierarchy
2018-08-09 13:52:45 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 13:52:46 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6120f87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:52:46 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$e7661417] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:52:46 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:52:46 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:52:46 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 13:52:46 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:52:46 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:52:46 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:52:46 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:52:46 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 13:52:46 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 13:52:46 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 13:52:46 -Starting service [Tomcat]
2018-08-09 13:52:46 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 13:52:46 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 13:52:46 -Initializing Spring embedded WebApplicationContext
2018-08-09 13:52:46 -Root WebApplicationContext: initialization completed in 1348 ms
2018-08-09 13:52:46 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 13:52:46 -Servlet dispatcherServlet mapped to [/]
2018-08-09 13:52:46 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 13:52:46 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 13:52:46 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 13:52:46 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 13:52:46 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 13:52:46 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 13:52:46 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 13:52:45 CST 2018]; root of context hierarchy
2018-08-09 13:52:47 -{dataSource-1} inited
2018-08-09 13:52:47 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 13:52:47 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:52:47 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 13:52:45 CST 2018]; root of context hierarchy
2018-08-09 13:52:47 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 13:52:47 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 13:52:47 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 13:52:47 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 13:52:47 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 13:52:47 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 13:52:47 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 13:52:47 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 13:52:47 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 13:52:47 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 13:52:47 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 13:52:47 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 13:52:47 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 13:52:47 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 13:52:47 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 13:52:47 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 13:52:47 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 13:52:47 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 13:52:47 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 13:52:47 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 13:52:47 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 13:52:47 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 13:52:47 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 13:52:47 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 13:52:47 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 13:52:47 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 13:52:47 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 13:52:47 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 13:52:47 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 13:52:47 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 13:52:47 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 13:52:47 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 13:52:47 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 13:52:47 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 13:52:47 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 13:52:47 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 13:52:47 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 13:52:47 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 13:52:47 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 13:52:47 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 13:52:47 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 13:52:47 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 13:52:47 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 13:52:47 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 13:52:47 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 13:52:47 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 13:52:47 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:52:47 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:52:47 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 13:52:47 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 13:52:48 -Using default implementation for ThreadExecutor
2018-08-09 13:52:48 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 13:52:48 -Quartz Scheduler v.2.2.1 created.
2018-08-09 13:52:48 -RAMJobStore initialized.
2018-08-09 13:52:48 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 13:52:48 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 13:52:48 -Quartz scheduler version: 2.2.1
2018-08-09 13:52:48 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@4eb9ae4d
2018-08-09 13:52:48 -Registering beans for JMX exposure on startup
2018-08-09 13:52:48 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 13:52:48 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 13:52:48 -Starting beans in phase 2147483647
2018-08-09 13:52:48 -Starting Quartz Scheduler now
2018-08-09 13:52:48 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 13:52:48 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 13:52:48 -Using a shared selector for servlet write/read
2018-08-09 13:52:48 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 13:52:48 -Started App in 3.549 seconds (JVM running for 4.102)
2018-08-09 13:52:49 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 13:52:49 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 13:52:49 -FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2018-08-09 13:52:49 -Enabling session validation scheduler...
2018-08-09 13:52:49 -请求地址 : http://localhost:8000/index
2018-08-09 13:52:49 -HTTP METHOD : GET
2018-08-09 13:52:49 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 13:52:49 -参数 : [{}]
2018-08-09 13:52:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 13:52:49 -==> Parameters: 1(Long)
2018-08-09 13:52:49 -<==      Total: 28
2018-08-09 13:52:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 13:52:49 -==> Parameters: 142(Long)
2018-08-09 13:52:49 -<==      Total: 1
2018-08-09 13:52:49 -耗时 : 97
2018-08-09 13:52:49 -返回值 : index_v1
2018-08-09 13:52:50 -请求地址 : http://localhost:8000/main
2018-08-09 13:52:50 -HTTP METHOD : GET
2018-08-09 13:52:50 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 13:52:50 -参数 : []
2018-08-09 13:52:50 -耗时 : 0
2018-08-09 13:52:50 -返回值 : main
2018-08-09 13:52:50 -请求地址 : http://localhost:8000/main
2018-08-09 13:52:50 -HTTP METHOD : GET
2018-08-09 13:52:50 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 13:52:50 -参数 : []
2018-08-09 13:52:50 -耗时 : 1
2018-08-09 13:52:50 -返回值 : main
2018-08-09 13:52:50 -请求地址 : http://localhost:8000/index
2018-08-09 13:52:50 -HTTP METHOD : GET
2018-08-09 13:52:50 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 13:52:50 -参数 : [{}]
2018-08-09 13:52:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 13:52:50 -==> Parameters: 1(Long)
2018-08-09 13:52:50 -<==      Total: 28
2018-08-09 13:52:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 13:52:50 -==> Parameters: 142(Long)
2018-08-09 13:52:50 -<==      Total: 1
2018-08-09 13:52:50 -耗时 : 10
2018-08-09 13:52:50 -返回值 : index_v1
2018-08-09 13:52:50 -请求地址 : http://localhost:8000/main
2018-08-09 13:52:50 -HTTP METHOD : GET
2018-08-09 13:52:50 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 13:52:50 -参数 : []
2018-08-09 13:52:50 -耗时 : 0
2018-08-09 13:52:50 -返回值 : main
2018-08-09 13:52:50 -请求地址 : http://localhost:8000/main
2018-08-09 13:52:50 -HTTP METHOD : GET
2018-08-09 13:52:50 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 13:52:50 -参数 : []
2018-08-09 13:52:50 -耗时 : 0
2018-08-09 13:52:50 -返回值 : main
2018-08-09 13:52:52 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:52:52 -请求地址 : http://localhost:8000/system/sysDept
2018-08-09 13:52:52 -HTTP METHOD : GET
2018-08-09 13:52:52 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.dept
2018-08-09 13:52:52 -参数 : []
2018-08-09 13:52:52 -耗时 : 0
2018-08-09 13:52:52 -返回值 : system/dept/dept
2018-08-09 13:52:52 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:52:52 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:52:52 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:52:52 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:52:52 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:52:52 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:52:52 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 13:52:52 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 13:52:52 -HTTP METHOD : GET
2018-08-09 13:52:52 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 13:52:52 -参数 : []
2018-08-09 13:52:52 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 13:52:52 -==> Parameters: 
2018-08-09 13:52:52 -<==      Total: 12
2018-08-09 13:52:52 -耗时 : 18
2018-08-09 13:52:52 -返回值 : [DeptDO{deptId=18, parentId=13, name='hahaha', orderNum=null, delFlag=null}, DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 14:52:49 -Validating all active sessions...
2018-08-09 14:52:49 -Finished session validation.  [1] sessions were stopped.
2018-08-09 15:44:38 -Starting App on zhy with PID 12296 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 15:44:38 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 15:44:38 -The following profiles are active: dev
2018-08-09 15:44:38 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21282ed8: startup date [Thu Aug 09 15:44:38 CST 2018]; root of context hierarchy
2018-08-09 15:44:39 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 15:44:39 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$961c2c36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:44:39 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$777030c6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:44:39 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:44:39 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:44:39 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 15:44:39 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:44:39 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:44:39 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:44:39 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:44:39 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:44:40 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 15:44:40 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 15:44:40 -Starting service [Tomcat]
2018-08-09 15:44:40 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 15:44:40 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 15:44:40 -Initializing Spring embedded WebApplicationContext
2018-08-09 15:44:40 -Root WebApplicationContext: initialization completed in 1634 ms
2018-08-09 15:44:40 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 15:44:40 -Servlet dispatcherServlet mapped to [/]
2018-08-09 15:44:40 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 15:44:40 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 15:44:40 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 15:44:40 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 15:44:40 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 15:44:40 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 15:44:40 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21282ed8: startup date [Thu Aug 09 15:44:38 CST 2018]; root of context hierarchy
2018-08-09 15:44:40 -{dataSource-1} inited
2018-08-09 15:44:41 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 15:44:41 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 15:44:41 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21282ed8: startup date [Thu Aug 09 15:44:38 CST 2018]; root of context hierarchy
2018-08-09 15:44:41 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 15:44:41 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 15:44:41 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 15:44:41 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 15:44:41 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 15:44:41 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 15:44:41 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 15:44:41 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 15:44:41 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 15:44:41 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 15:44:41 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 15:44:41 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 15:44:41 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 15:44:41 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 15:44:41 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 15:44:41 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 15:44:41 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 15:44:41 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 15:44:41 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 15:44:41 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 15:44:41 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 15:44:41 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 15:44:41 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 15:44:41 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 15:44:41 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 15:44:41 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 15:44:41 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 15:44:41 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 15:44:41 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 15:44:41 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 15:44:41 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 15:44:41 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 15:44:41 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 15:44:41 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 15:44:41 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 15:44:41 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 15:44:41 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 15:44:41 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 15:44:41 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 15:44:41 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 15:44:41 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 15:44:41 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 15:44:41 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 15:44:41 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 15:44:41 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 15:44:41 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 15:44:41 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 15:44:41 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 15:44:41 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 15:44:41 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 15:44:42 -Using default implementation for ThreadExecutor
2018-08-09 15:44:42 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 15:44:42 -Quartz Scheduler v.2.2.1 created.
2018-08-09 15:44:42 -RAMJobStore initialized.
2018-08-09 15:44:42 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 15:44:42 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 15:44:42 -Quartz scheduler version: 2.2.1
2018-08-09 15:44:42 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@2d237460
2018-08-09 15:44:42 -Registering beans for JMX exposure on startup
2018-08-09 15:44:42 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 15:44:42 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 15:44:42 -Starting beans in phase 2147483647
2018-08-09 15:44:42 -Starting Quartz Scheduler now
2018-08-09 15:44:42 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 15:44:42 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 15:44:42 -Using a shared selector for servlet write/read
2018-08-09 15:44:42 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 15:44:42 -Started App in 3.9 seconds (JVM running for 4.61)
2018-08-09 15:44:44 -Starting App on zhy with PID 1184 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 15:44:44 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 15:44:44 -The following profiles are active: dev
2018-08-09 15:44:44 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 15:44:44 CST 2018]; root of context hierarchy
2018-08-09 15:44:44 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 15:44:44 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$532bf8fb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:44:44 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$347ffd8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:44:45 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:44:45 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:44:45 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 15:44:45 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:44:45 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:44:45 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:44:45 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:44:45 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:44:45 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 15:44:45 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 15:44:45 -Starting service [Tomcat]
2018-08-09 15:44:45 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 15:44:45 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 15:44:45 -Initializing Spring embedded WebApplicationContext
2018-08-09 15:44:45 -Root WebApplicationContext: initialization completed in 1373 ms
2018-08-09 15:44:45 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 15:44:45 -Servlet dispatcherServlet mapped to [/]
2018-08-09 15:44:45 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 15:44:45 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 15:44:45 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 15:44:45 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 15:44:45 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 15:44:45 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 15:44:45 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 15:44:44 CST 2018]; root of context hierarchy
2018-08-09 15:44:45 -{dataSource-1} inited
2018-08-09 15:44:46 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 15:44:46 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 15:44:46 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 15:44:44 CST 2018]; root of context hierarchy
2018-08-09 15:44:46 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 15:44:46 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 15:44:46 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 15:44:46 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 15:44:46 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 15:44:46 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 15:44:46 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 15:44:46 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 15:44:46 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 15:44:46 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 15:44:46 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 15:44:46 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 15:44:46 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 15:44:46 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 15:44:46 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 15:44:46 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 15:44:46 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 15:44:46 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 15:44:46 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 15:44:46 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 15:44:46 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 15:44:46 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 15:44:46 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 15:44:46 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 15:44:46 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 15:44:46 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 15:44:46 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 15:44:46 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 15:44:46 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 15:44:46 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 15:44:46 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 15:44:46 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 15:44:46 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 15:44:46 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 15:44:46 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 15:44:46 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 15:44:46 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 15:44:46 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 15:44:46 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 15:44:46 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 15:44:46 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 15:44:46 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 15:44:46 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 15:44:46 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 15:44:46 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 15:44:46 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 15:44:46 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 15:44:46 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 15:44:46 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 15:44:46 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 15:44:47 -Using default implementation for ThreadExecutor
2018-08-09 15:44:47 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 15:44:47 -Quartz Scheduler v.2.2.1 created.
2018-08-09 15:44:47 -RAMJobStore initialized.
2018-08-09 15:44:47 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 15:44:47 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 15:44:47 -Quartz scheduler version: 2.2.1
2018-08-09 15:44:47 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@ef86c72
2018-08-09 15:44:47 -Registering beans for JMX exposure on startup
2018-08-09 15:44:47 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 15:44:47 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 15:44:47 -Starting beans in phase 2147483647
2018-08-09 15:44:47 -Starting Quartz Scheduler now
2018-08-09 15:44:47 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 15:44:47 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 15:44:47 -Using a shared selector for servlet write/read
2018-08-09 15:44:47 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 15:44:47 -Started App in 3.441 seconds (JVM running for 3.965)
2018-08-09 15:44:57 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 15:44:57 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 15:44:57 -FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2018-08-09 15:44:57 -Enabling session validation scheduler...
2018-08-09 15:44:57 -请求地址 : http://localhost:8000/login;JSESSIONID=ee14a7b7-ae57-44d4-b705-5662b784ce9d
2018-08-09 15:44:57 -HTTP METHOD : GET
2018-08-09 15:44:57 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 15:44:57 -参数 : []
2018-08-09 15:44:57 -耗时 : 1
2018-08-09 15:44:57 -返回值 : login
2018-08-09 15:44:58 -请求地址 : http://localhost:8000/login
2018-08-09 15:44:58 -HTTP METHOD : POST
2018-08-09 15:44:58 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 15:44:58 -参数 : [admin, 111111]
2018-08-09 15:44:58 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 15:44:59 -==> Parameters: admin(String)
2018-08-09 15:44:59 -<==      Total: 1
2018-08-09 15:44:59 -耗时 : 222
2018-08-09 15:44:59 -返回值 : {msg=操作成功, code=0}
2018-08-09 15:44:59 -请求地址 : http://localhost:8000/index
2018-08-09 15:44:59 -HTTP METHOD : GET
2018-08-09 15:44:59 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 15:44:59 -参数 : [{}]
2018-08-09 15:44:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 15:44:59 -==> Parameters: 1(Long)
2018-08-09 15:44:59 -<==      Total: 28
2018-08-09 15:44:59 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 15:44:59 -==> Parameters: 142(Long)
2018-08-09 15:44:59 -<==      Total: 1
2018-08-09 15:44:59 -耗时 : 30
2018-08-09 15:44:59 -返回值 : index_v1
2018-08-09 15:44:59 -请求地址 : http://localhost:8000/main
2018-08-09 15:44:59 -HTTP METHOD : GET
2018-08-09 15:44:59 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 15:44:59 -参数 : []
2018-08-09 15:44:59 -耗时 : 0
2018-08-09 15:44:59 -返回值 : main
2018-08-09 15:44:59 -请求地址 : http://localhost:8000/main
2018-08-09 15:44:59 -HTTP METHOD : GET
2018-08-09 15:44:59 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 15:44:59 -参数 : []
2018-08-09 15:44:59 -耗时 : 0
2018-08-09 15:44:59 -返回值 : main
2018-08-09 15:45:01 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:45:01 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-08-09 15:45:01 -==> Parameters: 1(Long)
2018-08-09 15:45:01 -<==      Total: 47
2018-08-09 15:45:01 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:45:01 -请求地址 : http://localhost:8000/system/sysDept
2018-08-09 15:45:01 -HTTP METHOD : GET
2018-08-09 15:45:01 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.dept
2018-08-09 15:45:01 -参数 : []
2018-08-09 15:45:01 -耗时 : 0
2018-08-09 15:45:01 -返回值 : system/dept/dept
2018-08-09 15:45:01 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:45:01 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:45:01 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:45:01 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:45:01 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:45:01 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:45:02 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:45:02 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 15:45:02 -HTTP METHOD : GET
2018-08-09 15:45:02 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 15:45:02 -参数 : []
2018-08-09 15:45:02 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 15:45:02 -==> Parameters: 
2018-08-09 15:45:02 -<==      Total: 12
2018-08-09 15:45:02 -耗时 : 6
2018-08-09 15:45:02 -返回值 : [DeptDO{deptId=18, parentId=13, name='hahaha', orderNum=null, delFlag=null}, DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 15:45:35 -Starting App on zhy with PID 15792 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 15:45:35 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 15:45:35 -The following profiles are active: dev
2018-08-09 15:45:35 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 15:45:35 CST 2018]; root of context hierarchy
2018-08-09 15:45:35 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 15:45:35 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6120f87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:45:35 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$e7661417] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:45:36 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:45:36 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:45:36 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 15:45:36 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:45:36 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:45:36 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:45:36 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:45:36 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:45:36 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 15:45:36 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 15:45:36 -Starting service [Tomcat]
2018-08-09 15:45:36 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 15:45:36 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 15:45:36 -Initializing Spring embedded WebApplicationContext
2018-08-09 15:45:36 -Root WebApplicationContext: initialization completed in 1328 ms
2018-08-09 15:45:36 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 15:45:36 -Servlet dispatcherServlet mapped to [/]
2018-08-09 15:45:36 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 15:45:36 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 15:45:36 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 15:45:36 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 15:45:36 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 15:45:36 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 15:45:36 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 15:45:35 CST 2018]; root of context hierarchy
2018-08-09 15:45:36 -{dataSource-1} inited
2018-08-09 15:45:37 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 15:45:37 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 15:45:37 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 15:45:35 CST 2018]; root of context hierarchy
2018-08-09 15:45:37 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 15:45:37 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 15:45:37 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 15:45:37 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 15:45:37 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 15:45:37 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 15:45:37 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 15:45:37 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 15:45:37 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 15:45:37 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 15:45:37 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 15:45:37 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 15:45:37 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 15:45:37 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 15:45:37 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 15:45:37 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 15:45:37 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 15:45:37 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 15:45:37 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 15:45:37 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 15:45:37 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 15:45:37 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 15:45:37 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 15:45:37 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 15:45:37 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 15:45:37 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 15:45:37 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 15:45:37 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 15:45:37 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 15:45:37 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 15:45:37 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 15:45:37 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 15:45:37 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 15:45:37 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 15:45:37 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 15:45:37 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 15:45:37 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 15:45:37 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 15:45:37 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 15:45:37 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 15:45:37 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 15:45:37 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 15:45:37 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 15:45:37 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 15:45:37 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 15:45:37 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 15:45:37 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 15:45:37 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 15:45:37 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 15:45:37 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 15:45:38 -Using default implementation for ThreadExecutor
2018-08-09 15:45:38 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 15:45:38 -Quartz Scheduler v.2.2.1 created.
2018-08-09 15:45:38 -RAMJobStore initialized.
2018-08-09 15:45:38 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 15:45:38 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 15:45:38 -Quartz scheduler version: 2.2.1
2018-08-09 15:45:38 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@4eb9ae4d
2018-08-09 15:45:38 -Registering beans for JMX exposure on startup
2018-08-09 15:45:38 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 15:45:38 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 15:45:38 -Starting beans in phase 2147483647
2018-08-09 15:45:38 -Starting Quartz Scheduler now
2018-08-09 15:45:38 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 15:45:38 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 15:45:38 -Using a shared selector for servlet write/read
2018-08-09 15:45:38 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 15:45:38 -Started App in 3.438 seconds (JVM running for 3.993)
2018-08-09 15:45:45 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 15:45:45 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 15:45:45 -FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2018-08-09 15:45:45 -Enabling session validation scheduler...
2018-08-09 15:45:45 -请求地址 : http://localhost:8000/index
2018-08-09 15:45:45 -HTTP METHOD : GET
2018-08-09 15:45:45 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 15:45:45 -参数 : [{}]
2018-08-09 15:45:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 15:45:45 -==> Parameters: 1(Long)
2018-08-09 15:45:45 -<==      Total: 28
2018-08-09 15:45:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 15:45:45 -==> Parameters: 142(Long)
2018-08-09 15:45:45 -<==      Total: 1
2018-08-09 15:45:45 -耗时 : 93
2018-08-09 15:45:45 -返回值 : index_v1
2018-08-09 15:45:46 -请求地址 : http://localhost:8000/main
2018-08-09 15:45:46 -HTTP METHOD : GET
2018-08-09 15:45:46 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 15:45:46 -参数 : []
2018-08-09 15:45:46 -耗时 : 0
2018-08-09 15:45:46 -返回值 : main
2018-08-09 15:45:46 -请求地址 : http://localhost:8000/main
2018-08-09 15:45:46 -HTTP METHOD : GET
2018-08-09 15:45:46 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 15:45:46 -参数 : []
2018-08-09 15:45:46 -耗时 : 1
2018-08-09 15:45:46 -返回值 : main
2018-08-09 15:45:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:45:48 -请求地址 : http://localhost:8000/system/sysDept
2018-08-09 15:45:48 -HTTP METHOD : GET
2018-08-09 15:45:48 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.dept
2018-08-09 15:45:48 -参数 : []
2018-08-09 15:45:48 -耗时 : 0
2018-08-09 15:45:48 -返回值 : system/dept/dept
2018-08-09 15:45:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:45:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:45:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:45:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:45:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:45:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:45:49 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:45:49 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 15:45:49 -HTTP METHOD : GET
2018-08-09 15:45:49 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 15:45:49 -参数 : []
2018-08-09 15:45:49 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 15:45:49 -==> Parameters: 
2018-08-09 15:45:49 -<==      Total: 12
2018-08-09 15:45:49 -耗时 : 16
2018-08-09 15:45:49 -返回值 : [DeptDO{deptId=18, parentId=13, name='hahaha', orderNum=null, delFlag=null}, DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 15:45:55 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:45:55 -请求地址 : http://localhost:8000/system/sysDept/add/0
2018-08-09 15:45:55 -HTTP METHOD : GET
2018-08-09 15:45:55 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.add
2018-08-09 15:45:55 -参数 : [0, {}]
2018-08-09 15:45:55 -耗时 : 1
2018-08-09 15:45:55 -返回值 : system/dept/add
2018-08-09 15:50:43 -Starting App on zhy with PID 18080 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 15:50:43 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 15:50:43 -The following profiles are active: dev
2018-08-09 15:50:43 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 15:50:43 CST 2018]; root of context hierarchy
2018-08-09 15:50:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 15:50:43 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6120f87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:50:44 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$e7661417] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:50:44 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:50:44 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:50:44 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 15:50:44 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:50:44 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:50:44 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:50:44 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:50:44 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:50:44 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 15:50:44 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 15:50:44 -Starting service [Tomcat]
2018-08-09 15:50:44 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 15:50:44 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 15:50:44 -Initializing Spring embedded WebApplicationContext
2018-08-09 15:50:44 -Root WebApplicationContext: initialization completed in 1298 ms
2018-08-09 15:50:44 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 15:50:44 -Servlet dispatcherServlet mapped to [/]
2018-08-09 15:50:44 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 15:50:44 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 15:50:44 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 15:50:44 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 15:50:44 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 15:50:44 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 15:50:44 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 15:50:43 CST 2018]; root of context hierarchy
2018-08-09 15:50:44 -{dataSource-1} inited
2018-08-09 15:50:45 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 15:50:45 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 15:50:45 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 15:50:43 CST 2018]; root of context hierarchy
2018-08-09 15:50:45 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 15:50:45 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 15:50:45 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 15:50:45 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 15:50:45 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 15:50:45 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 15:50:45 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 15:50:45 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 15:50:45 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 15:50:45 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 15:50:45 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 15:50:45 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 15:50:45 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 15:50:45 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 15:50:45 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 15:50:45 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 15:50:45 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 15:50:45 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 15:50:45 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 15:50:45 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 15:50:45 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 15:50:45 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 15:50:45 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 15:50:45 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 15:50:45 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 15:50:45 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 15:50:45 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 15:50:45 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 15:50:45 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 15:50:45 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 15:50:45 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 15:50:45 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 15:50:45 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 15:50:45 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 15:50:45 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 15:50:45 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 15:50:45 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 15:50:45 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 15:50:45 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 15:50:45 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 15:50:45 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 15:50:45 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 15:50:45 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 15:50:45 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 15:50:45 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 15:50:45 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 15:50:45 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 15:50:45 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 15:50:45 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 15:50:45 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 15:50:46 -Using default implementation for ThreadExecutor
2018-08-09 15:50:46 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 15:50:46 -Quartz Scheduler v.2.2.1 created.
2018-08-09 15:50:46 -RAMJobStore initialized.
2018-08-09 15:50:46 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 15:50:46 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 15:50:46 -Quartz scheduler version: 2.2.1
2018-08-09 15:50:46 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@48f2054d
2018-08-09 15:50:46 -Registering beans for JMX exposure on startup
2018-08-09 15:50:46 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 15:50:46 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 15:50:46 -Starting beans in phase 2147483647
2018-08-09 15:50:46 -Starting Quartz Scheduler now
2018-08-09 15:50:46 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 15:50:46 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 15:50:46 -Using a shared selector for servlet write/read
2018-08-09 15:50:46 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 15:50:46 -Started App in 3.336 seconds (JVM running for 3.864)
2018-08-09 15:50:57 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 15:50:57 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 15:50:57 -FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2018-08-09 15:50:57 -Enabling session validation scheduler...
2018-08-09 15:50:57 -请求地址 : http://localhost:8000/index
2018-08-09 15:50:57 -HTTP METHOD : GET
2018-08-09 15:50:57 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 15:50:57 -参数 : [{}]
2018-08-09 15:50:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 15:50:57 -==> Parameters: 1(Long)
2018-08-09 15:50:57 -<==      Total: 28
2018-08-09 15:50:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 15:50:57 -==> Parameters: 142(Long)
2018-08-09 15:50:57 -<==      Total: 1
2018-08-09 15:50:57 -耗时 : 93
2018-08-09 15:50:57 -返回值 : index_v1
2018-08-09 15:50:57 -请求地址 : http://localhost:8000/main
2018-08-09 15:50:57 -HTTP METHOD : GET
2018-08-09 15:50:57 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 15:50:57 -参数 : []
2018-08-09 15:50:57 -耗时 : 0
2018-08-09 15:50:57 -返回值 : main
2018-08-09 15:50:57 -请求地址 : http://localhost:8000/main
2018-08-09 15:50:57 -HTTP METHOD : GET
2018-08-09 15:50:57 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 15:50:57 -参数 : []
2018-08-09 15:50:57 -耗时 : 0
2018-08-09 15:50:57 -返回值 : main
2018-08-09 15:51:00 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:51:00 -请求地址 : http://localhost:8000/system/sysDept
2018-08-09 15:51:00 -HTTP METHOD : GET
2018-08-09 15:51:00 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.dept
2018-08-09 15:51:00 -参数 : []
2018-08-09 15:51:00 -耗时 : 0
2018-08-09 15:51:00 -返回值 : system/dept/dept
2018-08-09 15:51:00 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:51:00 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:51:00 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:51:00 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:51:00 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:51:00 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:51:01 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:51:01 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 15:51:01 -HTTP METHOD : GET
2018-08-09 15:51:01 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 15:51:01 -参数 : []
2018-08-09 15:51:01 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 15:51:01 -==> Parameters: 
2018-08-09 15:51:01 -<==      Total: 12
2018-08-09 15:51:01 -耗时 : 16
2018-08-09 15:51:01 -返回值 : [DeptDO{deptId=18, parentId=13, name='hahaha', orderNum=null, delFlag=null}, DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 15:52:18 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:52:18 -请求地址 : http://localhost:8000/sys/user/
2018-08-09 15:52:18 -HTTP METHOD : GET
2018-08-09 15:52:18 -CLASS_METHOD : com.zhy.management.system.controller.UserController.user
2018-08-09 15:52:18 -参数 : [{}]
2018-08-09 15:52:18 -耗时 : 0
2018-08-09 15:52:18 -返回值 : system/user/user
2018-08-09 15:52:19 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:52:19 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:52:19 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:52:19 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:52:19 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:52:19 -请求地址 : http://localhost:8000/system/sysDept/tree
2018-08-09 15:52:19 -HTTP METHOD : GET
2018-08-09 15:52:19 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.tree
2018-08-09 15:52:19 -参数 : []
2018-08-09 15:52:19 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 15:52:19 -==> Parameters: 
2018-08-09 15:52:19 -<==      Total: 12
2018-08-09 15:52:19 -耗时 : 4
2018-08-09 15:52:19 -请求地址 : http://localhost:8000/sys/user/list
2018-08-09 15:52:19 -HTTP METHOD : GET
2018-08-09 15:52:19 -CLASS_METHOD : com.zhy.management.system.controller.UserController.list
2018-08-09 15:52:19 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-08-09 15:52:19 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-08-09 15:52:19 -==> Parameters: 0(Integer), 10(Integer)
2018-08-09 15:52:19 -<==      Total: 7
2018-08-09 15:52:19 -==>  Preparing: select count(*) from sys_user 
2018-08-09 15:52:19 -==> Parameters: 
2018-08-09 15:52:19 -<==      Total: 1
2018-08-09 15:52:19 -耗时 : 17
2018-08-09 15:52:19 -返回值 : com.zhy.management.common.utils.PageUtils@2cd78ac2
2018-08-09 15:52:19 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"18","parentId":"13","state":{"opened":true},"text":"hahaha"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"人事"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"自然的恩典"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"福慧学院"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"17","parentId":"9","state":{"opened":true},"text":"人事"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"信息"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"总部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"视频部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"德养"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-08-09 15:53:15 -Starting App on zhy with PID 12312 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 15:53:15 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 15:53:15 -The following profiles are active: dev
2018-08-09 15:53:15 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 15:53:15 CST 2018]; root of context hierarchy
2018-08-09 15:53:15 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 15:53:15 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$532bf8fb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:53:15 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$347ffd8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:53:16 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:53:16 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:53:16 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 15:53:16 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:53:16 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:53:16 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:53:16 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:53:16 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:53:16 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 15:53:16 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 15:53:16 -Starting service [Tomcat]
2018-08-09 15:53:16 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 15:53:16 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 15:53:16 -Initializing Spring embedded WebApplicationContext
2018-08-09 15:53:16 -Root WebApplicationContext: initialization completed in 1298 ms
2018-08-09 15:53:16 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 15:53:16 -Servlet dispatcherServlet mapped to [/]
2018-08-09 15:53:16 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 15:53:16 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 15:53:16 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 15:53:16 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 15:53:16 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 15:53:16 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 15:53:16 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 15:53:15 CST 2018]; root of context hierarchy
2018-08-09 15:53:16 -{dataSource-1} inited
2018-08-09 15:53:17 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 15:53:17 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 15:53:17 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 15:53:15 CST 2018]; root of context hierarchy
2018-08-09 15:53:17 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 15:53:17 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 15:53:17 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 15:53:17 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 15:53:17 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 15:53:17 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 15:53:17 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 15:53:17 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 15:53:17 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 15:53:17 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 15:53:17 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 15:53:17 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 15:53:17 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 15:53:17 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 15:53:17 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 15:53:17 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 15:53:17 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 15:53:17 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 15:53:17 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 15:53:17 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 15:53:17 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 15:53:17 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 15:53:17 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 15:53:17 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 15:53:17 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 15:53:17 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 15:53:17 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 15:53:17 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 15:53:17 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 15:53:17 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 15:53:17 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 15:53:17 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 15:53:17 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 15:53:17 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 15:53:17 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 15:53:17 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 15:53:17 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 15:53:17 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 15:53:17 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 15:53:17 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 15:53:17 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 15:53:17 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 15:53:17 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 15:53:17 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 15:53:17 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 15:53:17 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 15:53:17 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 15:53:17 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 15:53:17 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 15:53:17 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 15:53:18 -Using default implementation for ThreadExecutor
2018-08-09 15:53:18 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 15:53:18 -Quartz Scheduler v.2.2.1 created.
2018-08-09 15:53:18 -RAMJobStore initialized.
2018-08-09 15:53:18 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 15:53:18 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 15:53:18 -Quartz scheduler version: 2.2.1
2018-08-09 15:53:18 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@ef86c72
2018-08-09 15:53:18 -Registering beans for JMX exposure on startup
2018-08-09 15:53:18 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 15:53:18 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 15:53:18 -Starting beans in phase 2147483647
2018-08-09 15:53:18 -Starting Quartz Scheduler now
2018-08-09 15:53:18 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 15:53:18 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 15:53:18 -Using a shared selector for servlet write/read
2018-08-09 15:53:18 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 15:53:18 -Started App in 3.377 seconds (JVM running for 3.961)
2018-08-09 15:54:02 -Starting App on zhy with PID 10460 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 15:54:02 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 15:54:02 -The following profiles are active: dev
2018-08-09 15:54:02 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 15:54:02 CST 2018]; root of context hierarchy
2018-08-09 15:54:02 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 15:54:02 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6120f87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:54:02 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$e7661417] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:54:03 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:54:03 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:54:03 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 15:54:03 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:54:03 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:54:03 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:54:03 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:54:03 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 15:54:03 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 15:54:03 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 15:54:03 -Starting service [Tomcat]
2018-08-09 15:54:03 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 15:54:03 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 15:54:03 -Initializing Spring embedded WebApplicationContext
2018-08-09 15:54:03 -Root WebApplicationContext: initialization completed in 1365 ms
2018-08-09 15:54:03 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 15:54:03 -Servlet dispatcherServlet mapped to [/]
2018-08-09 15:54:03 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 15:54:03 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 15:54:03 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 15:54:03 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 15:54:03 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 15:54:03 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 15:54:03 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 15:54:02 CST 2018]; root of context hierarchy
2018-08-09 15:54:03 -{dataSource-1} inited
2018-08-09 15:54:04 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 15:54:04 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 15:54:04 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 15:54:02 CST 2018]; root of context hierarchy
2018-08-09 15:54:04 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 15:54:04 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 15:54:04 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 15:54:04 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 15:54:04 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 15:54:04 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 15:54:04 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 15:54:04 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 15:54:04 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 15:54:04 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 15:54:04 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 15:54:04 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 15:54:04 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 15:54:04 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 15:54:04 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 15:54:04 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 15:54:04 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 15:54:04 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 15:54:04 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 15:54:04 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 15:54:04 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 15:54:04 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 15:54:04 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 15:54:04 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 15:54:04 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 15:54:04 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 15:54:04 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 15:54:04 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 15:54:04 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 15:54:04 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 15:54:04 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 15:54:04 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 15:54:04 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 15:54:04 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 15:54:04 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 15:54:04 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 15:54:04 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 15:54:04 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 15:54:04 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 15:54:04 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 15:54:04 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 15:54:04 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 15:54:04 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 15:54:04 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 15:54:04 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 15:54:04 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 15:54:04 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 15:54:04 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 15:54:04 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 15:54:04 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 15:54:05 -Using default implementation for ThreadExecutor
2018-08-09 15:54:05 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 15:54:05 -Quartz Scheduler v.2.2.1 created.
2018-08-09 15:54:05 -RAMJobStore initialized.
2018-08-09 15:54:05 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 15:54:05 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 15:54:05 -Quartz scheduler version: 2.2.1
2018-08-09 15:54:05 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@4eb9ae4d
2018-08-09 15:54:05 -Registering beans for JMX exposure on startup
2018-08-09 15:54:05 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 15:54:05 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 15:54:05 -Starting beans in phase 2147483647
2018-08-09 15:54:05 -Starting Quartz Scheduler now
2018-08-09 15:54:05 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 15:54:05 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 15:54:05 -Using a shared selector for servlet write/read
2018-08-09 15:54:05 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 15:54:05 -Started App in 3.513 seconds (JVM running for 4.157)
2018-08-09 15:54:06 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 15:54:06 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 15:54:06 -FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2018-08-09 15:54:06 -Enabling session validation scheduler...
2018-08-09 15:54:06 -请求地址 : http://localhost:8000/index
2018-08-09 15:54:06 -HTTP METHOD : GET
2018-08-09 15:54:06 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 15:54:06 -参数 : [{}]
2018-08-09 15:54:06 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 15:54:06 -==> Parameters: 1(Long)
2018-08-09 15:54:06 -<==      Total: 28
2018-08-09 15:54:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 15:54:06 -==> Parameters: 142(Long)
2018-08-09 15:54:06 -<==      Total: 1
2018-08-09 15:54:06 -耗时 : 96
2018-08-09 15:54:06 -返回值 : index_v1
2018-08-09 15:54:07 -请求地址 : http://localhost:8000/main
2018-08-09 15:54:07 -HTTP METHOD : GET
2018-08-09 15:54:07 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 15:54:07 -参数 : []
2018-08-09 15:54:07 -耗时 : 1
2018-08-09 15:54:07 -返回值 : main
2018-08-09 15:54:07 -请求地址 : http://localhost:8000/main
2018-08-09 15:54:07 -HTTP METHOD : GET
2018-08-09 15:54:07 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 15:54:07 -参数 : []
2018-08-09 15:54:07 -耗时 : 0
2018-08-09 15:54:07 -返回值 : main
2018-08-09 15:54:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:54:10 -请求地址 : http://localhost:8000/sys/user/
2018-08-09 15:54:10 -HTTP METHOD : GET
2018-08-09 15:54:10 -CLASS_METHOD : com.zhy.management.system.controller.UserController.user
2018-08-09 15:54:10 -参数 : [{}]
2018-08-09 15:54:10 -耗时 : 0
2018-08-09 15:54:10 -返回值 : system/user/user
2018-08-09 15:54:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:54:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:54:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:54:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:54:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:54:10 -请求地址 : http://localhost:8000/system/sysDept/tree
2018-08-09 15:54:10 -HTTP METHOD : GET
2018-08-09 15:54:10 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.tree
2018-08-09 15:54:10 -参数 : []
2018-08-09 15:54:10 -请求地址 : http://localhost:8000/sys/user/list
2018-08-09 15:54:10 -HTTP METHOD : GET
2018-08-09 15:54:10 -CLASS_METHOD : com.zhy.management.system.controller.UserController.list
2018-08-09 15:54:10 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-08-09 15:54:11 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-08-09 15:54:11 -==> Parameters: 0(Integer), 10(Integer)
2018-08-09 15:54:11 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 15:54:11 -==> Parameters: 
2018-08-09 15:54:11 -<==      Total: 7
2018-08-09 15:54:11 -<==      Total: 12
2018-08-09 15:54:11 -耗时 : 26
2018-08-09 15:54:11 -==>  Preparing: select count(*) from sys_user 
2018-08-09 15:54:11 -==> Parameters: 
2018-08-09 15:54:11 -<==      Total: 1
2018-08-09 15:54:11 -耗时 : 21
2018-08-09 15:54:11 -返回值 : com.zhy.management.common.utils.PageUtils@cf6335b
2018-08-09 15:54:11 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"18","parentId":"13","state":{"opened":true},"text":"hahaha"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"人事"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"自然的恩典"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"福慧学院"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"17","parentId":"9","state":{"opened":true},"text":"人事"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"信息"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"总部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"视频部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"德养"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-08-09 15:54:15 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:54:15 -请求地址 : http://localhost:8000/sys/menu/
2018-08-09 15:54:15 -HTTP METHOD : GET
2018-08-09 15:54:15 -CLASS_METHOD : com.zhy.management.system.controller.MenuController.menu
2018-08-09 15:54:15 -参数 : [{}]
2018-08-09 15:54:15 -耗时 : 0
2018-08-09 15:54:15 -返回值 : system/menu/menu
2018-08-09 15:54:15 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:54:15 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:54:15 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:54:15 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:54:15 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:54:15 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:54:15 -请求地址 : http://localhost:8000/sys/menu/list
2018-08-09 15:54:15 -HTTP METHOD : GET
2018-08-09 15:54:15 -CLASS_METHOD : com.zhy.management.system.controller.MenuController.list
2018-08-09 15:54:15 -参数 : [{sort=order_num}]
2018-08-09 15:54:15 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-08-09 15:54:15 -==> Parameters: 
2018-08-09 15:54:15 -<==      Total: 63
2018-08-09 15:54:15 -耗时 : 17
2018-08-09 15:54:15 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=94, parentId=93, name='模型管理', url='activiti/model', perms='', type=1, icon='fa fa-sort-amount-asc', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=96, parentId=93, name='流程管理', url='activiti/process', perms='', type=1, icon='fa fa-flag', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=101, parentId=93, name='待办任务', url='activiti/task/todo', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=77, name='swagger', url='/swagger-ui.html', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='hahaha', url='null', perms='a', type=0, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=0, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=68, parentId=49, name='发布文章', url='/blog/bContent/add', perms='blog:bContent:add', type=1, icon='fa fa-edit', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=50, parentId=49, name='文章列表', url='blog/bContent', perms='blog:bContent:bContent', type=1, icon='fa fa-file-image-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='common/generator', perms='common:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='部门管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计划任务', url='common/job', perms='common:taskScheduleJob', type=1, icon='fa fa-hourglass-1', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=49, parentId=0, name='博客管理', url='', perms='', type=0, icon='fa fa-rss', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=93, parentId=0, name='工作流程', url='', perms='', type=0, icon='fa fa-print', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='图表管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=7, gmtCreate=null, gmtModified=null}]
2018-08-09 15:54:24 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:54:24 -请求地址 : http://localhost:8000/system/sysDept
2018-08-09 15:54:24 -HTTP METHOD : GET
2018-08-09 15:54:24 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.dept
2018-08-09 15:54:24 -参数 : []
2018-08-09 15:54:24 -耗时 : 0
2018-08-09 15:54:24 -返回值 : system/dept/dept
2018-08-09 15:54:24 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:54:24 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:54:24 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:54:24 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:54:24 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:54:24 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:54:24 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 15:54:24 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 15:54:24 -HTTP METHOD : GET
2018-08-09 15:54:24 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 15:54:24 -参数 : []
2018-08-09 15:54:24 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 15:54:24 -==> Parameters: 
2018-08-09 15:54:24 -<==      Total: 12
2018-08-09 15:54:24 -耗时 : 3
2018-08-09 15:54:24 -返回值 : [DeptDO{deptId=18, parentId=13, name='hahaha', orderNum=null, delFlag=null}, DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 16:10:17 -Starting App on zhy with PID 10724 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 16:10:17 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 16:10:17 -The following profiles are active: dev
2018-08-09 16:10:18 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 16:10:18 CST 2018]; root of context hierarchy
2018-08-09 16:10:18 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 16:10:18 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f441b3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:10:18 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f0981fcf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:10:18 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:10:19 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:10:19 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 16:10:19 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:10:19 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:10:19 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:10:19 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:10:19 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:10:19 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 16:10:19 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 16:10:19 -Starting service [Tomcat]
2018-08-09 16:10:19 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 16:10:19 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 16:10:19 -Initializing Spring embedded WebApplicationContext
2018-08-09 16:10:19 -Root WebApplicationContext: initialization completed in 1318 ms
2018-08-09 16:10:19 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 16:10:19 -Servlet dispatcherServlet mapped to [/]
2018-08-09 16:10:19 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 16:10:19 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 16:10:19 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 16:10:19 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 16:10:19 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 16:10:19 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 16:10:19 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 16:10:18 CST 2018]; root of context hierarchy
2018-08-09 16:10:19 -{dataSource-1} inited
2018-08-09 16:10:20 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 16:10:20 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 16:10:20 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 16:10:18 CST 2018]; root of context hierarchy
2018-08-09 16:10:20 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 16:10:20 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 16:10:20 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 16:10:20 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 16:10:20 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 16:10:20 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 16:10:20 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 16:10:20 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 16:10:20 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 16:10:20 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 16:10:20 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 16:10:20 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 16:10:20 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 16:10:20 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 16:10:20 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 16:10:20 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 16:10:20 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 16:10:20 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 16:10:20 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 16:10:20 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 16:10:20 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 16:10:20 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 16:10:20 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 16:10:20 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 16:10:20 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 16:10:20 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 16:10:20 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 16:10:20 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 16:10:20 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 16:10:20 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 16:10:20 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 16:10:20 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 16:10:20 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 16:10:20 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 16:10:20 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 16:10:20 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 16:10:20 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 16:10:20 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 16:10:20 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 16:10:20 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 16:10:20 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 16:10:20 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 16:10:20 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 16:10:20 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 16:10:20 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 16:10:20 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 16:10:20 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 16:10:20 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 16:10:20 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 16:10:20 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 16:10:20 -Using default implementation for ThreadExecutor
2018-08-09 16:10:21 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 16:10:21 -Quartz Scheduler v.2.2.1 created.
2018-08-09 16:10:21 -RAMJobStore initialized.
2018-08-09 16:10:21 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 16:10:21 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 16:10:21 -Quartz scheduler version: 2.2.1
2018-08-09 16:10:21 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@ad3f70a
2018-08-09 16:10:21 -Registering beans for JMX exposure on startup
2018-08-09 16:10:21 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 16:10:21 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 16:10:21 -Starting beans in phase 2147483647
2018-08-09 16:10:21 -Starting Quartz Scheduler now
2018-08-09 16:10:21 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 16:10:21 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 16:10:21 -Using a shared selector for servlet write/read
2018-08-09 16:10:21 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 16:10:21 -Started App in 3.457 seconds (JVM running for 4.028)
2018-08-09 16:10:22 -Starting App on zhy with PID 10048 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 16:10:22 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 16:10:22 -The following profiles are active: dev
2018-08-09 16:10:22 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 16:10:22 CST 2018]; root of context hierarchy
2018-08-09 16:10:23 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 16:10:23 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f441b3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:10:23 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f0981fcf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:10:23 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:10:23 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:10:23 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 16:10:23 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:10:23 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:10:23 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:10:23 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:10:23 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:10:24 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 16:10:24 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 16:10:24 -Starting service [Tomcat]
2018-08-09 16:10:24 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 16:10:24 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 16:10:24 -Initializing Spring embedded WebApplicationContext
2018-08-09 16:10:24 -Root WebApplicationContext: initialization completed in 1350 ms
2018-08-09 16:10:24 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 16:10:24 -Servlet dispatcherServlet mapped to [/]
2018-08-09 16:10:24 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 16:10:24 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 16:10:24 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 16:10:24 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 16:10:24 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 16:10:24 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 16:10:24 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 16:10:22 CST 2018]; root of context hierarchy
2018-08-09 16:10:24 -{dataSource-1} inited
2018-08-09 16:10:25 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 16:10:25 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 16:10:25 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 16:10:22 CST 2018]; root of context hierarchy
2018-08-09 16:10:25 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 16:10:25 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 16:10:25 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 16:10:25 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 16:10:25 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 16:10:25 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 16:10:25 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 16:10:25 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 16:10:25 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 16:10:25 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 16:10:25 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 16:10:25 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 16:10:25 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 16:10:25 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 16:10:25 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 16:10:25 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 16:10:25 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 16:10:25 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 16:10:25 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 16:10:25 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 16:10:25 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 16:10:25 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 16:10:25 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 16:10:25 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 16:10:25 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 16:10:25 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 16:10:25 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 16:10:25 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 16:10:25 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 16:10:25 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 16:10:25 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 16:10:25 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 16:10:25 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 16:10:25 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 16:10:25 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 16:10:25 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 16:10:25 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 16:10:25 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 16:10:25 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 16:10:25 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 16:10:25 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 16:10:25 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 16:10:25 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 16:10:25 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 16:10:25 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 16:10:25 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 16:10:25 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 16:10:25 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 16:10:25 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 16:10:25 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 16:10:25 -Using default implementation for ThreadExecutor
2018-08-09 16:10:25 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 16:10:25 -Quartz Scheduler v.2.2.1 created.
2018-08-09 16:10:25 -RAMJobStore initialized.
2018-08-09 16:10:25 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 16:10:25 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 16:10:25 -Quartz scheduler version: 2.2.1
2018-08-09 16:10:25 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@ad3f70a
2018-08-09 16:10:26 -Registering beans for JMX exposure on startup
2018-08-09 16:10:26 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 16:10:26 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 16:10:26 -Starting beans in phase 2147483647
2018-08-09 16:10:26 -Starting Quartz Scheduler now
2018-08-09 16:10:26 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 16:10:26 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 16:10:26 -Using a shared selector for servlet write/read
2018-08-09 16:10:26 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 16:10:26 -Started App in 3.526 seconds (JVM running for 4.166)
2018-08-09 16:10:26 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 16:10:26 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 16:10:26 -FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2018-08-09 16:10:26 -Enabling session validation scheduler...
2018-08-09 16:10:26 -请求地址 : http://localhost:8000/index
2018-08-09 16:10:26 -HTTP METHOD : GET
2018-08-09 16:10:26 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 16:10:26 -参数 : [{}]
2018-08-09 16:10:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 16:10:26 -==> Parameters: 1(Long)
2018-08-09 16:10:27 -<==      Total: 28
2018-08-09 16:10:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 16:10:27 -==> Parameters: 142(Long)
2018-08-09 16:10:27 -<==      Total: 1
2018-08-09 16:10:27 -耗时 : 96
2018-08-09 16:10:27 -返回值 : index_v1
2018-08-09 16:10:27 -请求地址 : http://localhost:8000/main
2018-08-09 16:10:27 -HTTP METHOD : GET
2018-08-09 16:10:27 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 16:10:27 -参数 : []
2018-08-09 16:10:27 -耗时 : 1
2018-08-09 16:10:27 -返回值 : main
2018-08-09 16:10:27 -请求地址 : http://localhost:8000/main
2018-08-09 16:10:27 -HTTP METHOD : GET
2018-08-09 16:10:27 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 16:10:27 -参数 : []
2018-08-09 16:10:27 -耗时 : 0
2018-08-09 16:10:27 -返回值 : main
2018-08-09 16:10:32 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:10:32 -请求地址 : http://localhost:8000/system/sysDept
2018-08-09 16:10:32 -HTTP METHOD : GET
2018-08-09 16:10:32 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.dept
2018-08-09 16:10:32 -参数 : []
2018-08-09 16:10:32 -耗时 : 0
2018-08-09 16:10:32 -返回值 : system/dept/dept
2018-08-09 16:10:32 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:10:32 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:10:32 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:10:32 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:10:32 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:10:32 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:10:32 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:10:32 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 16:10:32 -HTTP METHOD : GET
2018-08-09 16:10:32 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 16:10:32 -参数 : []
2018-08-09 16:10:32 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 16:10:32 -==> Parameters: 
2018-08-09 16:10:32 -<==      Total: 12
2018-08-09 16:10:32 -耗时 : 20
2018-08-09 16:10:32 -返回值 : [DeptDO{deptId=18, parentId=13, name='hahaha', orderNum=null, delFlag=null}, DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 16:11:22 -请求地址 : http://localhost:8000/index
2018-08-09 16:11:22 -HTTP METHOD : GET
2018-08-09 16:11:22 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 16:11:22 -参数 : [{}]
2018-08-09 16:11:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 16:11:22 -==> Parameters: 1(Long)
2018-08-09 16:11:22 -<==      Total: 28
2018-08-09 16:11:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 16:11:22 -==> Parameters: 142(Long)
2018-08-09 16:11:22 -<==      Total: 1
2018-08-09 16:11:22 -耗时 : 8
2018-08-09 16:11:22 -返回值 : index_v1
2018-08-09 16:11:22 -请求地址 : http://localhost:8000/main
2018-08-09 16:11:22 -HTTP METHOD : GET
2018-08-09 16:11:22 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 16:11:22 -参数 : []
2018-08-09 16:11:22 -耗时 : 0
2018-08-09 16:11:22 -返回值 : main
2018-08-09 16:11:22 -请求地址 : http://localhost:8000/main
2018-08-09 16:11:22 -HTTP METHOD : GET
2018-08-09 16:11:22 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 16:11:22 -参数 : []
2018-08-09 16:11:22 -耗时 : 1
2018-08-09 16:11:22 -返回值 : main
2018-08-09 16:11:27 -Starting App on zhy with PID 2408 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 16:11:27 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 16:11:27 -The following profiles are active: dev
2018-08-09 16:11:27 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 16:11:27 CST 2018]; root of context hierarchy
2018-08-09 16:11:28 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 16:11:28 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$532bf8fb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:11:28 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$347ffd8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:11:28 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:11:28 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:11:28 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 16:11:28 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:11:28 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:11:28 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:11:28 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:11:28 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:11:28 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 16:11:28 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 16:11:28 -Starting service [Tomcat]
2018-08-09 16:11:28 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 16:11:28 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 16:11:29 -Initializing Spring embedded WebApplicationContext
2018-08-09 16:11:29 -Root WebApplicationContext: initialization completed in 1286 ms
2018-08-09 16:11:29 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 16:11:29 -Servlet dispatcherServlet mapped to [/]
2018-08-09 16:11:29 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 16:11:29 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 16:11:29 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 16:11:29 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 16:11:29 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 16:11:29 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 16:11:29 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 16:11:27 CST 2018]; root of context hierarchy
2018-08-09 16:11:29 -{dataSource-1} inited
2018-08-09 16:11:29 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 16:11:29 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 16:11:30 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 16:11:27 CST 2018]; root of context hierarchy
2018-08-09 16:11:30 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 16:11:30 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 16:11:30 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 16:11:30 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 16:11:30 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 16:11:30 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 16:11:30 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 16:11:30 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 16:11:30 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 16:11:30 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 16:11:30 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 16:11:30 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 16:11:30 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 16:11:30 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 16:11:30 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 16:11:30 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 16:11:30 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 16:11:30 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 16:11:30 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 16:11:30 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 16:11:30 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 16:11:30 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 16:11:30 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 16:11:30 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 16:11:30 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 16:11:30 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 16:11:30 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 16:11:30 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 16:11:30 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 16:11:30 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 16:11:30 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 16:11:30 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 16:11:30 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 16:11:30 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 16:11:30 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 16:11:30 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 16:11:30 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 16:11:30 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 16:11:30 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 16:11:30 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 16:11:30 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 16:11:30 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 16:11:30 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 16:11:30 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 16:11:30 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 16:11:30 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 16:11:30 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 16:11:30 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 16:11:30 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 16:11:30 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 16:11:30 -Using default implementation for ThreadExecutor
2018-08-09 16:11:30 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 16:11:30 -Quartz Scheduler v.2.2.1 created.
2018-08-09 16:11:30 -RAMJobStore initialized.
2018-08-09 16:11:30 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 16:11:30 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 16:11:30 -Quartz scheduler version: 2.2.1
2018-08-09 16:11:30 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@ef86c72
2018-08-09 16:11:30 -Registering beans for JMX exposure on startup
2018-08-09 16:11:30 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 16:11:30 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 16:11:30 -Starting beans in phase 2147483647
2018-08-09 16:11:30 -Starting Quartz Scheduler now
2018-08-09 16:11:30 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 16:11:30 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 16:11:30 -Using a shared selector for servlet write/read
2018-08-09 16:11:30 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 16:11:30 -Started App in 3.39 seconds (JVM running for 3.955)
2018-08-09 16:11:30 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 16:11:30 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 16:11:30 -FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2018-08-09 16:11:30 -Enabling session validation scheduler...
2018-08-09 16:11:30 -请求地址 : http://localhost:8000/index
2018-08-09 16:11:30 -HTTP METHOD : GET
2018-08-09 16:11:30 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 16:11:30 -参数 : [{}]
2018-08-09 16:11:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 16:11:31 -==> Parameters: 1(Long)
2018-08-09 16:11:31 -<==      Total: 28
2018-08-09 16:11:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 16:11:31 -==> Parameters: 142(Long)
2018-08-09 16:11:31 -<==      Total: 1
2018-08-09 16:11:31 -耗时 : 94
2018-08-09 16:11:31 -返回值 : index_v1
2018-08-09 16:11:31 -请求地址 : http://localhost:8000/index
2018-08-09 16:11:31 -HTTP METHOD : GET
2018-08-09 16:11:31 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 16:11:31 -参数 : [{}]
2018-08-09 16:11:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 16:11:31 -==> Parameters: 1(Long)
2018-08-09 16:11:31 -<==      Total: 28
2018-08-09 16:11:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 16:11:31 -==> Parameters: 142(Long)
2018-08-09 16:11:31 -<==      Total: 1
2018-08-09 16:11:31 -耗时 : 9
2018-08-09 16:11:31 -返回值 : index_v1
2018-08-09 16:11:31 -请求地址 : http://localhost:8000/main
2018-08-09 16:11:31 -HTTP METHOD : GET
2018-08-09 16:11:31 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 16:11:31 -参数 : []
2018-08-09 16:11:31 -耗时 : 0
2018-08-09 16:11:31 -返回值 : main
2018-08-09 16:11:31 -请求地址 : http://localhost:8000/main
2018-08-09 16:11:31 -HTTP METHOD : GET
2018-08-09 16:11:31 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 16:11:31 -参数 : []
2018-08-09 16:11:31 -耗时 : 1
2018-08-09 16:11:31 -返回值 : main
2018-08-09 16:11:31 -请求地址 : http://localhost:8000/index
2018-08-09 16:11:31 -HTTP METHOD : GET
2018-08-09 16:11:31 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 16:11:31 -参数 : [{}]
2018-08-09 16:11:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 16:11:31 -==> Parameters: 1(Long)
2018-08-09 16:11:31 -<==      Total: 28
2018-08-09 16:11:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 16:11:31 -==> Parameters: 142(Long)
2018-08-09 16:11:31 -<==      Total: 1
2018-08-09 16:11:31 -耗时 : 7
2018-08-09 16:11:31 -返回值 : index_v1
2018-08-09 16:11:31 -请求地址 : http://localhost:8000/main
2018-08-09 16:11:31 -HTTP METHOD : GET
2018-08-09 16:11:31 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 16:11:31 -参数 : []
2018-08-09 16:11:31 -耗时 : 0
2018-08-09 16:11:31 -返回值 : main
2018-08-09 16:11:31 -请求地址 : http://localhost:8000/main
2018-08-09 16:11:31 -HTTP METHOD : GET
2018-08-09 16:11:31 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 16:11:31 -参数 : []
2018-08-09 16:11:31 -耗时 : 0
2018-08-09 16:11:31 -返回值 : main
2018-08-09 16:11:31 -请求地址 : http://localhost:8000/index
2018-08-09 16:11:31 -HTTP METHOD : GET
2018-08-09 16:11:31 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 16:11:31 -参数 : [{}]
2018-08-09 16:11:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 16:11:31 -==> Parameters: 1(Long)
2018-08-09 16:11:31 -<==      Total: 28
2018-08-09 16:11:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 16:11:31 -==> Parameters: 142(Long)
2018-08-09 16:11:31 -<==      Total: 1
2018-08-09 16:11:31 -耗时 : 7
2018-08-09 16:11:31 -返回值 : index_v1
2018-08-09 16:11:31 -请求地址 : http://localhost:8000/main
2018-08-09 16:11:31 -HTTP METHOD : GET
2018-08-09 16:11:31 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 16:11:31 -参数 : []
2018-08-09 16:11:31 -耗时 : 1
2018-08-09 16:11:31 -返回值 : main
2018-08-09 16:11:31 -请求地址 : http://localhost:8000/main
2018-08-09 16:11:31 -HTTP METHOD : GET
2018-08-09 16:11:31 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 16:11:31 -参数 : []
2018-08-09 16:11:31 -耗时 : 0
2018-08-09 16:11:31 -返回值 : main
2018-08-09 16:11:31 -请求地址 : http://localhost:8000/index
2018-08-09 16:11:31 -HTTP METHOD : GET
2018-08-09 16:11:31 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 16:11:31 -参数 : [{}]
2018-08-09 16:11:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 16:11:31 -==> Parameters: 1(Long)
2018-08-09 16:11:31 -<==      Total: 28
2018-08-09 16:11:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 16:11:31 -==> Parameters: 142(Long)
2018-08-09 16:11:31 -<==      Total: 1
2018-08-09 16:11:31 -耗时 : 7
2018-08-09 16:11:31 -返回值 : index_v1
2018-08-09 16:11:31 -请求地址 : http://localhost:8000/main
2018-08-09 16:11:31 -HTTP METHOD : GET
2018-08-09 16:11:31 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 16:11:31 -参数 : []
2018-08-09 16:11:31 -耗时 : 0
2018-08-09 16:11:31 -返回值 : main
2018-08-09 16:11:31 -请求地址 : http://localhost:8000/main
2018-08-09 16:11:31 -HTTP METHOD : GET
2018-08-09 16:11:31 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 16:11:31 -参数 : []
2018-08-09 16:11:31 -耗时 : 0
2018-08-09 16:11:31 -返回值 : main
2018-08-09 16:11:32 -请求地址 : http://localhost:8000/index
2018-08-09 16:11:32 -HTTP METHOD : GET
2018-08-09 16:11:32 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 16:11:32 -参数 : [{}]
2018-08-09 16:11:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 16:11:32 -==> Parameters: 1(Long)
2018-08-09 16:11:32 -<==      Total: 28
2018-08-09 16:11:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 16:11:32 -==> Parameters: 142(Long)
2018-08-09 16:11:32 -<==      Total: 1
2018-08-09 16:11:32 -耗时 : 6
2018-08-09 16:11:32 -返回值 : index_v1
2018-08-09 16:11:32 -请求地址 : http://localhost:8000/main
2018-08-09 16:11:32 -HTTP METHOD : GET
2018-08-09 16:11:32 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 16:11:32 -参数 : []
2018-08-09 16:11:32 -耗时 : 1
2018-08-09 16:11:32 -返回值 : main
2018-08-09 16:11:32 -请求地址 : http://localhost:8000/main
2018-08-09 16:11:32 -HTTP METHOD : GET
2018-08-09 16:11:32 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 16:11:32 -参数 : []
2018-08-09 16:11:32 -耗时 : 0
2018-08-09 16:11:32 -返回值 : main
2018-08-09 16:11:32 -请求地址 : http://localhost:8000/index
2018-08-09 16:11:32 -HTTP METHOD : GET
2018-08-09 16:11:32 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 16:11:32 -参数 : [{}]
2018-08-09 16:11:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 16:11:32 -==> Parameters: 1(Long)
2018-08-09 16:11:32 -<==      Total: 28
2018-08-09 16:11:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 16:11:32 -==> Parameters: 142(Long)
2018-08-09 16:11:32 -<==      Total: 1
2018-08-09 16:11:32 -耗时 : 10
2018-08-09 16:11:32 -返回值 : index_v1
2018-08-09 16:11:32 -请求地址 : http://localhost:8000/main
2018-08-09 16:11:32 -HTTP METHOD : GET
2018-08-09 16:11:32 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 16:11:32 -参数 : []
2018-08-09 16:11:32 -耗时 : 1
2018-08-09 16:11:32 -返回值 : main
2018-08-09 16:11:32 -请求地址 : http://localhost:8000/main
2018-08-09 16:11:32 -HTTP METHOD : GET
2018-08-09 16:11:32 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 16:11:32 -参数 : []
2018-08-09 16:11:32 -耗时 : 0
2018-08-09 16:11:32 -返回值 : main
2018-08-09 16:11:32 -请求地址 : http://localhost:8000/index
2018-08-09 16:11:32 -HTTP METHOD : GET
2018-08-09 16:11:32 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 16:11:32 -参数 : [{}]
2018-08-09 16:11:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 16:11:32 -==> Parameters: 1(Long)
2018-08-09 16:11:32 -<==      Total: 28
2018-08-09 16:11:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 16:11:32 -==> Parameters: 142(Long)
2018-08-09 16:11:32 -<==      Total: 1
2018-08-09 16:11:32 -耗时 : 7
2018-08-09 16:11:32 -返回值 : index_v1
2018-08-09 16:11:32 -请求地址 : http://localhost:8000/main
2018-08-09 16:11:32 -HTTP METHOD : GET
2018-08-09 16:11:32 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 16:11:32 -参数 : []
2018-08-09 16:11:32 -耗时 : 0
2018-08-09 16:11:32 -返回值 : main
2018-08-09 16:11:32 -请求地址 : http://localhost:8000/main
2018-08-09 16:11:32 -HTTP METHOD : GET
2018-08-09 16:11:32 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 16:11:32 -参数 : []
2018-08-09 16:11:32 -耗时 : 0
2018-08-09 16:11:32 -返回值 : main
2018-08-09 16:11:33 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:11:33 -请求地址 : http://localhost:8000/system/sysDept
2018-08-09 16:11:33 -HTTP METHOD : GET
2018-08-09 16:11:33 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.dept
2018-08-09 16:11:33 -参数 : []
2018-08-09 16:11:33 -耗时 : 0
2018-08-09 16:11:33 -返回值 : system/dept/dept
2018-08-09 16:11:33 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:11:33 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:11:33 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:11:33 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:11:33 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:11:33 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:11:33 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:11:33 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 16:11:33 -HTTP METHOD : GET
2018-08-09 16:11:33 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 16:11:33 -参数 : []
2018-08-09 16:11:33 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 16:11:33 -==> Parameters: 
2018-08-09 16:11:33 -<==      Total: 12
2018-08-09 16:11:33 -耗时 : 15
2018-08-09 16:11:33 -返回值 : [DeptDO{deptId=18, parentId=13, name='hahaha', orderNum=null, delFlag=null}, DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 16:11:53 -Starting App on zhy with PID 7144 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 16:11:53 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 16:11:53 -The following profiles are active: dev
2018-08-09 16:11:53 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 16:11:53 CST 2018]; root of context hierarchy
2018-08-09 16:11:53 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 16:11:53 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6120f87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:11:54 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$e7661417] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:11:54 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:11:54 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:11:54 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 16:11:54 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:11:54 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:11:54 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:11:54 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:11:54 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:11:54 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 16:11:54 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 16:11:54 -Starting service [Tomcat]
2018-08-09 16:11:54 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 16:11:54 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 16:11:54 -Initializing Spring embedded WebApplicationContext
2018-08-09 16:11:54 -Root WebApplicationContext: initialization completed in 1294 ms
2018-08-09 16:11:54 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 16:11:54 -Servlet dispatcherServlet mapped to [/]
2018-08-09 16:11:54 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 16:11:54 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 16:11:54 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 16:11:54 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 16:11:54 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 16:11:54 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 16:11:54 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 16:11:53 CST 2018]; root of context hierarchy
2018-08-09 16:11:54 -{dataSource-1} inited
2018-08-09 16:11:55 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 16:11:55 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 16:11:55 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 16:11:53 CST 2018]; root of context hierarchy
2018-08-09 16:11:55 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 16:11:55 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 16:11:55 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 16:11:55 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 16:11:55 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 16:11:55 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 16:11:55 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 16:11:55 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 16:11:55 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 16:11:55 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 16:11:55 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 16:11:55 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 16:11:55 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 16:11:55 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 16:11:55 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 16:11:55 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 16:11:55 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 16:11:55 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 16:11:55 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 16:11:55 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 16:11:55 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 16:11:55 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 16:11:55 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 16:11:55 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 16:11:55 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 16:11:55 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 16:11:55 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 16:11:55 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 16:11:55 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 16:11:55 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 16:11:55 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 16:11:55 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 16:11:55 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 16:11:55 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 16:11:55 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 16:11:55 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 16:11:55 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 16:11:55 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 16:11:55 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 16:11:55 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 16:11:55 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 16:11:55 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 16:11:55 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 16:11:55 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 16:11:55 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 16:11:55 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 16:11:55 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 16:11:55 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 16:11:55 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 16:11:55 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 16:11:56 -Using default implementation for ThreadExecutor
2018-08-09 16:11:56 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 16:11:56 -Quartz Scheduler v.2.2.1 created.
2018-08-09 16:11:56 -RAMJobStore initialized.
2018-08-09 16:11:56 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 16:11:56 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 16:11:56 -Quartz scheduler version: 2.2.1
2018-08-09 16:11:56 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@4eb9ae4d
2018-08-09 16:11:56 -Registering beans for JMX exposure on startup
2018-08-09 16:11:56 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 16:11:56 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 16:11:56 -Starting beans in phase 2147483647
2018-08-09 16:11:56 -Starting Quartz Scheduler now
2018-08-09 16:11:56 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 16:11:56 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 16:11:56 -Using a shared selector for servlet write/read
2018-08-09 16:11:56 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 16:11:56 -Started App in 3.364 seconds (JVM running for 3.953)
2018-08-09 16:12:02 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 16:12:02 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 16:12:02 -FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
2018-08-09 16:12:02 -Enabling session validation scheduler...
2018-08-09 16:12:02 -请求地址 : http://localhost:8000/index
2018-08-09 16:12:02 -HTTP METHOD : GET
2018-08-09 16:12:02 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 16:12:02 -参数 : [{}]
2018-08-09 16:12:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 16:12:02 -==> Parameters: 1(Long)
2018-08-09 16:12:02 -<==      Total: 28
2018-08-09 16:12:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 16:12:02 -==> Parameters: 142(Long)
2018-08-09 16:12:02 -<==      Total: 1
2018-08-09 16:12:02 -耗时 : 95
2018-08-09 16:12:02 -返回值 : index_v1
2018-08-09 16:12:02 -请求地址 : http://localhost:8000/main
2018-08-09 16:12:02 -HTTP METHOD : GET
2018-08-09 16:12:02 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 16:12:02 -参数 : []
2018-08-09 16:12:02 -耗时 : 1
2018-08-09 16:12:02 -返回值 : main
2018-08-09 16:12:02 -请求地址 : http://localhost:8000/main
2018-08-09 16:12:02 -HTTP METHOD : GET
2018-08-09 16:12:02 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 16:12:02 -参数 : []
2018-08-09 16:12:02 -耗时 : 1
2018-08-09 16:12:02 -返回值 : main
2018-08-09 16:12:04 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:12:04 -请求地址 : http://localhost:8000/system/sysDept
2018-08-09 16:12:04 -HTTP METHOD : GET
2018-08-09 16:12:04 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.dept
2018-08-09 16:12:04 -参数 : []
2018-08-09 16:12:04 -耗时 : 0
2018-08-09 16:12:04 -返回值 : system/dept/dept
2018-08-09 16:12:04 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:12:04 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:12:04 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:12:04 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:12:04 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:12:04 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:12:04 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:12:04 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 16:12:04 -HTTP METHOD : GET
2018-08-09 16:12:04 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 16:12:04 -参数 : []
2018-08-09 16:12:04 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 16:12:04 -==> Parameters: 
2018-08-09 16:12:04 -<==      Total: 12
2018-08-09 16:12:04 -耗时 : 15
2018-08-09 16:12:04 -返回值 : [DeptDO{deptId=18, parentId=13, name='hahaha', orderNum=null, delFlag=null}, DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 16:12:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:12:11 -请求地址 : http://localhost:8000/system/sysDept/add/0
2018-08-09 16:12:11 -HTTP METHOD : GET
2018-08-09 16:12:11 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.add
2018-08-09 16:12:11 -参数 : [0, {}]
2018-08-09 16:12:11 -耗时 : 0
2018-08-09 16:12:11 -返回值 : system/dept/add
2018-08-09 16:15:00 -Starting App on zhy with PID 17708 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 16:15:00 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 16:15:00 -The following profiles are active: dev
2018-08-09 16:15:00 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 16:15:00 CST 2018]; root of context hierarchy
2018-08-09 16:15:01 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 16:15:01 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$16c0afd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:15:01 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$e2c00f8d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:15:01 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:15:01 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:15:01 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 16:15:01 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:15:01 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:15:01 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:15:01 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:15:01 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:15:01 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 16:15:01 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 16:15:01 -Starting service [Tomcat]
2018-08-09 16:15:01 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 16:15:01 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 16:15:01 -Initializing Spring embedded WebApplicationContext
2018-08-09 16:15:01 -Root WebApplicationContext: initialization completed in 1327 ms
2018-08-09 16:15:02 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 16:15:02 -Servlet dispatcherServlet mapped to [/]
2018-08-09 16:15:02 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 16:15:02 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 16:15:02 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 16:15:02 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 16:15:02 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 16:15:02 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 16:15:02 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 16:15:00 CST 2018]; root of context hierarchy
2018-08-09 16:15:02 -{dataSource-1} inited
2018-08-09 16:15:02 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 16:15:02 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 16:15:02 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 16:15:00 CST 2018]; root of context hierarchy
2018-08-09 16:15:03 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 16:15:03 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 16:15:03 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 16:15:03 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 16:15:03 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 16:15:03 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 16:15:03 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 16:15:03 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 16:15:03 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 16:15:03 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 16:15:03 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 16:15:03 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 16:15:03 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 16:15:03 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 16:15:03 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 16:15:03 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 16:15:03 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 16:15:03 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 16:15:03 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 16:15:03 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 16:15:03 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 16:15:03 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 16:15:03 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 16:15:03 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 16:15:03 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 16:15:03 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 16:15:03 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 16:15:03 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 16:15:03 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 16:15:03 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 16:15:03 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 16:15:03 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 16:15:03 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 16:15:03 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 16:15:03 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 16:15:03 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 16:15:03 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 16:15:03 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 16:15:03 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 16:15:03 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 16:15:03 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 16:15:03 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 16:15:03 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 16:15:03 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 16:15:03 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 16:15:03 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 16:15:03 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 16:15:03 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 16:15:03 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 16:15:03 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 16:15:03 -Using default implementation for ThreadExecutor
2018-08-09 16:15:03 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 16:15:03 -Quartz Scheduler v.2.2.1 created.
2018-08-09 16:15:03 -RAMJobStore initialized.
2018-08-09 16:15:03 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 16:15:03 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 16:15:03 -Quartz scheduler version: 2.2.1
2018-08-09 16:15:03 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@7761e342
2018-08-09 16:15:03 -Registering beans for JMX exposure on startup
2018-08-09 16:15:03 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 16:15:03 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 16:15:03 -Starting beans in phase 2147483647
2018-08-09 16:15:03 -Starting Quartz Scheduler now
2018-08-09 16:15:03 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 16:15:03 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 16:15:03 -Using a shared selector for servlet write/read
2018-08-09 16:15:03 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 16:15:03 -Started App in 3.43 seconds (JVM running for 3.978)
2018-08-09 16:15:11 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 16:15:11 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 16:15:11 -FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2018-08-09 16:15:11 -Enabling session validation scheduler...
2018-08-09 16:15:11 -请求地址 : http://localhost:8000/index
2018-08-09 16:15:11 -HTTP METHOD : GET
2018-08-09 16:15:11 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 16:15:11 -参数 : [{}]
2018-08-09 16:15:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 16:15:11 -==> Parameters: 1(Long)
2018-08-09 16:15:11 -<==      Total: 28
2018-08-09 16:15:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 16:15:11 -==> Parameters: 142(Long)
2018-08-09 16:15:11 -<==      Total: 1
2018-08-09 16:15:11 -耗时 : 91
2018-08-09 16:15:11 -返回值 : index_v1
2018-08-09 16:15:11 -请求地址 : http://localhost:8000/main
2018-08-09 16:15:11 -HTTP METHOD : GET
2018-08-09 16:15:11 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 16:15:11 -参数 : []
2018-08-09 16:15:11 -耗时 : 1
2018-08-09 16:15:11 -返回值 : main
2018-08-09 16:15:11 -请求地址 : http://localhost:8000/main
2018-08-09 16:15:11 -HTTP METHOD : GET
2018-08-09 16:15:11 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 16:15:11 -参数 : []
2018-08-09 16:15:11 -耗时 : 1
2018-08-09 16:15:11 -返回值 : main
2018-08-09 16:15:13 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:15:13 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-08-09 16:15:13 -==> Parameters: 1(Long)
2018-08-09 16:15:13 -<==      Total: 47
2018-08-09 16:15:13 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:15:13 -请求地址 : http://localhost:8000/system/sysDept
2018-08-09 16:15:13 -HTTP METHOD : GET
2018-08-09 16:15:13 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.dept
2018-08-09 16:15:13 -参数 : []
2018-08-09 16:15:13 -耗时 : 0
2018-08-09 16:15:13 -返回值 : system/dept/dept
2018-08-09 16:15:13 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:15:13 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:15:13 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:15:13 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:15:13 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:15:13 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:15:13 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:15:13 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 16:15:13 -HTTP METHOD : GET
2018-08-09 16:15:13 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 16:15:13 -参数 : []
2018-08-09 16:15:13 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 16:15:13 -==> Parameters: 
2018-08-09 16:15:13 -<==      Total: 12
2018-08-09 16:15:13 -耗时 : 17
2018-08-09 16:15:13 -返回值 : [DeptDO{deptId=18, parentId=13, name='hahaha', orderNum=null, delFlag=null}, DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 16:17:06 -请求地址 : http://localhost:8000/index
2018-08-09 16:17:06 -HTTP METHOD : GET
2018-08-09 16:17:06 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 16:17:06 -参数 : [{}]
2018-08-09 16:17:06 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 16:17:06 -==> Parameters: 1(Long)
2018-08-09 16:17:06 -<==      Total: 28
2018-08-09 16:17:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 16:17:06 -==> Parameters: 142(Long)
2018-08-09 16:17:06 -<==      Total: 1
2018-08-09 16:17:06 -耗时 : 8
2018-08-09 16:17:06 -返回值 : index_v1
2018-08-09 16:17:06 -请求地址 : http://localhost:8000/main
2018-08-09 16:17:06 -HTTP METHOD : GET
2018-08-09 16:17:06 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 16:17:06 -参数 : []
2018-08-09 16:17:06 -耗时 : 0
2018-08-09 16:17:06 -返回值 : main
2018-08-09 16:17:06 -请求地址 : http://localhost:8000/main
2018-08-09 16:17:06 -HTTP METHOD : GET
2018-08-09 16:17:06 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 16:17:06 -参数 : []
2018-08-09 16:17:06 -耗时 : 1
2018-08-09 16:17:06 -返回值 : main
2018-08-09 16:17:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:17:09 -请求地址 : http://localhost:8000/system/sysDept
2018-08-09 16:17:09 -HTTP METHOD : GET
2018-08-09 16:17:09 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.dept
2018-08-09 16:17:09 -参数 : []
2018-08-09 16:17:09 -耗时 : 0
2018-08-09 16:17:09 -返回值 : system/dept/dept
2018-08-09 16:17:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:17:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:17:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:17:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:17:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:17:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:17:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:17:09 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 16:17:09 -HTTP METHOD : GET
2018-08-09 16:17:09 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 16:17:09 -参数 : []
2018-08-09 16:17:09 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 16:17:09 -==> Parameters: 
2018-08-09 16:17:09 -<==      Total: 12
2018-08-09 16:17:09 -耗时 : 4
2018-08-09 16:17:09 -返回值 : [DeptDO{deptId=18, parentId=13, name='hahaha', orderNum=null, delFlag=null}, DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 16:18:02 -Starting App on zhy with PID 18880 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 16:18:02 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 16:18:02 -The following profiles are active: dev
2018-08-09 16:18:02 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 16:18:02 CST 2018]; root of context hierarchy
2018-08-09 16:18:02 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 16:18:03 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$532bf8fb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:18:03 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$347ffd8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:18:03 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:18:03 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:18:03 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 16:18:03 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:18:03 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:18:03 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:18:03 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:18:03 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 16:18:03 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 16:18:03 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 16:18:03 -Starting service [Tomcat]
2018-08-09 16:18:03 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 16:18:03 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 16:18:03 -Initializing Spring embedded WebApplicationContext
2018-08-09 16:18:03 -Root WebApplicationContext: initialization completed in 1299 ms
2018-08-09 16:18:04 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 16:18:04 -Servlet dispatcherServlet mapped to [/]
2018-08-09 16:18:04 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 16:18:04 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 16:18:04 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 16:18:04 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 16:18:04 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 16:18:04 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 16:18:04 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 16:18:02 CST 2018]; root of context hierarchy
2018-08-09 16:18:04 -{dataSource-1} inited
2018-08-09 16:18:04 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 16:18:04 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 16:18:04 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 16:18:02 CST 2018]; root of context hierarchy
2018-08-09 16:18:04 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 16:18:04 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 16:18:04 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 16:18:04 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 16:18:04 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 16:18:04 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 16:18:04 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 16:18:04 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 16:18:04 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 16:18:04 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 16:18:04 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 16:18:04 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 16:18:04 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 16:18:04 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 16:18:04 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 16:18:04 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 16:18:04 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 16:18:04 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 16:18:04 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 16:18:04 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 16:18:04 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 16:18:04 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 16:18:04 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 16:18:04 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 16:18:04 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 16:18:04 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 16:18:04 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 16:18:04 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 16:18:04 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 16:18:04 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 16:18:04 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 16:18:04 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 16:18:04 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 16:18:04 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 16:18:04 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 16:18:04 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 16:18:04 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 16:18:04 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 16:18:04 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 16:18:04 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 16:18:04 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 16:18:04 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 16:18:04 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 16:18:04 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 16:18:04 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 16:18:04 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 16:18:05 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 16:18:05 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 16:18:05 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 16:18:05 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 16:18:05 -Using default implementation for ThreadExecutor
2018-08-09 16:18:05 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 16:18:05 -Quartz Scheduler v.2.2.1 created.
2018-08-09 16:18:05 -RAMJobStore initialized.
2018-08-09 16:18:05 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 16:18:05 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 16:18:05 -Quartz scheduler version: 2.2.1
2018-08-09 16:18:05 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@47058864
2018-08-09 16:18:05 -Registering beans for JMX exposure on startup
2018-08-09 16:18:05 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 16:18:05 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 16:18:05 -Starting beans in phase 2147483647
2018-08-09 16:18:05 -Starting Quartz Scheduler now
2018-08-09 16:18:05 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 16:18:05 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 16:18:05 -Using a shared selector for servlet write/read
2018-08-09 16:18:05 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 16:18:05 -Started App in 3.352 seconds (JVM running for 3.961)
2018-08-09 16:18:14 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 16:18:14 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 16:18:14 -FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2018-08-09 16:18:14 -Enabling session validation scheduler...
2018-08-09 16:18:14 -请求地址 : http://localhost:8000/index
2018-08-09 16:18:14 -HTTP METHOD : GET
2018-08-09 16:18:14 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 16:18:14 -参数 : [{}]
2018-08-09 16:18:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 16:18:14 -==> Parameters: 1(Long)
2018-08-09 16:18:14 -<==      Total: 28
2018-08-09 16:18:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 16:18:14 -==> Parameters: 142(Long)
2018-08-09 16:18:14 -<==      Total: 1
2018-08-09 16:18:14 -耗时 : 95
2018-08-09 16:18:14 -返回值 : index_v1
2018-08-09 16:18:14 -请求地址 : http://localhost:8000/main
2018-08-09 16:18:14 -HTTP METHOD : GET
2018-08-09 16:18:14 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 16:18:14 -参数 : []
2018-08-09 16:18:14 -耗时 : 0
2018-08-09 16:18:14 -返回值 : main
2018-08-09 16:18:14 -请求地址 : http://localhost:8000/main
2018-08-09 16:18:14 -HTTP METHOD : GET
2018-08-09 16:18:14 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 16:18:14 -参数 : []
2018-08-09 16:18:14 -耗时 : 1
2018-08-09 16:18:14 -返回值 : main
2018-08-09 16:18:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:18:17 -请求地址 : http://localhost:8000/system/sysDept
2018-08-09 16:18:17 -HTTP METHOD : GET
2018-08-09 16:18:17 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.dept
2018-08-09 16:18:17 -参数 : []
2018-08-09 16:18:17 -耗时 : 0
2018-08-09 16:18:17 -返回值 : system/dept/dept
2018-08-09 16:18:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:18:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:18:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:18:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:18:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:18:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:18:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 16:18:17 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 16:18:17 -HTTP METHOD : GET
2018-08-09 16:18:17 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 16:18:17 -参数 : []
2018-08-09 16:18:17 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 16:18:17 -==> Parameters: 
2018-08-09 16:18:17 -<==      Total: 12
2018-08-09 16:18:17 -耗时 : 16
2018-08-09 16:18:17 -返回值 : [DeptDO{deptId=18, parentId=13, name='hahaha', orderNum=null, delFlag=null}, DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 17:18:14 -Validating all active sessions...
2018-08-09 17:18:14 -Finished session validation.  No sessions were stopped.
2018-08-09 17:43:34 -请求地址 : http://localhost:8000/
2018-08-09 17:43:34 -HTTP METHOD : GET
2018-08-09 17:43:34 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.welcome
2018-08-09 17:43:34 -参数 : [{}]
2018-08-09 17:43:34 -耗时 : 1
2018-08-09 17:43:34 -返回值 : redirect:/login
2018-08-09 17:43:34 -请求地址 : http://localhost:8000/login
2018-08-09 17:43:34 -HTTP METHOD : GET
2018-08-09 17:43:34 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 17:43:34 -参数 : []
2018-08-09 17:43:34 -耗时 : 0
2018-08-09 17:43:34 -返回值 : login
2018-08-09 17:43:42 -请求地址 : http://localhost:8000/login;JSESSIONID=0ba529b1-ad26-4304-b80e-dd5d94eb0dba
2018-08-09 17:43:42 -HTTP METHOD : GET
2018-08-09 17:43:42 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 17:43:42 -参数 : []
2018-08-09 17:43:42 -耗时 : 0
2018-08-09 17:43:42 -返回值 : login
2018-08-09 17:43:44 -请求地址 : http://localhost:8000/login
2018-08-09 17:43:44 -HTTP METHOD : POST
2018-08-09 17:43:44 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 17:43:44 -参数 : [admin, 111111]
2018-08-09 17:43:44 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 17:43:44 -==> Parameters: admin(String)
2018-08-09 17:43:44 -<==      Total: 1
2018-08-09 17:43:44 -耗时 : 27
2018-08-09 17:43:44 -返回值 : {msg=操作成功, code=0}
2018-08-09 17:43:44 -请求地址 : http://localhost:8000/index
2018-08-09 17:43:44 -HTTP METHOD : GET
2018-08-09 17:43:44 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 17:43:44 -参数 : [{}]
2018-08-09 17:43:44 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 17:43:44 -==> Parameters: 1(Long)
2018-08-09 17:43:44 -<==      Total: 28
2018-08-09 17:43:44 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 17:43:44 -==> Parameters: 142(Long)
2018-08-09 17:43:44 -<==      Total: 1
2018-08-09 17:43:44 -耗时 : 9
2018-08-09 17:43:44 -返回值 : index_v1
2018-08-09 17:43:44 -请求地址 : http://localhost:8000/main
2018-08-09 17:43:44 -HTTP METHOD : GET
2018-08-09 17:43:44 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 17:43:44 -参数 : []
2018-08-09 17:43:44 -耗时 : 1
2018-08-09 17:43:44 -返回值 : main
2018-08-09 17:43:45 -请求地址 : http://localhost:8000/main
2018-08-09 17:43:45 -HTTP METHOD : GET
2018-08-09 17:43:45 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 17:43:45 -参数 : []
2018-08-09 17:43:45 -耗时 : 0
2018-08-09 17:43:45 -返回值 : main
2018-08-09 17:43:47 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 17:43:47 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-08-09 17:43:47 -==> Parameters: 1(Long)
2018-08-09 17:43:47 -<==      Total: 47
2018-08-09 17:43:47 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 17:43:47 -请求地址 : http://localhost:8000/system/sysDept
2018-08-09 17:43:47 -HTTP METHOD : GET
2018-08-09 17:43:47 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.dept
2018-08-09 17:43:47 -参数 : []
2018-08-09 17:43:47 -耗时 : 0
2018-08-09 17:43:47 -返回值 : system/dept/dept
2018-08-09 17:43:47 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 17:43:47 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 17:43:47 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 17:43:47 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 17:43:47 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 17:43:47 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 17:43:47 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 17:43:47 -请求地址 : http://localhost:8000/system/sysDept/list
2018-08-09 17:43:47 -HTTP METHOD : GET
2018-08-09 17:43:47 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 17:43:47 -参数 : []
2018-08-09 17:43:47 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 17:43:47 -==> Parameters: 
2018-08-09 17:43:47 -<==      Total: 12
2018-08-09 17:43:47 -耗时 : 5
2018-08-09 17:43:47 -返回值 : [DeptDO{deptId=18, parentId=13, name='hahaha', orderNum=null, delFlag=null}, DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 18:02:28 -请求地址 : http://127.0.0.1:8000/
2018-08-09 18:02:28 -HTTP METHOD : GET
2018-08-09 18:02:28 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.welcome
2018-08-09 18:02:28 -参数 : [{}]
2018-08-09 18:02:28 -耗时 : 1
2018-08-09 18:02:28 -返回值 : redirect:/login
2018-08-09 18:02:28 -请求地址 : http://127.0.0.1:8000/login
2018-08-09 18:02:28 -HTTP METHOD : GET
2018-08-09 18:02:28 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 18:02:28 -参数 : []
2018-08-09 18:02:28 -耗时 : 0
2018-08-09 18:02:28 -返回值 : login
2018-08-09 18:02:28 -请求地址 : http://127.0.0.1:8000/login;JSESSIONID=6a99f265-844d-49fc-bf6f-479797033397
2018-08-09 18:02:28 -HTTP METHOD : GET
2018-08-09 18:02:28 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 18:02:28 -参数 : []
2018-08-09 18:02:28 -耗时 : 0
2018-08-09 18:02:28 -返回值 : login
2018-08-09 18:02:29 -请求地址 : http://127.0.0.1:8000/login
2018-08-09 18:02:29 -HTTP METHOD : POST
2018-08-09 18:02:29 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 18:02:29 -参数 : [admin, 111111]
2018-08-09 18:02:29 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 18:02:29 -==> Parameters: admin(String)
2018-08-09 18:02:29 -<==      Total: 1
2018-08-09 18:02:29 -耗时 : 5
2018-08-09 18:02:29 -返回值 : {msg=操作成功, code=0}
2018-08-09 18:02:29 -请求地址 : http://127.0.0.1:8000/index
2018-08-09 18:02:29 -HTTP METHOD : GET
2018-08-09 18:02:29 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 18:02:29 -参数 : [{}]
2018-08-09 18:02:29 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 18:02:29 -==> Parameters: 1(Long)
2018-08-09 18:02:29 -<==      Total: 28
2018-08-09 18:02:29 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 18:02:29 -==> Parameters: 142(Long)
2018-08-09 18:02:29 -<==      Total: 1
2018-08-09 18:02:29 -耗时 : 8
2018-08-09 18:02:29 -返回值 : index_v1
2018-08-09 18:02:30 -请求地址 : http://127.0.0.1:8000/main
2018-08-09 18:02:30 -HTTP METHOD : GET
2018-08-09 18:02:30 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 18:02:30 -参数 : []
2018-08-09 18:02:30 -耗时 : 0
2018-08-09 18:02:30 -返回值 : main
2018-08-09 18:02:30 -请求地址 : http://127.0.0.1:8000/main
2018-08-09 18:02:30 -HTTP METHOD : GET
2018-08-09 18:02:30 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 18:02:30 -参数 : []
2018-08-09 18:02:30 -耗时 : 0
2018-08-09 18:02:30 -返回值 : main
2018-08-09 18:02:40 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:02:40 -请求地址 : http://127.0.0.1:8000/system/sysDept/list
2018-08-09 18:02:40 -HTTP METHOD : GET
2018-08-09 18:02:40 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 18:02:40 -参数 : []
2018-08-09 18:02:40 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 18:02:40 -==> Parameters: 
2018-08-09 18:02:40 -<==      Total: 12
2018-08-09 18:02:40 -耗时 : 2
2018-08-09 18:02:40 -返回值 : [DeptDO{deptId=18, parentId=13, name='hahaha', orderNum=null, delFlag=null}, DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 18:18:14 -Validating all active sessions...
2018-08-09 18:18:14 -Finished session validation.  No sessions were stopped.
2018-08-09 18:41:39 -Starting App on zhy with PID 18656 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 18:41:39 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 18:41:39 -The following profiles are active: dev
2018-08-09 18:41:39 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@550dbc7a: startup date [Thu Aug 09 18:41:39 CST 2018]; root of context hierarchy
2018-08-09 18:41:39 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 18:41:39 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fc7f8089] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:41:39 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ddd38519] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:41:40 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:41:40 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:41:40 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 18:41:40 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:41:40 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:41:40 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:41:40 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:41:40 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:41:40 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 18:41:40 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 18:41:40 -Starting service [Tomcat]
2018-08-09 18:41:40 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 18:41:40 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 18:41:40 -Initializing Spring embedded WebApplicationContext
2018-08-09 18:41:40 -Root WebApplicationContext: initialization completed in 1331 ms
2018-08-09 18:41:40 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 18:41:40 -Servlet dispatcherServlet mapped to [/]
2018-08-09 18:41:40 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 18:41:40 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 18:41:40 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 18:41:40 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 18:41:40 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 18:41:40 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 18:41:40 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@550dbc7a: startup date [Thu Aug 09 18:41:39 CST 2018]; root of context hierarchy
2018-08-09 18:41:40 -{dataSource-1} inited
2018-08-09 18:41:41 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 18:41:41 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 18:41:41 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@550dbc7a: startup date [Thu Aug 09 18:41:39 CST 2018]; root of context hierarchy
2018-08-09 18:41:41 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 18:41:41 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 18:41:41 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 18:41:41 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 18:41:41 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 18:41:41 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 18:41:41 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 18:41:41 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 18:41:41 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 18:41:41 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 18:41:41 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 18:41:41 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 18:41:41 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 18:41:41 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 18:41:41 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 18:41:41 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 18:41:41 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 18:41:41 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 18:41:41 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 18:41:41 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 18:41:41 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 18:41:41 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 18:41:41 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 18:41:41 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 18:41:41 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 18:41:41 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 18:41:41 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 18:41:41 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 18:41:41 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 18:41:41 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 18:41:41 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 18:41:41 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 18:41:41 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 18:41:41 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 18:41:41 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 18:41:41 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 18:41:41 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 18:41:41 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 18:41:41 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 18:41:41 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 18:41:41 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 18:41:41 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 18:41:41 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 18:41:41 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 18:41:41 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 18:41:41 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 18:41:41 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 18:41:41 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 18:41:41 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 18:41:41 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 18:41:42 -Using default implementation for ThreadExecutor
2018-08-09 18:41:42 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 18:41:42 -Quartz Scheduler v.2.2.1 created.
2018-08-09 18:41:42 -RAMJobStore initialized.
2018-08-09 18:41:42 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 18:41:42 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 18:41:42 -Quartz scheduler version: 2.2.1
2018-08-09 18:41:42 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@16f7f59f
2018-08-09 18:41:42 -Registering beans for JMX exposure on startup
2018-08-09 18:41:42 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 18:41:42 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 18:41:42 -Starting beans in phase 2147483647
2018-08-09 18:41:42 -Starting Quartz Scheduler now
2018-08-09 18:41:42 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 18:41:42 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 18:41:42 -Using a shared selector for servlet write/read
2018-08-09 18:41:42 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 18:41:42 -Started App in 3.468 seconds (JVM running for 4.151)
2018-08-09 18:42:54 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 18:42:54 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 18:42:54 -FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms
2018-08-09 18:42:54 -Enabling session validation scheduler...
2018-08-09 18:42:54 -请求地址 : http://127.0.0.1:8000/
2018-08-09 18:42:54 -HTTP METHOD : GET
2018-08-09 18:42:54 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.welcome
2018-08-09 18:42:54 -参数 : [{}]
2018-08-09 18:42:54 -耗时 : 1
2018-08-09 18:42:54 -返回值 : redirect:/login
2018-08-09 18:42:54 -请求地址 : http://127.0.0.1:8000/login
2018-08-09 18:42:54 -HTTP METHOD : GET
2018-08-09 18:42:54 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 18:42:54 -参数 : []
2018-08-09 18:42:54 -耗时 : 1
2018-08-09 18:42:54 -返回值 : login
2018-08-09 18:42:56 -请求地址 : http://127.0.0.1:8000/login
2018-08-09 18:42:56 -HTTP METHOD : POST
2018-08-09 18:42:56 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 18:42:56 -参数 : [admin, 111111]
2018-08-09 18:42:56 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 18:42:57 -==> Parameters: admin(String)
2018-08-09 18:42:57 -<==      Total: 1
2018-08-09 18:42:57 -耗时 : 198
2018-08-09 18:42:57 -返回值 : {msg=操作成功, code=0}
2018-08-09 18:42:57 -请求地址 : http://127.0.0.1:8000/index
2018-08-09 18:42:57 -HTTP METHOD : GET
2018-08-09 18:42:57 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 18:42:57 -参数 : [{}]
2018-08-09 18:42:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 18:42:57 -==> Parameters: 1(Long)
2018-08-09 18:42:57 -<==      Total: 28
2018-08-09 18:42:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 18:42:57 -==> Parameters: 142(Long)
2018-08-09 18:42:57 -<==      Total: 1
2018-08-09 18:42:57 -耗时 : 23
2018-08-09 18:42:57 -返回值 : index_v1
2018-08-09 18:42:57 -请求地址 : http://127.0.0.1:8000/main
2018-08-09 18:42:57 -HTTP METHOD : GET
2018-08-09 18:42:57 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 18:42:57 -参数 : []
2018-08-09 18:42:57 -耗时 : 1
2018-08-09 18:42:57 -返回值 : main
2018-08-09 18:42:57 -请求地址 : http://127.0.0.1:8000/main
2018-08-09 18:42:57 -HTTP METHOD : GET
2018-08-09 18:42:57 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 18:42:57 -参数 : []
2018-08-09 18:42:57 -耗时 : 0
2018-08-09 18:42:57 -返回值 : main
2018-08-09 18:42:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:42:59 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-08-09 18:42:59 -==> Parameters: 1(Long)
2018-08-09 18:42:59 -<==      Total: 47
2018-08-09 18:42:59 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:42:59 -请求地址 : http://127.0.0.1:8000/sys/user/
2018-08-09 18:42:59 -HTTP METHOD : GET
2018-08-09 18:42:59 -CLASS_METHOD : com.zhy.management.system.controller.UserController.user
2018-08-09 18:42:59 -参数 : [{}]
2018-08-09 18:42:59 -耗时 : 0
2018-08-09 18:42:59 -返回值 : system/user/user
2018-08-09 18:42:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:42:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:42:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:42:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:42:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:42:59 -请求地址 : http://127.0.0.1:8000/system/sysDept/tree
2018-08-09 18:42:59 -HTTP METHOD : GET
2018-08-09 18:42:59 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.tree
2018-08-09 18:42:59 -参数 : []
2018-08-09 18:42:59 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 18:42:59 -==> Parameters: 
2018-08-09 18:42:59 -<==      Total: 12
2018-08-09 18:42:59 -耗时 : 6
2018-08-09 18:42:59 -请求地址 : http://127.0.0.1:8000/sys/user/list
2018-08-09 18:42:59 -HTTP METHOD : GET
2018-08-09 18:42:59 -CLASS_METHOD : com.zhy.management.system.controller.UserController.list
2018-08-09 18:42:59 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-08-09 18:42:59 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-08-09 18:42:59 -==> Parameters: 0(Integer), 10(Integer)
2018-08-09 18:42:59 -<==      Total: 7
2018-08-09 18:42:59 -==>  Preparing: select count(*) from sys_user 
2018-08-09 18:42:59 -==> Parameters: 
2018-08-09 18:42:59 -<==      Total: 1
2018-08-09 18:42:59 -耗时 : 19
2018-08-09 18:42:59 -返回值 : com.zhy.management.common.utils.PageUtils@2e7aba3
2018-08-09 18:42:59 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"18","parentId":"13","state":{"opened":true},"text":"hahaha"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"人事"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"自然的恩典"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"福慧学院"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"17","parentId":"9","state":{"opened":true},"text":"人事"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"信息"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"总部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"视频部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"德养"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-08-09 18:44:18 -Starting App on zhy with PID 4060 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 18:44:18 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 18:44:18 -The following profiles are active: dev
2018-08-09 18:44:18 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 18:44:18 CST 2018]; root of context hierarchy
2018-08-09 18:44:18 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 18:44:18 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6120f87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:44:19 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$e7661417] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:44:19 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:44:19 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:44:19 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 18:44:19 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:44:19 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:44:19 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:44:19 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:44:19 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:44:19 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 18:44:19 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 18:44:19 -Starting service [Tomcat]
2018-08-09 18:44:19 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 18:44:19 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 18:44:19 -Initializing Spring embedded WebApplicationContext
2018-08-09 18:44:19 -Root WebApplicationContext: initialization completed in 1316 ms
2018-08-09 18:44:19 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 18:44:19 -Servlet dispatcherServlet mapped to [/]
2018-08-09 18:44:19 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 18:44:19 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 18:44:19 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 18:44:19 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 18:44:19 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 18:44:19 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 18:44:19 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 18:44:18 CST 2018]; root of context hierarchy
2018-08-09 18:44:19 -{dataSource-1} inited
2018-08-09 18:44:20 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 18:44:20 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 18:44:20 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 18:44:18 CST 2018]; root of context hierarchy
2018-08-09 18:44:20 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 18:44:20 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 18:44:20 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 18:44:20 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 18:44:20 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 18:44:20 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 18:44:20 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 18:44:20 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 18:44:20 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 18:44:20 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 18:44:20 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 18:44:20 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 18:44:20 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 18:44:20 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 18:44:20 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 18:44:20 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 18:44:20 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 18:44:20 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 18:44:20 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 18:44:20 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 18:44:20 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 18:44:20 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 18:44:20 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 18:44:20 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 18:44:20 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 18:44:20 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 18:44:20 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 18:44:20 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 18:44:20 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 18:44:20 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 18:44:20 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 18:44:20 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 18:44:20 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 18:44:20 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 18:44:20 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 18:44:20 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 18:44:20 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 18:44:20 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 18:44:20 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 18:44:20 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 18:44:20 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 18:44:20 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 18:44:20 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 18:44:20 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 18:44:20 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 18:44:20 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 18:44:20 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 18:44:20 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 18:44:20 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 18:44:20 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 18:44:21 -Using default implementation for ThreadExecutor
2018-08-09 18:44:21 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 18:44:21 -Quartz Scheduler v.2.2.1 created.
2018-08-09 18:44:21 -RAMJobStore initialized.
2018-08-09 18:44:21 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 18:44:21 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 18:44:21 -Quartz scheduler version: 2.2.1
2018-08-09 18:44:21 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@4eb9ae4d
2018-08-09 18:44:21 -Registering beans for JMX exposure on startup
2018-08-09 18:44:21 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 18:44:21 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 18:44:21 -Starting beans in phase 2147483647
2018-08-09 18:44:21 -Starting Quartz Scheduler now
2018-08-09 18:44:21 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 18:44:21 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 18:44:21 -Using a shared selector for servlet write/read
2018-08-09 18:44:21 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 18:44:21 -Started App in 3.418 seconds (JVM running for 3.982)
2018-08-09 18:44:23 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 18:44:23 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 18:44:23 -FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2018-08-09 18:44:23 -Enabling session validation scheduler...
2018-08-09 18:44:23 -请求地址 : http://127.0.0.1:8000/index
2018-08-09 18:44:23 -HTTP METHOD : GET
2018-08-09 18:44:23 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 18:44:23 -参数 : [{}]
2018-08-09 18:44:23 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 18:44:24 -==> Parameters: 1(Long)
2018-08-09 18:44:24 -<==      Total: 28
2018-08-09 18:44:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 18:44:24 -==> Parameters: 142(Long)
2018-08-09 18:44:24 -<==      Total: 1
2018-08-09 18:44:24 -耗时 : 91
2018-08-09 18:44:24 -返回值 : index_v1
2018-08-09 18:44:24 -请求地址 : http://127.0.0.1:8000/main
2018-08-09 18:44:24 -HTTP METHOD : GET
2018-08-09 18:44:24 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 18:44:24 -参数 : []
2018-08-09 18:44:24 -耗时 : 1
2018-08-09 18:44:24 -返回值 : main
2018-08-09 18:44:24 -请求地址 : http://127.0.0.1:8000/main
2018-08-09 18:44:24 -HTTP METHOD : GET
2018-08-09 18:44:24 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 18:44:24 -参数 : []
2018-08-09 18:44:24 -耗时 : 0
2018-08-09 18:44:24 -返回值 : main
2018-08-09 18:44:27 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:44:27 -请求地址 : http://127.0.0.1:8000/sys/user/
2018-08-09 18:44:27 -HTTP METHOD : GET
2018-08-09 18:44:27 -CLASS_METHOD : com.zhy.management.system.controller.UserController.user
2018-08-09 18:44:27 -参数 : [{}]
2018-08-09 18:44:27 -耗时 : 0
2018-08-09 18:44:27 -返回值 : system/user/user
2018-08-09 18:44:27 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:44:27 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:44:27 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:44:27 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:44:27 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:44:27 -请求地址 : http://127.0.0.1:8000/system/sysDept/tree
2018-08-09 18:44:27 -HTTP METHOD : GET
2018-08-09 18:44:27 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.tree
2018-08-09 18:44:27 -参数 : []
2018-08-09 18:44:27 -请求地址 : http://127.0.0.1:8000/sys/user/list
2018-08-09 18:44:27 -HTTP METHOD : GET
2018-08-09 18:44:27 -CLASS_METHOD : com.zhy.management.system.controller.UserController.list
2018-08-09 18:44:27 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-08-09 18:44:27 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-08-09 18:44:27 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 18:44:27 -==> Parameters: 
2018-08-09 18:44:27 -==> Parameters: 0(Integer), 10(Integer)
2018-08-09 18:44:27 -<==      Total: 12
2018-08-09 18:44:27 -<==      Total: 7
2018-08-09 18:44:27 -耗时 : 28
2018-08-09 18:44:27 -==>  Preparing: select count(*) from sys_user 
2018-08-09 18:44:27 -==> Parameters: 
2018-08-09 18:44:27 -<==      Total: 1
2018-08-09 18:44:27 -耗时 : 20
2018-08-09 18:44:27 -返回值 : com.zhy.management.common.utils.PageUtils@57dc89ae
2018-08-09 18:44:27 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"18","parentId":"13","state":{"opened":true},"text":"hahaha"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"人事"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"自然的恩典"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"福慧学院"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"17","parentId":"9","state":{"opened":true},"text":"人事"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"信息"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"总部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"视频部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"德养"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-08-09 18:44:58 -Starting App on zhy with PID 13136 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 18:44:58 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 18:44:58 -The following profiles are active: dev
2018-08-09 18:44:58 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 18:44:58 CST 2018]; root of context hierarchy
2018-08-09 18:44:59 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 18:44:59 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6120f87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:44:59 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$e7661417] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:44:59 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:44:59 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:44:59 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 18:44:59 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:44:59 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:44:59 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:44:59 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:44:59 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:44:59 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 18:44:59 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 18:44:59 -Starting service [Tomcat]
2018-08-09 18:45:00 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 18:45:00 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 18:45:00 -Initializing Spring embedded WebApplicationContext
2018-08-09 18:45:00 -Root WebApplicationContext: initialization completed in 1317 ms
2018-08-09 18:45:00 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 18:45:00 -Servlet dispatcherServlet mapped to [/]
2018-08-09 18:45:00 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 18:45:00 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 18:45:00 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 18:45:00 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 18:45:00 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 18:45:00 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 18:45:00 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 18:44:58 CST 2018]; root of context hierarchy
2018-08-09 18:45:00 -{dataSource-1} inited
2018-08-09 18:45:00 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 18:45:00 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 18:45:01 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 18:44:58 CST 2018]; root of context hierarchy
2018-08-09 18:45:01 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 18:45:01 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 18:45:01 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 18:45:01 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 18:45:01 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 18:45:01 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 18:45:01 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 18:45:01 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 18:45:01 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 18:45:01 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 18:45:01 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 18:45:01 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 18:45:01 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 18:45:01 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 18:45:01 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 18:45:01 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 18:45:01 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 18:45:01 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 18:45:01 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 18:45:01 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 18:45:01 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 18:45:01 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 18:45:01 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 18:45:01 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 18:45:01 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 18:45:01 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 18:45:01 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 18:45:01 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 18:45:01 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 18:45:01 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 18:45:01 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 18:45:01 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 18:45:01 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 18:45:01 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 18:45:01 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 18:45:01 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 18:45:01 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 18:45:01 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 18:45:01 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 18:45:01 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 18:45:01 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 18:45:01 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 18:45:01 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 18:45:01 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 18:45:01 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 18:45:01 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 18:45:01 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 18:45:01 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 18:45:01 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 18:45:01 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 18:45:01 -Using default implementation for ThreadExecutor
2018-08-09 18:45:01 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 18:45:01 -Quartz Scheduler v.2.2.1 created.
2018-08-09 18:45:01 -RAMJobStore initialized.
2018-08-09 18:45:01 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 18:45:01 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 18:45:01 -Quartz scheduler version: 2.2.1
2018-08-09 18:45:01 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@4eb9ae4d
2018-08-09 18:45:01 -Registering beans for JMX exposure on startup
2018-08-09 18:45:01 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 18:45:01 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 18:45:01 -Starting beans in phase 2147483647
2018-08-09 18:45:01 -Starting Quartz Scheduler now
2018-08-09 18:45:01 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 18:45:01 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 18:45:01 -Using a shared selector for servlet write/read
2018-08-09 18:45:01 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 18:45:01 -Started App in 3.373 seconds (JVM running for 3.902)
2018-08-09 18:45:07 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 18:45:07 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 18:45:07 -FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2018-08-09 18:45:07 -Enabling session validation scheduler...
2018-08-09 18:45:07 -请求地址 : http://127.0.0.1:8000/index
2018-08-09 18:45:07 -HTTP METHOD : GET
2018-08-09 18:45:07 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 18:45:07 -参数 : [{}]
2018-08-09 18:45:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 18:45:07 -==> Parameters: 1(Long)
2018-08-09 18:45:07 -<==      Total: 28
2018-08-09 18:45:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 18:45:07 -==> Parameters: 142(Long)
2018-08-09 18:45:07 -<==      Total: 1
2018-08-09 18:45:07 -耗时 : 91
2018-08-09 18:45:07 -返回值 : index_v1
2018-08-09 18:45:07 -请求地址 : http://127.0.0.1:8000/main
2018-08-09 18:45:07 -HTTP METHOD : GET
2018-08-09 18:45:07 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 18:45:07 -参数 : []
2018-08-09 18:45:07 -耗时 : 0
2018-08-09 18:45:07 -返回值 : main
2018-08-09 18:45:07 -请求地址 : http://127.0.0.1:8000/main
2018-08-09 18:45:07 -HTTP METHOD : GET
2018-08-09 18:45:07 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 18:45:07 -参数 : []
2018-08-09 18:45:07 -耗时 : 1
2018-08-09 18:45:07 -返回值 : main
2018-08-09 18:45:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:45:10 -请求地址 : http://127.0.0.1:8000/sys/user/
2018-08-09 18:45:10 -HTTP METHOD : GET
2018-08-09 18:45:10 -CLASS_METHOD : com.zhy.management.system.controller.UserController.user
2018-08-09 18:45:10 -参数 : [{}]
2018-08-09 18:45:10 -耗时 : 1
2018-08-09 18:45:10 -返回值 : system/user/user
2018-08-09 18:45:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:45:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:45:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:45:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:45:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:45:10 -请求地址 : http://127.0.0.1:8000/system/sysDept/tree
2018-08-09 18:45:10 -HTTP METHOD : GET
2018-08-09 18:45:10 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.tree
2018-08-09 18:45:10 -参数 : []
2018-08-09 18:45:10 -请求地址 : http://127.0.0.1:8000/sys/user/list
2018-08-09 18:45:10 -HTTP METHOD : GET
2018-08-09 18:45:10 -CLASS_METHOD : com.zhy.management.system.controller.UserController.list
2018-08-09 18:45:10 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-08-09 18:45:10 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-08-09 18:45:10 -==> Parameters: 0(Integer), 10(Integer)
2018-08-09 18:45:10 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 18:45:10 -==> Parameters: 
2018-08-09 18:45:10 -<==      Total: 7
2018-08-09 18:45:10 -<==      Total: 12
2018-08-09 18:45:10 -耗时 : 24
2018-08-09 18:45:10 -==>  Preparing: select count(*) from sys_user 
2018-08-09 18:45:10 -==> Parameters: 
2018-08-09 18:45:10 -<==      Total: 1
2018-08-09 18:45:10 -耗时 : 20
2018-08-09 18:45:10 -返回值 : com.zhy.management.common.utils.PageUtils@1126e9a7
2018-08-09 18:45:11 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"18","parentId":"13","state":{"opened":true},"text":"hahaha"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"人事"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"自然的恩典"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"福慧学院"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"17","parentId":"9","state":{"opened":true},"text":"人事"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"信息"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"总部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"视频部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"德养"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-08-09 18:45:39 -Starting App on zhy with PID 17136 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 18:45:39 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 18:45:39 -The following profiles are active: dev
2018-08-09 18:45:39 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 18:45:39 CST 2018]; root of context hierarchy
2018-08-09 18:45:40 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 18:45:40 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$532bf8fb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:45:40 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$347ffd8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:45:40 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:45:40 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:45:40 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 18:45:40 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:45:40 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:45:40 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:45:40 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:45:40 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:45:40 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 18:45:40 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 18:45:40 -Starting service [Tomcat]
2018-08-09 18:45:40 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 18:45:40 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 18:45:41 -Initializing Spring embedded WebApplicationContext
2018-08-09 18:45:41 -Root WebApplicationContext: initialization completed in 1330 ms
2018-08-09 18:45:41 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 18:45:41 -Servlet dispatcherServlet mapped to [/]
2018-08-09 18:45:41 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 18:45:41 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 18:45:41 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 18:45:41 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 18:45:41 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 18:45:41 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 18:45:41 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 18:45:39 CST 2018]; root of context hierarchy
2018-08-09 18:45:41 -{dataSource-1} inited
2018-08-09 18:45:41 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 18:45:41 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 18:45:42 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 18:45:39 CST 2018]; root of context hierarchy
2018-08-09 18:45:42 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 18:45:42 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 18:45:42 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 18:45:42 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 18:45:42 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 18:45:42 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 18:45:42 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 18:45:42 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 18:45:42 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 18:45:42 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 18:45:42 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 18:45:42 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 18:45:42 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 18:45:42 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 18:45:42 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 18:45:42 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 18:45:42 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 18:45:42 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 18:45:42 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 18:45:42 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 18:45:42 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 18:45:42 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 18:45:42 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 18:45:42 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 18:45:42 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 18:45:42 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 18:45:42 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 18:45:42 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 18:45:42 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 18:45:42 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 18:45:42 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 18:45:42 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 18:45:42 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 18:45:42 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 18:45:42 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 18:45:42 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 18:45:42 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 18:45:42 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 18:45:42 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 18:45:42 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 18:45:42 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 18:45:42 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 18:45:42 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 18:45:42 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 18:45:42 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 18:45:42 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 18:45:42 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 18:45:42 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 18:45:42 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 18:45:42 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 18:45:42 -Using default implementation for ThreadExecutor
2018-08-09 18:45:42 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 18:45:42 -Quartz Scheduler v.2.2.1 created.
2018-08-09 18:45:42 -RAMJobStore initialized.
2018-08-09 18:45:42 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 18:45:42 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 18:45:42 -Quartz scheduler version: 2.2.1
2018-08-09 18:45:42 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@ef86c72
2018-08-09 18:45:42 -Registering beans for JMX exposure on startup
2018-08-09 18:45:42 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 18:45:42 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 18:45:42 -Starting beans in phase 2147483647
2018-08-09 18:45:42 -Starting Quartz Scheduler now
2018-08-09 18:45:42 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 18:45:42 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 18:45:42 -Using a shared selector for servlet write/read
2018-08-09 18:45:42 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 18:45:42 -Started App in 3.442 seconds (JVM running for 3.987)
2018-08-09 18:45:56 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 18:45:56 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 18:45:56 -FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2018-08-09 18:45:56 -Enabling session validation scheduler...
2018-08-09 18:45:56 -请求地址 : http://127.0.0.1:8000/index
2018-08-09 18:45:56 -HTTP METHOD : GET
2018-08-09 18:45:56 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 18:45:56 -参数 : [{}]
2018-08-09 18:45:56 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 18:45:56 -==> Parameters: 1(Long)
2018-08-09 18:45:56 -<==      Total: 28
2018-08-09 18:45:56 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 18:45:56 -==> Parameters: 142(Long)
2018-08-09 18:45:56 -<==      Total: 1
2018-08-09 18:45:56 -耗时 : 91
2018-08-09 18:45:56 -返回值 : index_v1
2018-08-09 18:45:56 -请求地址 : http://127.0.0.1:8000/main
2018-08-09 18:45:56 -HTTP METHOD : GET
2018-08-09 18:45:56 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 18:45:56 -参数 : []
2018-08-09 18:45:56 -耗时 : 0
2018-08-09 18:45:56 -返回值 : main
2018-08-09 18:45:56 -请求地址 : http://127.0.0.1:8000/main
2018-08-09 18:45:56 -HTTP METHOD : GET
2018-08-09 18:45:56 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 18:45:56 -参数 : []
2018-08-09 18:45:56 -耗时 : 0
2018-08-09 18:45:56 -返回值 : main
2018-08-09 18:45:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:45:59 -请求地址 : http://127.0.0.1:8000/sys/user/
2018-08-09 18:45:59 -HTTP METHOD : GET
2018-08-09 18:45:59 -CLASS_METHOD : com.zhy.management.system.controller.UserController.user
2018-08-09 18:45:59 -参数 : [{}]
2018-08-09 18:45:59 -耗时 : 1
2018-08-09 18:45:59 -返回值 : system/user/user
2018-08-09 18:45:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:45:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:45:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:45:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:45:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:45:59 -请求地址 : http://127.0.0.1:8000/system/sysDept/tree
2018-08-09 18:45:59 -HTTP METHOD : GET
2018-08-09 18:45:59 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.tree
2018-08-09 18:45:59 -参数 : []
2018-08-09 18:45:59 -请求地址 : http://127.0.0.1:8000/sys/user/list
2018-08-09 18:45:59 -HTTP METHOD : GET
2018-08-09 18:45:59 -CLASS_METHOD : com.zhy.management.system.controller.UserController.list
2018-08-09 18:45:59 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-08-09 18:45:59 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 18:45:59 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-08-09 18:45:59 -==> Parameters: 
2018-08-09 18:45:59 -==> Parameters: 0(Integer), 10(Integer)
2018-08-09 18:45:59 -<==      Total: 12
2018-08-09 18:45:59 -耗时 : 23
2018-08-09 18:45:59 -<==      Total: 7
2018-08-09 18:45:59 -==>  Preparing: select count(*) from sys_user 
2018-08-09 18:45:59 -==> Parameters: 
2018-08-09 18:45:59 -<==      Total: 1
2018-08-09 18:45:59 -耗时 : 17
2018-08-09 18:45:59 -返回值 : com.zhy.management.common.utils.PageUtils@5bdcc437
2018-08-09 18:46:00 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"18","parentId":"13","state":{"opened":true},"text":"hahaha"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"人事"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"自然的恩典"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"福慧学院"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"17","parentId":"9","state":{"opened":true},"text":"人事"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"信息"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"总部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"视频部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"德养"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-08-09 18:46:30 -Starting App on zhy with PID 4824 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 18:46:30 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 18:46:30 -The following profiles are active: dev
2018-08-09 18:46:30 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 18:46:30 CST 2018]; root of context hierarchy
2018-08-09 18:46:31 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 18:46:31 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$16c0afd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:46:31 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$e2c00f8d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:46:31 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:46:31 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:46:31 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 18:46:31 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:46:31 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:46:31 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:46:31 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:46:31 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 18:46:32 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 18:46:32 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 18:46:32 -Starting service [Tomcat]
2018-08-09 18:46:32 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 18:46:32 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 18:46:32 -Initializing Spring embedded WebApplicationContext
2018-08-09 18:46:32 -Root WebApplicationContext: initialization completed in 1322 ms
2018-08-09 18:46:32 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 18:46:32 -Servlet dispatcherServlet mapped to [/]
2018-08-09 18:46:32 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 18:46:32 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 18:46:32 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 18:46:32 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 18:46:32 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 18:46:32 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 18:46:32 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 18:46:30 CST 2018]; root of context hierarchy
2018-08-09 18:46:32 -{dataSource-1} inited
2018-08-09 18:46:32 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 18:46:33 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 18:46:33 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 18:46:30 CST 2018]; root of context hierarchy
2018-08-09 18:46:33 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 18:46:33 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 18:46:33 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 18:46:33 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 18:46:33 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 18:46:33 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 18:46:33 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 18:46:33 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 18:46:33 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 18:46:33 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 18:46:33 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 18:46:33 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 18:46:33 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 18:46:33 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 18:46:33 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 18:46:33 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 18:46:33 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 18:46:33 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 18:46:33 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 18:46:33 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 18:46:33 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 18:46:33 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 18:46:33 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 18:46:33 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 18:46:33 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 18:46:33 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 18:46:33 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 18:46:33 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 18:46:33 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 18:46:33 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 18:46:33 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 18:46:33 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 18:46:33 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 18:46:33 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 18:46:33 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 18:46:33 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 18:46:33 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 18:46:33 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 18:46:33 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 18:46:33 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 18:46:33 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 18:46:33 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 18:46:33 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 18:46:33 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 18:46:33 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 18:46:33 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 18:46:33 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 18:46:33 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 18:46:33 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 18:46:33 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 18:46:33 -Using default implementation for ThreadExecutor
2018-08-09 18:46:33 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 18:46:33 -Quartz Scheduler v.2.2.1 created.
2018-08-09 18:46:33 -RAMJobStore initialized.
2018-08-09 18:46:33 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 18:46:33 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 18:46:33 -Quartz scheduler version: 2.2.1
2018-08-09 18:46:33 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@7761e342
2018-08-09 18:46:34 -Registering beans for JMX exposure on startup
2018-08-09 18:46:34 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 18:46:34 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 18:46:34 -Starting beans in phase 2147483647
2018-08-09 18:46:34 -Starting Quartz Scheduler now
2018-08-09 18:46:34 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 18:46:34 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 18:46:34 -Using a shared selector for servlet write/read
2018-08-09 18:46:34 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 18:46:34 -Started App in 3.492 seconds (JVM running for 4.037)
2018-08-09 18:46:38 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 18:46:38 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 18:46:38 -FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2018-08-09 18:46:38 -Enabling session validation scheduler...
2018-08-09 18:46:38 -请求地址 : http://127.0.0.1:8000/index
2018-08-09 18:46:38 -HTTP METHOD : GET
2018-08-09 18:46:38 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 18:46:38 -参数 : [{}]
2018-08-09 18:46:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 18:46:38 -==> Parameters: 1(Long)
2018-08-09 18:46:38 -<==      Total: 28
2018-08-09 18:46:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 18:46:38 -==> Parameters: 142(Long)
2018-08-09 18:46:38 -<==      Total: 1
2018-08-09 18:46:38 -耗时 : 92
2018-08-09 18:46:38 -返回值 : index_v1
2018-08-09 18:46:39 -请求地址 : http://127.0.0.1:8000/main
2018-08-09 18:46:39 -HTTP METHOD : GET
2018-08-09 18:46:39 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 18:46:39 -参数 : []
2018-08-09 18:46:39 -耗时 : 0
2018-08-09 18:46:39 -返回值 : main
2018-08-09 18:46:39 -请求地址 : http://127.0.0.1:8000/main
2018-08-09 18:46:39 -HTTP METHOD : GET
2018-08-09 18:46:39 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 18:46:39 -参数 : []
2018-08-09 18:46:39 -耗时 : 0
2018-08-09 18:46:39 -返回值 : main
2018-08-09 18:46:41 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:46:41 -请求地址 : http://127.0.0.1:8000/sys/user/
2018-08-09 18:46:41 -HTTP METHOD : GET
2018-08-09 18:46:41 -CLASS_METHOD : com.zhy.management.system.controller.UserController.user
2018-08-09 18:46:41 -参数 : [{}]
2018-08-09 18:46:41 -耗时 : 0
2018-08-09 18:46:41 -返回值 : system/user/user
2018-08-09 18:46:41 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:46:41 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:46:41 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:46:41 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:46:41 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:46:41 -请求地址 : http://127.0.0.1:8000/system/sysDept/tree
2018-08-09 18:46:41 -HTTP METHOD : GET
2018-08-09 18:46:41 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.tree
2018-08-09 18:46:41 -参数 : []
2018-08-09 18:46:41 -请求地址 : http://127.0.0.1:8000/sys/user/list
2018-08-09 18:46:41 -HTTP METHOD : GET
2018-08-09 18:46:41 -CLASS_METHOD : com.zhy.management.system.controller.UserController.list
2018-08-09 18:46:41 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-08-09 18:46:41 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-08-09 18:46:41 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 18:46:41 -==> Parameters: 0(Integer), 10(Integer)
2018-08-09 18:46:41 -==> Parameters: 
2018-08-09 18:46:41 -<==      Total: 7
2018-08-09 18:46:41 -<==      Total: 12
2018-08-09 18:46:41 -耗时 : 24
2018-08-09 18:46:41 -==>  Preparing: select count(*) from sys_user 
2018-08-09 18:46:41 -==> Parameters: 
2018-08-09 18:46:41 -<==      Total: 1
2018-08-09 18:46:41 -耗时 : 17
2018-08-09 18:46:41 -返回值 : com.zhy.management.common.utils.PageUtils@3d6a530f
2018-08-09 18:46:41 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"18","parentId":"13","state":{"opened":true},"text":"hahaha"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"人事"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"自然的恩典"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"福慧学院"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"17","parentId":"9","state":{"opened":true},"text":"人事"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"信息"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"总部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"视频部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"德养"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-08-09 18:46:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:46:46 -请求地址 : http://127.0.0.1:8000/sys/menu/
2018-08-09 18:46:46 -HTTP METHOD : GET
2018-08-09 18:46:46 -CLASS_METHOD : com.zhy.management.system.controller.MenuController.menu
2018-08-09 18:46:46 -参数 : [{}]
2018-08-09 18:46:46 -耗时 : 0
2018-08-09 18:46:46 -返回值 : system/menu/menu
2018-08-09 18:46:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:46:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:46:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:46:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:46:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:46:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:46:46 -请求地址 : http://127.0.0.1:8000/sys/menu/list
2018-08-09 18:46:46 -HTTP METHOD : GET
2018-08-09 18:46:46 -CLASS_METHOD : com.zhy.management.system.controller.MenuController.list
2018-08-09 18:46:46 -参数 : [{sort=order_num}]
2018-08-09 18:46:46 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-08-09 18:46:46 -==> Parameters: 
2018-08-09 18:46:46 -<==      Total: 63
2018-08-09 18:46:46 -耗时 : 13
2018-08-09 18:46:46 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=94, parentId=93, name='模型管理', url='activiti/model', perms='', type=1, icon='fa fa-sort-amount-asc', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=96, parentId=93, name='流程管理', url='activiti/process', perms='', type=1, icon='fa fa-flag', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=101, parentId=93, name='待办任务', url='activiti/task/todo', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=77, name='swagger', url='/swagger-ui.html', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='hahaha', url='null', perms='a', type=0, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=0, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=68, parentId=49, name='发布文章', url='/blog/bContent/add', perms='blog:bContent:add', type=1, icon='fa fa-edit', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=50, parentId=49, name='文章列表', url='blog/bContent', perms='blog:bContent:bContent', type=1, icon='fa fa-file-image-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='common/generator', perms='common:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='部门管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计划任务', url='common/job', perms='common:taskScheduleJob', type=1, icon='fa fa-hourglass-1', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=49, parentId=0, name='博客管理', url='', perms='', type=0, icon='fa fa-rss', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=93, parentId=0, name='工作流程', url='', perms='', type=0, icon='fa fa-print', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='图表管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=7, gmtCreate=null, gmtModified=null}]
2018-08-09 18:47:27 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 18:47:27 -请求地址 : http://127.0.0.1:8000/sys/user/edit/132
2018-08-09 18:47:27 -HTTP METHOD : GET
2018-08-09 18:47:27 -CLASS_METHOD : com.zhy.management.system.controller.UserController.edit
2018-08-09 18:47:27 -参数 : [{}, 132]
2018-08-09 18:47:27 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-08-09 18:47:27 -==> Parameters: 132(Long)
2018-08-09 18:47:27 -<==      Total: 2
2018-08-09 18:47:27 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-08-09 18:47:27 -==> Parameters: 132(Long)
2018-08-09 18:47:27 -<==      Total: 1
2018-08-09 18:47:27 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept where dept_id = ? 
2018-08-09 18:47:27 -==> Parameters: 13(Long)
2018-08-09 18:47:27 -<==      Total: 1
2018-08-09 18:47:27 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-08-09 18:47:27 -==> Parameters: 132(Long)
2018-08-09 18:47:27 -<==      Total: 2
2018-08-09 18:47:27 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-08-09 18:47:27 -==> Parameters: 
2018-08-09 18:47:27 -<==      Total: 3
2018-08-09 18:47:27 -耗时 : 15
2018-08-09 18:47:27 -返回值 : system/user/edit
2018-08-09 20:17:03 -Validating all active sessions...
2018-08-09 20:17:03 -Finished session validation.  No sessions were stopped.
2018-08-09 20:26:31 -Starting App on zhy with PID 13300 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 20:26:31 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 20:26:31 -The following profiles are active: dev
2018-08-09 20:26:31 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21282ed8: startup date [Thu Aug 09 20:26:31 CST 2018]; root of context hierarchy
2018-08-09 20:26:32 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 20:26:32 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$961c2c36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:26:32 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$777030c6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:26:33 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:26:33 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:26:33 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 20:26:33 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:26:33 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:26:33 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:26:33 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:26:33 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:26:33 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 20:26:33 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 20:26:33 -Starting service [Tomcat]
2018-08-09 20:26:33 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 20:26:33 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 20:26:33 -Initializing Spring embedded WebApplicationContext
2018-08-09 20:26:33 -Root WebApplicationContext: initialization completed in 2064 ms
2018-08-09 20:26:33 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 20:26:33 -Servlet dispatcherServlet mapped to [/]
2018-08-09 20:26:33 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 20:26:33 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 20:26:33 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 20:26:33 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 20:26:33 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 20:26:33 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 20:26:33 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21282ed8: startup date [Thu Aug 09 20:26:31 CST 2018]; root of context hierarchy
2018-08-09 20:26:34 -{dataSource-1} inited
2018-08-09 20:26:34 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 20:26:34 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 20:26:34 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21282ed8: startup date [Thu Aug 09 20:26:31 CST 2018]; root of context hierarchy
2018-08-09 20:26:34 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 20:26:34 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 20:26:34 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 20:26:34 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 20:26:34 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 20:26:34 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 20:26:34 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 20:26:34 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 20:26:34 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 20:26:34 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 20:26:34 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 20:26:34 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 20:26:34 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 20:26:34 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 20:26:34 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 20:26:34 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 20:26:34 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 20:26:34 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 20:26:34 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 20:26:34 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 20:26:34 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 20:26:34 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 20:26:34 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 20:26:34 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 20:26:34 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 20:26:34 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 20:26:34 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 20:26:34 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 20:26:34 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 20:26:34 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 20:26:34 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 20:26:34 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 20:26:34 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 20:26:34 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 20:26:34 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 20:26:34 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 20:26:34 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 20:26:34 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 20:26:34 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 20:26:34 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 20:26:34 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 20:26:34 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 20:26:34 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 20:26:34 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 20:26:34 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 20:26:34 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 20:26:34 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 20:26:34 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 20:26:34 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 20:26:34 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 20:26:35 -Using default implementation for ThreadExecutor
2018-08-09 20:26:35 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 20:26:35 -Quartz Scheduler v.2.2.1 created.
2018-08-09 20:26:35 -RAMJobStore initialized.
2018-08-09 20:26:35 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 20:26:35 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 20:26:35 -Quartz scheduler version: 2.2.1
2018-08-09 20:26:35 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@2d237460
2018-08-09 20:26:35 -Registering beans for JMX exposure on startup
2018-08-09 20:26:35 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 20:26:35 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 20:26:35 -Starting beans in phase 2147483647
2018-08-09 20:26:35 -Starting Quartz Scheduler now
2018-08-09 20:26:35 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 20:26:35 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 20:26:35 -Using a shared selector for servlet write/read
2018-08-09 20:26:35 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 20:26:35 -Started App in 4.85 seconds (JVM running for 6.004)
2018-08-09 20:26:51 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 20:26:51 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 20:26:51 -FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
2018-08-09 20:26:51 -Enabling session validation scheduler...
2018-08-09 20:27:11 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.net.SocketInputStream.read(SocketInputStream.java:127)
	at redis.clients.util.RedisInputStream.ensureFill(RedisInputStream.java:196)
	at redis.clients.util.RedisInputStream.readByte(RedisInputStream.java:40)
	at redis.clients.jedis.Protocol.process(Protocol.java:151)
	at redis.clients.jedis.Protocol.read(Protocol.java:215)
	at redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:340)
	at redis.clients.jedis.Connection.getBinaryBulkReply(Connection.java:259)
	at redis.clients.jedis.BinaryJedis.get(BinaryJedis.java:244)
	at com.zhy.management.common.redis.shiro.RedisManager.get(RedisManager.java:68)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:94)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 20:27:41 -请求地址 : http://127.0.0.1:8000/
2018-08-09 20:27:41 -HTTP METHOD : GET
2018-08-09 20:27:41 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.welcome
2018-08-09 20:27:41 -参数 : [{}]
2018-08-09 20:27:41 -耗时 : 2
2018-08-09 20:27:41 -返回值 : redirect:/login
2018-08-09 20:27:41 -请求地址 : http://127.0.0.1:8000/login
2018-08-09 20:27:41 -HTTP METHOD : GET
2018-08-09 20:27:41 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 20:27:41 -参数 : []
2018-08-09 20:27:41 -耗时 : 0
2018-08-09 20:27:41 -返回值 : login
2018-08-09 20:27:57 -请求地址 : http://127.0.0.1:8000/login
2018-08-09 20:27:57 -HTTP METHOD : POST
2018-08-09 20:27:57 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 20:27:57 -参数 : [admin, 111111]
2018-08-09 20:27:57 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 20:27:58 -==> Parameters: admin(String)
2018-08-09 20:27:58 -<==      Total: 1
2018-08-09 20:27:58 -耗时 : 252
2018-08-09 20:27:58 -返回值 : {msg=操作成功, code=0}
2018-08-09 20:27:58 -请求地址 : http://127.0.0.1:8000/index
2018-08-09 20:27:58 -HTTP METHOD : GET
2018-08-09 20:27:58 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 20:27:58 -参数 : [{}]
2018-08-09 20:27:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 20:27:58 -==> Parameters: 1(Long)
2018-08-09 20:27:58 -<==      Total: 28
2018-08-09 20:27:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 20:27:58 -==> Parameters: 142(Long)
2018-08-09 20:27:58 -<==      Total: 1
2018-08-09 20:27:58 -耗时 : 42
2018-08-09 20:27:58 -返回值 : index_v1
2018-08-09 20:27:58 -请求地址 : http://127.0.0.1:8000/main
2018-08-09 20:27:58 -HTTP METHOD : GET
2018-08-09 20:27:58 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 20:27:58 -参数 : []
2018-08-09 20:27:58 -耗时 : 1
2018-08-09 20:27:58 -返回值 : main
2018-08-09 20:27:58 -请求地址 : http://127.0.0.1:8000/main
2018-08-09 20:27:58 -HTTP METHOD : GET
2018-08-09 20:27:58 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 20:27:58 -参数 : []
2018-08-09 20:27:58 -耗时 : 0
2018-08-09 20:27:58 -返回值 : main
2018-08-09 20:28:01 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:28:01 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-08-09 20:28:01 -==> Parameters: 1(Long)
2018-08-09 20:28:01 -<==      Total: 47
2018-08-09 20:28:01 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:28:01 -请求地址 : http://127.0.0.1:8000/sys/user/
2018-08-09 20:28:01 -HTTP METHOD : GET
2018-08-09 20:28:01 -CLASS_METHOD : com.zhy.management.system.controller.UserController.user
2018-08-09 20:28:01 -参数 : [{}]
2018-08-09 20:28:01 -耗时 : 0
2018-08-09 20:28:01 -返回值 : system/user/user
2018-08-09 20:28:02 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:28:02 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:28:02 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:28:02 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:28:02 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:28:02 -请求地址 : http://127.0.0.1:8000/system/sysDept/tree
2018-08-09 20:28:02 -HTTP METHOD : GET
2018-08-09 20:28:02 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.tree
2018-08-09 20:28:02 -参数 : []
2018-08-09 20:28:02 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 20:28:02 -==> Parameters: 
2018-08-09 20:28:02 -<==      Total: 12
2018-08-09 20:28:02 -耗时 : 5
2018-08-09 20:28:02 -请求地址 : http://127.0.0.1:8000/sys/user/list
2018-08-09 20:28:02 -HTTP METHOD : GET
2018-08-09 20:28:02 -CLASS_METHOD : com.zhy.management.system.controller.UserController.list
2018-08-09 20:28:02 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-08-09 20:28:02 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-08-09 20:28:02 -==> Parameters: 0(Integer), 10(Integer)
2018-08-09 20:28:02 -<==      Total: 7
2018-08-09 20:28:02 -==>  Preparing: select count(*) from sys_user 
2018-08-09 20:28:02 -==> Parameters: 
2018-08-09 20:28:02 -<==      Total: 1
2018-08-09 20:28:02 -耗时 : 24
2018-08-09 20:28:02 -返回值 : com.zhy.management.common.utils.PageUtils@590e8c8
2018-08-09 20:28:02 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"18","parentId":"13","state":{"opened":true},"text":"hahaha"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"人事"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"自然的恩典"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"福慧学院"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"17","parentId":"9","state":{"opened":true},"text":"人事"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"信息"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"总部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"视频部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"德养"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-08-09 20:28:28 -Starting App on zhy with PID 9092 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 20:28:28 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 20:28:28 -The following profiles are active: dev
2018-08-09 20:28:28 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 20:28:28 CST 2018]; root of context hierarchy
2018-08-09 20:28:28 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 20:28:28 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$aa024291] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:28:28 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$8b564721] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:28:28 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:28:29 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:28:29 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 20:28:29 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:28:29 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:28:29 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:28:29 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:28:29 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:28:29 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 20:28:29 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 20:28:29 -Starting service [Tomcat]
2018-08-09 20:28:29 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 20:28:29 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 20:28:29 -Initializing Spring embedded WebApplicationContext
2018-08-09 20:28:29 -Root WebApplicationContext: initialization completed in 1283 ms
2018-08-09 20:28:29 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 20:28:29 -Servlet dispatcherServlet mapped to [/]
2018-08-09 20:28:29 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 20:28:29 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 20:28:29 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 20:28:29 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 20:28:29 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 20:28:29 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 20:28:29 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 20:28:28 CST 2018]; root of context hierarchy
2018-08-09 20:28:29 -{dataSource-1} inited
2018-08-09 20:28:30 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 20:28:30 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 20:28:30 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 20:28:28 CST 2018]; root of context hierarchy
2018-08-09 20:28:30 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 20:28:30 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 20:28:30 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 20:28:30 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 20:28:30 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 20:28:30 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 20:28:30 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 20:28:30 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 20:28:30 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 20:28:30 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 20:28:30 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 20:28:30 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 20:28:30 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 20:28:30 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 20:28:30 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 20:28:30 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 20:28:30 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 20:28:30 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 20:28:30 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 20:28:30 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 20:28:30 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 20:28:30 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 20:28:30 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 20:28:30 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 20:28:30 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 20:28:30 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 20:28:30 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 20:28:30 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 20:28:30 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 20:28:30 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 20:28:30 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 20:28:30 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 20:28:30 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 20:28:30 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 20:28:30 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 20:28:30 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 20:28:30 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 20:28:30 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 20:28:30 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 20:28:30 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 20:28:30 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 20:28:30 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 20:28:30 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 20:28:30 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 20:28:30 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 20:28:30 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 20:28:30 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 20:28:30 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 20:28:30 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 20:28:30 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 20:28:30 -Using default implementation for ThreadExecutor
2018-08-09 20:28:30 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 20:28:30 -Quartz Scheduler v.2.2.1 created.
2018-08-09 20:28:30 -RAMJobStore initialized.
2018-08-09 20:28:30 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 20:28:30 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 20:28:30 -Quartz scheduler version: 2.2.1
2018-08-09 20:28:30 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@53125718
2018-08-09 20:28:31 -Registering beans for JMX exposure on startup
2018-08-09 20:28:31 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 20:28:31 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 20:28:31 -Starting beans in phase 2147483647
2018-08-09 20:28:31 -Starting Quartz Scheduler now
2018-08-09 20:28:31 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 20:28:31 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 20:28:31 -Using a shared selector for servlet write/read
2018-08-09 20:28:31 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 20:28:31 -Started App in 3.297 seconds (JVM running for 3.855)
2018-08-09 20:28:36 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 20:28:36 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 20:28:36 -FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2018-08-09 20:28:36 -Enabling session validation scheduler...
2018-08-09 20:28:36 -请求地址 : http://127.0.0.1:8000/index
2018-08-09 20:28:36 -HTTP METHOD : GET
2018-08-09 20:28:36 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 20:28:36 -参数 : [{}]
2018-08-09 20:28:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 20:28:36 -==> Parameters: 1(Long)
2018-08-09 20:28:36 -<==      Total: 28
2018-08-09 20:28:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 20:28:36 -==> Parameters: 142(Long)
2018-08-09 20:28:36 -<==      Total: 1
2018-08-09 20:28:36 -耗时 : 92
2018-08-09 20:28:36 -返回值 : index_v1
2018-08-09 20:28:37 -请求地址 : http://127.0.0.1:8000/main
2018-08-09 20:28:37 -HTTP METHOD : GET
2018-08-09 20:28:37 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 20:28:37 -参数 : []
2018-08-09 20:28:37 -耗时 : 0
2018-08-09 20:28:37 -返回值 : main
2018-08-09 20:28:37 -请求地址 : http://127.0.0.1:8000/main
2018-08-09 20:28:37 -HTTP METHOD : GET
2018-08-09 20:28:37 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 20:28:37 -参数 : []
2018-08-09 20:28:37 -耗时 : 0
2018-08-09 20:28:37 -返回值 : main
2018-08-09 20:28:40 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:28:40 -请求地址 : http://127.0.0.1:8000/system/sysDept
2018-08-09 20:28:40 -HTTP METHOD : GET
2018-08-09 20:28:40 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.dept
2018-08-09 20:28:40 -参数 : []
2018-08-09 20:28:40 -耗时 : 0
2018-08-09 20:28:40 -返回值 : system/dept/dept
2018-08-09 20:28:40 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:28:40 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:28:40 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:28:40 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:28:40 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:28:40 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:28:40 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:28:40 -请求地址 : http://127.0.0.1:8000/system/sysDept/list
2018-08-09 20:28:40 -HTTP METHOD : GET
2018-08-09 20:28:40 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.list
2018-08-09 20:28:40 -参数 : []
2018-08-09 20:28:40 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 20:28:40 -==> Parameters: 
2018-08-09 20:28:40 -<==      Total: 12
2018-08-09 20:28:40 -耗时 : 15
2018-08-09 20:28:40 -返回值 : [DeptDO{deptId=18, parentId=13, name='hahaha', orderNum=null, delFlag=null}, DeptDO{deptId=17, parentId=9, name='人事', orderNum=null, delFlag=1}, DeptDO{deptId=15, parentId=13, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='人事', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='自然的恩典', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='福慧学院', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='信息', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='总部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='行政', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='视频部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='德养', orderNum=1, delFlag=1}]
2018-08-09 20:28:43 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:28:43 -请求地址 : http://127.0.0.1:8000/sys/user/
2018-08-09 20:28:43 -HTTP METHOD : GET
2018-08-09 20:28:43 -CLASS_METHOD : com.zhy.management.system.controller.UserController.user
2018-08-09 20:28:43 -参数 : [{}]
2018-08-09 20:28:43 -耗时 : 0
2018-08-09 20:28:43 -返回值 : system/user/user
2018-08-09 20:28:43 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:28:43 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:28:43 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:28:43 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:28:43 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:28:43 -请求地址 : http://127.0.0.1:8000/system/sysDept/tree
2018-08-09 20:28:43 -HTTP METHOD : GET
2018-08-09 20:28:43 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.tree
2018-08-09 20:28:43 -参数 : []
2018-08-09 20:28:43 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 20:28:43 -==> Parameters: 
2018-08-09 20:28:43 -<==      Total: 12
2018-08-09 20:28:43 -耗时 : 3
2018-08-09 20:28:43 -请求地址 : http://127.0.0.1:8000/sys/user/list
2018-08-09 20:28:43 -HTTP METHOD : GET
2018-08-09 20:28:43 -CLASS_METHOD : com.zhy.management.system.controller.UserController.list
2018-08-09 20:28:43 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-08-09 20:28:43 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-08-09 20:28:43 -==> Parameters: 0(Integer), 10(Integer)
2018-08-09 20:28:43 -<==      Total: 7
2018-08-09 20:28:43 -==>  Preparing: select count(*) from sys_user 
2018-08-09 20:28:43 -==> Parameters: 
2018-08-09 20:28:43 -<==      Total: 1
2018-08-09 20:28:43 -耗时 : 14
2018-08-09 20:28:43 -返回值 : com.zhy.management.common.utils.PageUtils@6e8e3454
2018-08-09 20:28:43 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"18","parentId":"13","state":{"opened":true},"text":"hahaha"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"人事"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"自然的恩典"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"福慧学院"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"17","parentId":"9","state":{"opened":true},"text":"人事"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"信息"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"总部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"视频部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"德养"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-08-09 20:38:11 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:184)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:93)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1767)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:106)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:889)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:433)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:362)
	at redis.clients.util.Pool.getResource(Pool.java:49)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:226)
	at com.zhy.management.common.redis.shiro.RedisManager.get(RedisManager.java:66)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:94)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 20:38:12 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:184)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:93)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1767)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:106)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:889)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:433)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:362)
	at redis.clients.util.Pool.getResource(Pool.java:49)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:226)
	at com.zhy.management.common.redis.shiro.RedisManager.get(RedisManager.java:66)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:94)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:83)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 20:38:13 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:184)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:93)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1767)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:106)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:889)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:433)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:362)
	at redis.clients.util.Pool.getResource(Pool.java:49)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:226)
	at com.zhy.management.common.redis.shiro.RedisManager.get(RedisManager.java:66)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:94)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 20:38:14 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:184)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:93)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1767)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:106)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:889)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:433)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:362)
	at redis.clients.util.Pool.getResource(Pool.java:49)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:226)
	at com.zhy.management.common.redis.shiro.RedisManager.get(RedisManager.java:66)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:94)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:83)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 20:38:23 -Starting App on zhy with PID 13384 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 20:38:23 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 20:38:23 -The following profiles are active: dev
2018-08-09 20:38:23 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2c1b194a: startup date [Thu Aug 09 20:38:23 CST 2018]; root of context hierarchy
2018-08-09 20:38:23 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 20:38:24 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3dbbcfee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:38:24 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$1f0fd47e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:38:24 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:38:24 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:38:24 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 20:38:24 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:38:24 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:38:24 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:38:24 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:38:24 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:38:24 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 20:38:24 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 20:38:24 -Starting service [Tomcat]
2018-08-09 20:38:24 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 20:38:24 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 20:38:24 -Initializing Spring embedded WebApplicationContext
2018-08-09 20:38:24 -Root WebApplicationContext: initialization completed in 1287 ms
2018-08-09 20:38:25 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 20:38:25 -Servlet dispatcherServlet mapped to [/]
2018-08-09 20:38:25 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 20:38:25 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 20:38:25 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 20:38:25 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 20:38:25 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 20:38:25 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 20:38:25 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2c1b194a: startup date [Thu Aug 09 20:38:23 CST 2018]; root of context hierarchy
2018-08-09 20:38:25 -{dataSource-1} inited
2018-08-09 20:38:25 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 20:38:25 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 20:38:25 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2c1b194a: startup date [Thu Aug 09 20:38:23 CST 2018]; root of context hierarchy
2018-08-09 20:38:25 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 20:38:25 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 20:38:25 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 20:38:25 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 20:38:25 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 20:38:25 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 20:38:25 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 20:38:25 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 20:38:25 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 20:38:25 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 20:38:25 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 20:38:25 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 20:38:25 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 20:38:25 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 20:38:25 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 20:38:25 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 20:38:25 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 20:38:25 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 20:38:25 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 20:38:25 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 20:38:25 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 20:38:25 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 20:38:25 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 20:38:25 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 20:38:25 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 20:38:25 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 20:38:25 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 20:38:25 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 20:38:25 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 20:38:25 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 20:38:25 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 20:38:25 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 20:38:25 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 20:38:25 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 20:38:25 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 20:38:25 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 20:38:25 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 20:38:25 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 20:38:25 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 20:38:25 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 20:38:25 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 20:38:25 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 20:38:25 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 20:38:25 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 20:38:25 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 20:38:25 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 20:38:25 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 20:38:25 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 20:38:25 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 20:38:26 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 20:38:26 -Using default implementation for ThreadExecutor
2018-08-09 20:38:26 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 20:38:26 -Quartz Scheduler v.2.2.1 created.
2018-08-09 20:38:26 -RAMJobStore initialized.
2018-08-09 20:38:26 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 20:38:26 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 20:38:26 -Quartz scheduler version: 2.2.1
2018-08-09 20:38:26 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@7761e342
2018-08-09 20:38:26 -Registering beans for JMX exposure on startup
2018-08-09 20:38:26 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 20:38:26 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 20:38:26 -Starting beans in phase 2147483647
2018-08-09 20:38:26 -Starting Quartz Scheduler now
2018-08-09 20:38:26 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 20:38:26 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 20:38:26 -Using a shared selector for servlet write/read
2018-08-09 20:38:26 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 20:38:26 -Started App in 3.371 seconds (JVM running for 4.111)
2018-08-09 20:38:36 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 20:38:36 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 20:38:36 -FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2018-08-09 20:38:36 -Enabling session validation scheduler...
2018-08-09 20:38:37 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:184)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:93)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1767)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:106)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:889)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:433)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:362)
	at redis.clients.util.Pool.getResource(Pool.java:49)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:226)
	at com.zhy.management.common.redis.shiro.RedisManager.get(RedisManager.java:66)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:94)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 20:38:38 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:184)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:93)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1767)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:106)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:889)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:433)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:362)
	at redis.clients.util.Pool.getResource(Pool.java:49)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:226)
	at com.zhy.management.common.redis.shiro.RedisManager.get(RedisManager.java:66)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:94)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:83)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 20:38:54 -请求地址 : http://127.0.0.1:8000/login;JSESSIONID=41250a63-6941-4d5e-b1f4-3a9037431021
2018-08-09 20:38:54 -HTTP METHOD : GET
2018-08-09 20:38:54 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 20:38:54 -参数 : []
2018-08-09 20:38:54 -耗时 : 1
2018-08-09 20:38:54 -返回值 : login
2018-08-09 20:38:54 -请求地址 : http://127.0.0.1:8000/login
2018-08-09 20:38:54 -HTTP METHOD : GET
2018-08-09 20:38:54 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.login
2018-08-09 20:38:54 -参数 : []
2018-08-09 20:38:54 -耗时 : 0
2018-08-09 20:38:54 -返回值 : login
2018-08-09 20:38:55 -请求地址 : http://127.0.0.1:8000/login
2018-08-09 20:38:55 -HTTP METHOD : POST
2018-08-09 20:38:55 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 20:38:55 -参数 : [admin, 111111]
2018-08-09 20:38:55 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 20:38:55 -==> Parameters: admin(String)
2018-08-09 20:38:55 -<==      Total: 1
2018-08-09 20:38:55 -耗时 : 200
2018-08-09 20:38:55 -返回值 : {msg=操作成功, code=0}
2018-08-09 20:38:55 -请求地址 : http://127.0.0.1:8000/index
2018-08-09 20:38:55 -HTTP METHOD : GET
2018-08-09 20:38:55 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 20:38:55 -参数 : [{}]
2018-08-09 20:38:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 20:38:55 -==> Parameters: 1(Long)
2018-08-09 20:38:55 -<==      Total: 28
2018-08-09 20:38:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 20:38:55 -==> Parameters: 142(Long)
2018-08-09 20:38:55 -<==      Total: 1
2018-08-09 20:38:55 -耗时 : 26
2018-08-09 20:38:55 -返回值 : index_v1
2018-08-09 20:38:55 -请求地址 : http://127.0.0.1:8000/main
2018-08-09 20:38:55 -HTTP METHOD : GET
2018-08-09 20:38:55 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 20:38:55 -参数 : []
2018-08-09 20:38:55 -耗时 : 0
2018-08-09 20:38:55 -返回值 : main
2018-08-09 20:38:56 -请求地址 : http://127.0.0.1:8000/main
2018-08-09 20:38:56 -HTTP METHOD : GET
2018-08-09 20:38:56 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 20:38:56 -参数 : []
2018-08-09 20:38:56 -耗时 : 0
2018-08-09 20:38:56 -返回值 : main
2018-08-09 20:38:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:38:58 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-08-09 20:38:58 -==> Parameters: 1(Long)
2018-08-09 20:38:58 -<==      Total: 47
2018-08-09 20:38:58 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:38:58 -请求地址 : http://127.0.0.1:8000/sys/user
2018-08-09 20:38:58 -HTTP METHOD : GET
2018-08-09 20:38:58 -CLASS_METHOD : com.zhy.management.system.controller.UserController.user
2018-08-09 20:38:58 -参数 : [{}]
2018-08-09 20:38:58 -耗时 : 0
2018-08-09 20:38:58 -返回值 : system/user/user
2018-08-09 20:38:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:38:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:38:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:38:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:38:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:38:59 -请求地址 : http://127.0.0.1:8000/system/sysDept/tree
2018-08-09 20:38:59 -HTTP METHOD : GET
2018-08-09 20:38:59 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.tree
2018-08-09 20:38:59 -参数 : []
2018-08-09 20:38:59 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 20:38:59 -==> Parameters: 
2018-08-09 20:38:59 -<==      Total: 12
2018-08-09 20:38:59 -耗时 : 6
2018-08-09 20:38:59 -请求地址 : http://127.0.0.1:8000/sys/user/list
2018-08-09 20:38:59 -HTTP METHOD : GET
2018-08-09 20:38:59 -CLASS_METHOD : com.zhy.management.system.controller.UserController.list
2018-08-09 20:38:59 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-08-09 20:38:59 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-08-09 20:38:59 -==> Parameters: 0(Integer), 10(Integer)
2018-08-09 20:38:59 -<==      Total: 7
2018-08-09 20:38:59 -==>  Preparing: select count(*) from sys_user 
2018-08-09 20:38:59 -==> Parameters: 
2018-08-09 20:38:59 -<==      Total: 1
2018-08-09 20:38:59 -耗时 : 12
2018-08-09 20:38:59 -返回值 : com.zhy.management.common.utils.PageUtils@2690d077
2018-08-09 20:38:59 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"18","parentId":"13","state":{"opened":true},"text":"hahaha"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"人事"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"自然的恩典"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"福慧学院"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"17","parentId":"9","state":{"opened":true},"text":"人事"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"信息"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"总部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"视频部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"德养"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-08-09 20:39:04 -请求地址 : http://127.0.0.1:8000/sys/user/list
2018-08-09 20:39:04 -HTTP METHOD : GET
2018-08-09 20:39:04 -CLASS_METHOD : com.zhy.management.system.controller.UserController.list
2018-08-09 20:39:04 -参数 : [{}]
2018-08-09 20:39:04 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.zhy.management.common.utils.Query.<init>(Query.java:19)
	at com.zhy.management.system.controller.UserController.list(UserController.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.zhy.management.common.aspect.WebLogAspect.doAround(WebLogAspect.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.zhy.management.system.controller.UserController$$EnhancerBySpringCGLIB$$644d9913.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 20:39:20 -请求地址 : http://127.0.0.1:8000/sys/user/list
2018-08-09 20:39:20 -HTTP METHOD : GET
2018-08-09 20:39:20 -CLASS_METHOD : com.zhy.management.system.controller.UserController.list
2018-08-09 20:39:20 -参数 : [{}]
2018-08-09 20:39:20 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.zhy.management.common.utils.Query.<init>(Query.java:19)
	at com.zhy.management.system.controller.UserController.list(UserController.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.zhy.management.common.aspect.WebLogAspect.doAround(WebLogAspect.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.zhy.management.system.controller.UserController$$EnhancerBySpringCGLIB$$644d9913.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 20:42:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:42:11 -请求地址 : http://127.0.0.1:8000/sys/user
2018-08-09 20:42:11 -HTTP METHOD : GET
2018-08-09 20:42:11 -CLASS_METHOD : com.zhy.management.system.controller.UserController.user
2018-08-09 20:42:11 -参数 : [{}]
2018-08-09 20:42:11 -耗时 : 0
2018-08-09 20:42:11 -返回值 : system/user/user
2018-08-09 20:42:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:42:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:42:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:42:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:42:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:42:12 -请求地址 : http://127.0.0.1:8000/system/sysDept/tree
2018-08-09 20:42:12 -HTTP METHOD : GET
2018-08-09 20:42:12 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.tree
2018-08-09 20:42:12 -参数 : []
2018-08-09 20:42:12 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 20:42:12 -==> Parameters: 
2018-08-09 20:42:12 -<==      Total: 12
2018-08-09 20:42:12 -耗时 : 3
2018-08-09 20:42:12 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"18","parentId":"13","state":{"opened":true},"text":"hahaha"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"人事"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"自然的恩典"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"福慧学院"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"17","parentId":"9","state":{"opened":true},"text":"人事"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"信息"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"总部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"视频部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"德养"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-08-09 20:42:12 -请求地址 : http://127.0.0.1:8000/sys/user/list
2018-08-09 20:42:12 -HTTP METHOD : GET
2018-08-09 20:42:12 -CLASS_METHOD : com.zhy.management.system.controller.UserController.list
2018-08-09 20:42:12 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-08-09 20:42:12 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-08-09 20:42:12 -==> Parameters: 0(Integer), 10(Integer)
2018-08-09 20:42:12 -<==      Total: 7
2018-08-09 20:42:12 -==>  Preparing: select count(*) from sys_user 
2018-08-09 20:42:12 -==> Parameters: 
2018-08-09 20:42:12 -<==      Total: 1
2018-08-09 20:42:12 -耗时 : 6
2018-08-09 20:42:12 -返回值 : com.zhy.management.common.utils.PageUtils@58c27203
2018-08-09 20:43:34 -Starting App on zhy with PID 12932 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 20:43:34 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 20:43:34 -The following profiles are active: dev
2018-08-09 20:43:34 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 20:43:34 CST 2018]; root of context hierarchy
2018-08-09 20:43:34 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 20:43:35 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$532bf8fb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:43:35 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$347ffd8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:43:35 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:43:35 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:43:35 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 20:43:35 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:43:35 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:43:35 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:43:35 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:43:35 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:43:35 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 20:43:35 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 20:43:35 -Starting service [Tomcat]
2018-08-09 20:43:35 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 20:43:35 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 20:43:36 -Initializing Spring embedded WebApplicationContext
2018-08-09 20:43:36 -Root WebApplicationContext: initialization completed in 1393 ms
2018-08-09 20:43:36 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 20:43:36 -Servlet dispatcherServlet mapped to [/]
2018-08-09 20:43:36 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 20:43:36 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 20:43:36 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 20:43:36 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 20:43:36 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 20:43:36 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 20:43:36 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 20:43:34 CST 2018]; root of context hierarchy
2018-08-09 20:43:36 -{dataSource-1} inited
2018-08-09 20:43:36 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 20:43:37 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 20:43:37 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 20:43:34 CST 2018]; root of context hierarchy
2018-08-09 20:43:37 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 20:43:37 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 20:43:37 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 20:43:37 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 20:43:37 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 20:43:37 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 20:43:37 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 20:43:37 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 20:43:37 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 20:43:37 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 20:43:37 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 20:43:37 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 20:43:37 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 20:43:37 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 20:43:37 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 20:43:37 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 20:43:37 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 20:43:37 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 20:43:37 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 20:43:37 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 20:43:37 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 20:43:37 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 20:43:37 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 20:43:37 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 20:43:37 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 20:43:37 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 20:43:37 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 20:43:37 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 20:43:37 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 20:43:37 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 20:43:37 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 20:43:37 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 20:43:37 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 20:43:37 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 20:43:37 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 20:43:37 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 20:43:37 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 20:43:37 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 20:43:37 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 20:43:37 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 20:43:37 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 20:43:37 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 20:43:37 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 20:43:37 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 20:43:37 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 20:43:37 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 20:43:37 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 20:43:37 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 20:43:37 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 20:43:37 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 20:43:37 -Using default implementation for ThreadExecutor
2018-08-09 20:43:37 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 20:43:37 -Quartz Scheduler v.2.2.1 created.
2018-08-09 20:43:37 -RAMJobStore initialized.
2018-08-09 20:43:37 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 20:43:37 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 20:43:37 -Quartz scheduler version: 2.2.1
2018-08-09 20:43:37 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@47058864
2018-08-09 20:43:37 -Registering beans for JMX exposure on startup
2018-08-09 20:43:37 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 20:43:37 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 20:43:37 -Starting beans in phase 2147483647
2018-08-09 20:43:37 -Starting Quartz Scheduler now
2018-08-09 20:43:37 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 20:43:37 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 20:43:38 -Using a shared selector for servlet write/read
2018-08-09 20:43:38 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 20:43:38 -Started App in 3.737 seconds (JVM running for 4.277)
2018-08-09 20:43:38 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 20:43:38 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 20:43:38 -FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2018-08-09 20:43:38 -Enabling session validation scheduler...
2018-08-09 20:43:45 -请求地址 : http://127.0.0.1:8000/main
2018-08-09 20:43:45 -HTTP METHOD : GET
2018-08-09 20:43:45 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 20:43:45 -参数 : []
2018-08-09 20:43:45 -耗时 : 2
2018-08-09 20:43:45 -返回值 : main
2018-08-09 20:43:45 -请求地址 : http://127.0.0.1:8000/main
2018-08-09 20:43:45 -HTTP METHOD : GET
2018-08-09 20:43:45 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 20:43:45 -参数 : []
2018-08-09 20:43:45 -耗时 : 0
2018-08-09 20:43:45 -返回值 : main
2018-08-09 20:43:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:43:53 -请求地址 : http://127.0.0.1:8000/sys/user/
2018-08-09 20:43:53 -HTTP METHOD : GET
2018-08-09 20:43:53 -CLASS_METHOD : com.zhy.management.system.controller.UserController.user
2018-08-09 20:43:53 -参数 : [{}]
2018-08-09 20:43:53 -耗时 : 0
2018-08-09 20:43:53 -返回值 : system/user/user
2018-08-09 20:43:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:43:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:43:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:43:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:43:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:43:53 -请求地址 : http://127.0.0.1:8000/system/sysDept/tree
2018-08-09 20:43:53 -HTTP METHOD : GET
2018-08-09 20:43:53 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.tree
2018-08-09 20:43:53 -参数 : []
2018-08-09 20:43:53 -请求地址 : http://127.0.0.1:8000/sys/user/list
2018-08-09 20:43:53 -HTTP METHOD : GET
2018-08-09 20:43:53 -CLASS_METHOD : com.zhy.management.system.controller.UserController.list
2018-08-09 20:43:53 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-08-09 20:43:53 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-08-09 20:43:53 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 20:43:53 -==> Parameters: 
2018-08-09 20:43:53 -==> Parameters: 0(Integer), 10(Integer)
2018-08-09 20:43:53 -<==      Total: 12
2018-08-09 20:43:53 -<==      Total: 7
2018-08-09 20:43:53 -耗时 : 198
2018-08-09 20:43:53 -==>  Preparing: select count(*) from sys_user 
2018-08-09 20:43:53 -==> Parameters: 
2018-08-09 20:43:53 -<==      Total: 1
2018-08-09 20:43:53 -耗时 : 193
2018-08-09 20:43:53 -返回值 : com.zhy.management.common.utils.PageUtils@47ca5cb
2018-08-09 20:43:53 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"18","parentId":"13","state":{"opened":true},"text":"hahaha"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"人事"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"自然的恩典"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"福慧学院"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"17","parentId":"9","state":{"opened":true},"text":"人事"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"信息"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"总部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"视频部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"德养"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-08-09 20:44:17 -Starting App on zhy with PID 12632 (started by zhy53 in E:\GitRepository\IntelliJ IDEA\management)
2018-08-09 20:44:17 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2018-08-09 20:44:17 -The following profiles are active: dev
2018-08-09 20:44:17 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 20:44:17 CST 2018]; root of context hierarchy
2018-08-09 20:44:18 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-09 20:44:18 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f441b3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:44:18 -Bean 'shiroConfig' of type [com.zhy.management.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f0981fcf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:44:18 -Bean 'userRealm' of type [com.zhy.management.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:44:18 -Bean 'redisManager' of type [com.zhy.management.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:44:18 -获取名称为: com.zhy.management.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-08-09 20:44:18 -Bean 'redisSessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:44:18 -Bean 'sessionDAO' of type [com.zhy.management.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:44:18 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:44:18 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:44:18 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-09 20:44:19 -Tomcat initialized with port(s): 8000 (http)
2018-08-09 20:44:19 -Initializing ProtocolHandler ["http-nio-8000"]
2018-08-09 20:44:19 -Starting service [Tomcat]
2018-08-09 20:44:19 -Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-09 20:44:19 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\jdk1.8.0_171\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;D:\php-7.2.7;C:\ProgramData\ComposerSetup\bin;C:\Users\zhy53\AppData\Local\Microsoft\WindowsApps;D:\Java\jdk1.8.0_171\bin;D:\Java\jdk1.8.0_171\jre\bin;D:\mysql-5.7.21\bin;D:\MinGW\bin;C:\Users\zhy53\AppData\Roaming\Composer\vendor\bin;.]
2018-08-09 20:44:19 -Initializing Spring embedded WebApplicationContext
2018-08-09 20:44:19 -Root WebApplicationContext: initialization completed in 1302 ms
2018-08-09 20:44:19 -Servlet statViewServlet mapped to [/druid/*]
2018-08-09 20:44:19 -Servlet dispatcherServlet mapped to [/]
2018-08-09 20:44:19 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-09 20:44:19 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-09 20:44:19 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-09 20:44:19 -Mapping filter: 'requestContextFilter' to: [/*]
2018-08-09 20:44:19 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-08-09 20:44:19 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-08-09 20:44:19 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 20:44:17 CST 2018]; root of context hierarchy
2018-08-09 20:44:19 -{dataSource-1} inited
2018-08-09 20:44:19 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/apache-maven-repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2018-08-09 20:44:19 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 20:44:20 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36916eb0: startup date [Thu Aug 09 20:44:17 CST 2018]; root of context hierarchy
2018-08-09 20:44:20 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-08-09 20:44:20 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long)
2018-08-09 20:44:20 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.remove(java.lang.Long[])
2018-08-09 20:44:20 -Mapped "{[/system/sysDept/update]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.update(com.zhy.management.system.vo.DeptDO)
2018-08-09 20:44:20 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.list()
2018-08-09 20:44:20 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.zhy.management.common.utils.R com.zhy.management.system.controller.DeptController.save(com.zhy.management.system.vo.DeptDO)
2018-08-09 20:44:20 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.DeptController.tree()
2018-08-09 20:44:20 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.treeView()
2018-08-09 20:44:20 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.dept()
2018-08-09 20:44:20 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-08-09 20:44:20 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.index(org.springframework.ui.Model)
2018-08-09 20:44:20 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.main()
2018-08-09 20:44:20 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-08-09 20:44:20 -Mapped "{[/login],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-08-09 20:44:20 -Mapped "{[/login]}" onto java.lang.String com.zhy.management.system.controller.LoginController.login()
2018-08-09 20:44:20 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.LoginController.logout()
2018-08-09 20:44:20 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-08-09 20:44:20 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.remove(java.lang.Long)
2018-08-09 20:44:20 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.update(com.zhy.management.system.vo.MenuDO)
2018-08-09 20:44:20 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 20:44:20 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.MenuController.save(com.zhy.management.system.vo.MenuDO)
2018-08-09 20:44:20 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree(java.lang.Long)
2018-08-09 20:44:20 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.MenuDO> com.zhy.management.system.controller.MenuController.tree()
2018-08-09 20:44:20 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-08-09 20:44:20 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 20:44:20 -Mapped "{[/hello/list],methods=[GET]}" onto public java.util.List<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.MyController.list()
2018-08-09 20:44:20 -Mapped "{[/hello],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.MyController.dept()
2018-08-09 20:44:20 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.zhy.management.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 20:44:20 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.add(org.springframework.ui.Model)
2018-08-09 20:44:20 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.remove(java.lang.Long)
2018-08-09 20:44:20 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.update(com.zhy.management.system.vo.UserDO)
2018-08-09 20:44:20 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.zhy.management.common.utils.PageUtils com.zhy.management.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-08-09 20:44:20 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.save(com.zhy.management.system.vo.UserDO)
2018-08-09 20:44:20 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.batchRemove(java.lang.Long[])
2018-08-09 20:44:20 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.zhy.management.common.vo.Tree<com.zhy.management.system.vo.DeptDO> com.zhy.management.system.controller.UserController.tree()
2018-08-09 20:44:20 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.user(org.springframework.ui.Model)
2018-08-09 20:44:20 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.treeView()
2018-08-09 20:44:20 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.resetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 20:44:20 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-08-09 20:44:20 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.adminResetPwd(com.zhy.management.system.vo.UserVO)
2018-08-09 20:44:20 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.personal(org.springframework.ui.Model)
2018-08-09 20:44:20 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.updatePeronal(com.zhy.management.system.vo.UserDO)
2018-08-09 20:44:20 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.zhy.management.common.utils.R com.zhy.management.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-08-09 20:44:20 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.zhy.management.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-08-09 20:44:20 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-09 20:44:20 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-09 20:44:20 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 20:44:20 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 20:44:20 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-09 20:44:20 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-08-09 20:44:20 -Using default implementation for ThreadExecutor
2018-08-09 20:44:20 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-08-09 20:44:20 -Quartz Scheduler v.2.2.1 created.
2018-08-09 20:44:20 -RAMJobStore initialized.
2018-08-09 20:44:20 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-08-09 20:44:20 -Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2018-08-09 20:44:20 -Quartz scheduler version: 2.2.1
2018-08-09 20:44:20 -JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@ad3f70a
2018-08-09 20:44:20 -Registering beans for JMX exposure on startup
2018-08-09 20:44:20 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-08-09 20:44:20 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-08-09 20:44:20 -Starting beans in phase 2147483647
2018-08-09 20:44:20 -Starting Quartz Scheduler now
2018-08-09 20:44:20 -Scheduler quartzScheduler_$_NON_CLUSTERED started.
2018-08-09 20:44:20 -Starting ProtocolHandler ["http-nio-8000"]
2018-08-09 20:44:20 -Using a shared selector for servlet write/read
2018-08-09 20:44:20 -Tomcat started on port(s): 8000 (http) with context path ''
2018-08-09 20:44:20 -Started App in 3.363 seconds (JVM running for 3.902)
2018-08-09 20:44:23 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-09 20:44:23 -FrameworkServlet 'dispatcherServlet': initialization started
2018-08-09 20:44:23 -FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
2018-08-09 20:44:23 -Enabling session validation scheduler...
2018-08-09 20:44:23 -请求地址 : http://127.0.0.1:8000/index
2018-08-09 20:44:23 -HTTP METHOD : GET
2018-08-09 20:44:23 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 20:44:23 -参数 : [{}]
2018-08-09 20:44:23 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 20:44:23 -==> Parameters: 1(Long)
2018-08-09 20:44:23 -<==      Total: 28
2018-08-09 20:44:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 20:44:23 -==> Parameters: 142(Long)
2018-08-09 20:44:23 -<==      Total: 1
2018-08-09 20:44:23 -耗时 : 91
2018-08-09 20:44:23 -返回值 : index_v1
2018-08-09 20:44:24 -请求地址 : http://127.0.0.1:8000/main
2018-08-09 20:44:24 -HTTP METHOD : GET
2018-08-09 20:44:24 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 20:44:24 -参数 : []
2018-08-09 20:44:24 -耗时 : 0
2018-08-09 20:44:24 -返回值 : main
2018-08-09 20:44:24 -请求地址 : http://127.0.0.1:8000/main
2018-08-09 20:44:24 -HTTP METHOD : GET
2018-08-09 20:44:24 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 20:44:24 -参数 : []
2018-08-09 20:44:24 -耗时 : 0
2018-08-09 20:44:24 -返回值 : main
2018-08-09 20:44:27 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:44:27 -请求地址 : http://127.0.0.1:8000/sys/user/
2018-08-09 20:44:27 -HTTP METHOD : GET
2018-08-09 20:44:27 -CLASS_METHOD : com.zhy.management.system.controller.UserController.user
2018-08-09 20:44:27 -参数 : [{}]
2018-08-09 20:44:27 -耗时 : 0
2018-08-09 20:44:27 -返回值 : system/user/user
2018-08-09 20:44:27 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:44:27 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:44:27 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:44:27 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:44:27 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:44:27 -请求地址 : http://127.0.0.1:8000/system/sysDept/tree
2018-08-09 20:44:27 -HTTP METHOD : GET
2018-08-09 20:44:27 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.tree
2018-08-09 20:44:27 -参数 : []
2018-08-09 20:44:27 -请求地址 : http://127.0.0.1:8000/sys/user/list
2018-08-09 20:44:27 -HTTP METHOD : GET
2018-08-09 20:44:27 -CLASS_METHOD : com.zhy.management.system.controller.UserController.list
2018-08-09 20:44:27 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-08-09 20:44:27 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-08-09 20:44:27 -==> Parameters: 0(Integer), 10(Integer)
2018-08-09 20:44:27 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 20:44:27 -==> Parameters: 
2018-08-09 20:44:27 -<==      Total: 12
2018-08-09 20:44:27 -耗时 : 23
2018-08-09 20:44:27 -<==      Total: 7
2018-08-09 20:44:27 -==>  Preparing: select count(*) from sys_user 
2018-08-09 20:44:27 -==> Parameters: 
2018-08-09 20:44:27 -<==      Total: 1
2018-08-09 20:44:27 -耗时 : 17
2018-08-09 20:44:27 -返回值 : com.zhy.management.common.utils.PageUtils@4b0f2881
2018-08-09 20:44:27 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"18","parentId":"13","state":{"opened":true},"text":"hahaha"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"人事"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"自然的恩典"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"福慧学院"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"17","parentId":"9","state":{"opened":true},"text":"人事"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"信息"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"总部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"视频部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"德养"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-08-09 20:45:22 -请求地址 : http://127.0.0.1:8000/sys/user/list
2018-08-09 20:45:22 -HTTP METHOD : GET
2018-08-09 20:45:22 -CLASS_METHOD : com.zhy.management.system.controller.UserController.list
2018-08-09 20:45:22 -参数 : [{}]
2018-08-09 20:45:22 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.zhy.management.common.utils.Query.<init>(Query.java:19)
	at com.zhy.management.system.controller.UserController.list(UserController.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.zhy.management.common.aspect.WebLogAspect.doAround(WebLogAspect.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.zhy.management.system.controller.UserController$$EnhancerBySpringCGLIB$$5d656bae.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 20:45:49 -请求地址 : http://127.0.0.1:8000/sys/user/list
2018-08-09 20:45:49 -HTTP METHOD : GET
2018-08-09 20:45:49 -CLASS_METHOD : com.zhy.management.system.controller.UserController.list
2018-08-09 20:45:49 -参数 : [{limit=10, offset=0}]
2018-08-09 20:45:49 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-08-09 20:45:49 -==> Parameters: 0(Integer), 10(Integer)
2018-08-09 20:45:49 -<==      Total: 7
2018-08-09 20:45:49 -==>  Preparing: select count(*) from sys_user 
2018-08-09 20:45:49 -==> Parameters: 
2018-08-09 20:45:49 -<==      Total: 1
2018-08-09 20:45:49 -耗时 : 5
2018-08-09 20:45:49 -返回值 : com.zhy.management.common.utils.PageUtils@797363c0
2018-08-09 20:56:00 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:184)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:93)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1767)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:106)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:889)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:433)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:362)
	at redis.clients.util.Pool.getResource(Pool.java:49)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:226)
	at com.zhy.management.common.redis.shiro.RedisManager.get(RedisManager.java:66)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:94)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 20:56:02 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:184)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:93)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1767)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:106)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:889)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:433)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:362)
	at redis.clients.util.Pool.getResource(Pool.java:49)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:226)
	at com.zhy.management.common.redis.shiro.RedisManager.get(RedisManager.java:66)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:94)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:83)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 20:56:04 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:184)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:93)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1767)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:106)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:889)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:433)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:362)
	at redis.clients.util.Pool.getResource(Pool.java:49)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:226)
	at com.zhy.management.common.redis.shiro.RedisManager.get(RedisManager.java:66)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:94)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:83)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 20:56:05 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:184)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:93)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1767)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:106)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:889)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:433)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:362)
	at redis.clients.util.Pool.getResource(Pool.java:49)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:226)
	at com.zhy.management.common.redis.shiro.RedisManager.get(RedisManager.java:66)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:94)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 20:56:06 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:184)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:93)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1767)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:106)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:889)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:433)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:362)
	at redis.clients.util.Pool.getResource(Pool.java:49)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:226)
	at com.zhy.management.common.redis.shiro.RedisManager.get(RedisManager.java:66)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:94)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 20:56:08 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:184)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:93)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1767)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:106)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:889)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:433)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:362)
	at redis.clients.util.Pool.getResource(Pool.java:49)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:226)
	at com.zhy.management.common.redis.shiro.RedisManager.get(RedisManager.java:66)
	at com.zhy.management.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:94)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-08-09 20:56:16 -请求地址 : http://127.0.0.1:8000/login
2018-08-09 20:56:16 -HTTP METHOD : POST
2018-08-09 20:56:16 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.ajaxLogin
2018-08-09 20:56:16 -参数 : [admin, 111111]
2018-08-09 20:56:16 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-08-09 20:56:16 -==> Parameters: admin(String)
2018-08-09 20:56:16 -<==      Total: 1
2018-08-09 20:56:16 -耗时 : 7
2018-08-09 20:56:16 -返回值 : {msg=操作成功, code=0}
2018-08-09 20:56:16 -请求地址 : http://127.0.0.1:8000/index
2018-08-09 20:56:16 -HTTP METHOD : GET
2018-08-09 20:56:16 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.index
2018-08-09 20:56:16 -参数 : [{}]
2018-08-09 20:56:16 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-08-09 20:56:16 -==> Parameters: 1(Long)
2018-08-09 20:56:16 -<==      Total: 28
2018-08-09 20:56:16 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-08-09 20:56:16 -==> Parameters: 142(Long)
2018-08-09 20:56:16 -<==      Total: 1
2018-08-09 20:56:16 -耗时 : 6
2018-08-09 20:56:16 -返回值 : index_v1
2018-08-09 20:56:16 -请求地址 : http://127.0.0.1:8000/main
2018-08-09 20:56:16 -HTTP METHOD : GET
2018-08-09 20:56:16 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 20:56:16 -参数 : []
2018-08-09 20:56:16 -耗时 : 0
2018-08-09 20:56:16 -返回值 : main
2018-08-09 20:56:16 -请求地址 : http://127.0.0.1:8000/main
2018-08-09 20:56:16 -HTTP METHOD : GET
2018-08-09 20:56:16 -CLASS_METHOD : com.zhy.management.system.controller.LoginController.main
2018-08-09 20:56:16 -参数 : []
2018-08-09 20:56:16 -耗时 : 0
2018-08-09 20:56:16 -返回值 : main
2018-08-09 20:56:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:56:21 -请求地址 : http://127.0.0.1:8000/sys/user/
2018-08-09 20:56:21 -HTTP METHOD : GET
2018-08-09 20:56:21 -CLASS_METHOD : com.zhy.management.system.controller.UserController.user
2018-08-09 20:56:21 -参数 : [{}]
2018-08-09 20:56:21 -耗时 : 0
2018-08-09 20:56:21 -返回值 : system/user/user
2018-08-09 20:56:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:56:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:56:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:56:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:56:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='111111', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=142, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-08-09 20:56:21 -请求地址 : http://127.0.0.1:8000/system/sysDept/tree
2018-08-09 20:56:21 -HTTP METHOD : GET
2018-08-09 20:56:21 -CLASS_METHOD : com.zhy.management.system.controller.DeptController.tree
2018-08-09 20:56:21 -参数 : []
2018-08-09 20:56:21 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-08-09 20:56:21 -==> Parameters: 
2018-08-09 20:56:21 -<==      Total: 12
2018-08-09 20:56:21 -耗时 : 3
2018-08-09 20:56:21 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"18","parentId":"13","state":{"opened":true},"text":"hahaha"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"人事"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"自然的恩典"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"福慧学院"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"17","parentId":"9","state":{"opened":true},"text":"人事"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"信息"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"总部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"行政"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"视频部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"德养"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-08-09 20:56:21 -请求地址 : http://127.0.0.1:8000/sys/user/list
2018-08-09 20:56:21 -HTTP METHOD : GET
2018-08-09 20:56:21 -CLASS_METHOD : com.zhy.management.system.controller.UserController.list
2018-08-09 20:56:21 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-08-09 20:56:21 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-08-09 20:56:21 -==> Parameters: 0(Integer), 10(Integer)
2018-08-09 20:56:21 -<==      Total: 7
2018-08-09 20:56:21 -==>  Preparing: select count(*) from sys_user 
2018-08-09 20:56:21 -==> Parameters: 
2018-08-09 20:56:21 -<==      Total: 1
2018-08-09 20:56:21 -耗时 : 8
2018-08-09 20:56:21 -返回值 : com.zhy.management.common.utils.PageUtils@7e56a916
